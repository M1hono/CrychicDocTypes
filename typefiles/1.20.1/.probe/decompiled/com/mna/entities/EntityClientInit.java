package com.mna.entities;

import com.mna.ManaAndArtifice;
import com.mna.entities.renderers.DisplayDamageRenderer;
import com.mna.entities.renderers.ManaweaveRenderer;
import com.mna.entities.renderers.RisingBlockRenderer;
import com.mna.entities.renderers.SentryProjectorRenderer;
import com.mna.entities.renderers.TransitoryBlockRenderer;
import com.mna.entities.renderers.boss.BifrostRenderer;
import com.mna.entities.renderers.boss.CouncilWardenRenderer;
import com.mna.entities.renderers.boss.DemonLordRenderer;
import com.mna.entities.renderers.boss.FaerieQueenRenderer;
import com.mna.entities.renderers.boss.OdinRenderer;
import com.mna.entities.renderers.boss.PigDragonRenderer;
import com.mna.entities.renderers.boss.PumpkinKingRenderer;
import com.mna.entities.renderers.boss.attacks.OrangeChickenRenderer;
import com.mna.entities.renderers.boss.attacks.PumpkinKingEntangleRenderer;
import com.mna.entities.renderers.boss.attacks.PumpkinKingIncinerateRenderer;
import com.mna.entities.renderers.boss.effects.DemonReturnPortalRenderer;
import com.mna.entities.renderers.construct.ConstructAssemblyStandRenderer;
import com.mna.entities.renderers.construct.ConstructRenderer;
import com.mna.entities.renderers.faction.BarklingRenderer;
import com.mna.entities.renderers.faction.BrokerRenderer;
import com.mna.entities.renderers.faction.ChattererRenderer;
import com.mna.entities.renderers.faction.DeathcapRenderer;
import com.mna.entities.renderers.faction.DemonImpRenderer;
import com.mna.entities.renderers.faction.FactionRaidRenderer;
import com.mna.entities.renderers.faction.FactionWarRenderer;
import com.mna.entities.renderers.faction.HulkingZombieRenderer;
import com.mna.entities.renderers.faction.LanternWraithRenderer;
import com.mna.entities.renderers.faction.LichRenderer;
import com.mna.entities.renderers.faction.LivingWardRenderer;
import com.mna.entities.renderers.faction.PixieRenderer;
import com.mna.entities.renderers.faction.SkeletonAssassinRenderer;
import com.mna.entities.renderers.faction.SpellbreakerRenderer;
import com.mna.entities.renderers.faction.WitchHunterRenderer;
import com.mna.entities.renderers.faction.attacks.SkeletonAssassinBoloRenderer;
import com.mna.entities.renderers.faction.attacks.SkeletonAssassinShurikenRenderer;
import com.mna.entities.renderers.faction.attacks.WitchhunterArrowRenderer;
import com.mna.entities.renderers.faction.attacks.WitchhunterTrickshotRenderer;
import com.mna.entities.renderers.item.BubbleBoatRenderer;
import com.mna.entities.renderers.item.MagicBroomRenderer;
import com.mna.entities.renderers.item.PresentItemRenderer;
import com.mna.entities.renderers.item.ThrownWeaponRenderer;
import com.mna.entities.renderers.item.WandCloneRenderer;
import com.mna.entities.renderers.living.MagmooRenderer;
import com.mna.entities.renderers.living.WanderingWizardRenderer;
import com.mna.entities.renderers.ritual.AncientCouncilRenderer;
import com.mna.entities.renderers.ritual.DemonStoneRenderer;
import com.mna.entities.renderers.ritual.DisplayReagentsRenderer;
import com.mna.entities.renderers.ritual.FeyLightRenderer;
import com.mna.entities.renderers.ritual.FlatLandsProjectileRenderer;
import com.mna.entities.renderers.ritual.FlatLandsRenderer;
import com.mna.entities.renderers.ritual.PortalRenderer;
import com.mna.entities.renderers.ritual.RitualRenderer;
import com.mna.entities.renderers.ritual.TimeChangeBallRenderer;
import com.mna.entities.renderers.sorcery.AffinityIconRenderer;
import com.mna.entities.renderers.sorcery.AnimusBlockRenderer;
import com.mna.entities.renderers.sorcery.BasicChanneledSpellRenderer;
import com.mna.entities.renderers.sorcery.BoundBowProjectileRenderer;
import com.mna.entities.renderers.sorcery.DecoyRenderer;
import com.mna.entities.renderers.sorcery.EldrinFlightRenderer;
import com.mna.entities.renderers.sorcery.EntitySpellEmberRenderer;
import com.mna.entities.renderers.sorcery.FillHoleRenderer;
import com.mna.entities.renderers.sorcery.GreaterAnimusRenderer;
import com.mna.entities.renderers.sorcery.InsectSwarmRenderer;
import com.mna.entities.renderers.sorcery.RiftRenderer;
import com.mna.entities.renderers.sorcery.SmiteProjectileRenderer;
import com.mna.entities.renderers.sorcery.SpectralHorseRenderer;
import com.mna.entities.renderers.sorcery.SpellBeamRenderer;
import com.mna.entities.renderers.sorcery.SpellFXRenderer;
import com.mna.entities.renderers.sorcery.SpellProjectileRenderer;
import com.mna.entities.renderers.sorcery.SpellRuneRenderer;
import net.minecraft.client.renderer.entity.CreeperRenderer;
import net.minecraft.client.renderer.entity.EntityRenderers;
import net.minecraft.client.renderer.entity.ThrownItemRenderer;
import net.minecraft.resources.ResourceLocation;
import net.minecraftforge.api.distmarker.Dist;
import net.minecraftforge.api.distmarker.OnlyIn;
import net.minecraftforge.client.event.ModelEvent;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.fml.event.lifecycle.FMLClientSetupEvent;

public class EntityClientInit {

    @SubscribeEvent
    @OnlyIn(Dist.CLIENT)
    public static void registerEntityRenderingHandlers(FMLClientSetupEvent event) {
        EntityRenderers.register(EntityInit.DAMAGE_NUMBERS.get(), context -> new DisplayDamageRenderer(context));
        EntityRenderers.register(EntityInit.REAGENT_ENTITY.get(), DisplayReagentsRenderer::new);
        EntityRenderers.register(EntityInit.AFFINITY_ICON.get(), AffinityIconRenderer::new);
        EntityRenderers.register(EntityInit.SENTRY_PROJECTILE.get(), SentryProjectorRenderer::new);
        EntityRenderers.register(EntityInit.ORANGE_CHICKEN.get(), OrangeChickenRenderer::new);
        EntityRenderers.register(EntityInit.THROWN_WEAPON.get(), ThrownWeaponRenderer::new);
        EntityRenderers.register(EntityInit.ALLFATHER_AXE.get(), ThrownWeaponRenderer::new);
        EntityRenderers.register(EntityInit.BUBBLE_BOAT.get(), BubbleBoatRenderer::new);
        EntityRenderers.register(EntityInit.PRESENTATION_ENTITY.get(), PresentItemRenderer::new);
        EntityRenderers.register(EntityInit.WAND_CLONE.get(), WandCloneRenderer::new);
        EntityRenderers.register(EntityInit.MANAWEAVE_BOTTLE_THROWN.get(), context -> new ThrownItemRenderer(context, 1.0F, true));
        EntityRenderers.register(EntityInit.THROWN_RUNESCRIBE_PATTERN.get(), context -> new ThrownItemRenderer(context, 1.0F, false));
        EntityRenderers.register(EntityInit.WANDERING_WIZARD.get(), WanderingWizardRenderer::new);
        EntityRenderers.register(EntityInit.BROKER.get(), BrokerRenderer::new);
        EntityRenderers.register(EntityInit.SPECTRAL_HORSE.get(), SpectralHorseRenderer::new);
        EntityRenderers.register(EntityInit.MAGMOO.get(), MagmooRenderer::new);
        EntityRenderers.register(EntityInit.MANAWEAVE_ENTITY.get(), ManaweaveRenderer::new);
        EntityRenderers.register(EntityInit.RITUAL_ENTITY.get(), RitualRenderer::new);
        EntityRenderers.register(EntityInit.FILL_HOLE.get(), FillHoleRenderer::new);
        EntityRenderers.register(EntityInit.PORTAL_ENTITY.get(), PortalRenderer::new);
        EntityRenderers.register(EntityInit.STARBALL_ENTITY.get(), TimeChangeBallRenderer::new);
        EntityRenderers.register(EntityInit.FLAT_LANDS.get(), FlatLandsRenderer::new);
        EntityRenderers.register(EntityInit.FLAT_LANDS_PROJECTILE.get(), FlatLandsProjectileRenderer::new);
        EntityRenderers.register(EntityInit.ANIMATED_CONSTRUCT.get(), ConstructRenderer::new);
        EntityRenderers.register(EntityInit.MAGIC_BROOM.get(), MagicBroomRenderer::new);
        EntityRenderers.register(EntityInit.CONSTRUCT_ASSEMBLY_STAND.get(), ConstructAssemblyStandRenderer::new);
        EntityRenderers.register(EntityInit.GREATER_ANIMUS.get(), GreaterAnimusRenderer::new);
        EntityRenderers.register(EntityInit.INSECT_SWARM.get(), InsectSwarmRenderer::new);
        EntityRenderers.register(EntityInit.IMPULSE_PROJECTILE.get(), context -> new ThrownItemRenderer(context, 1.0F, false));
        EntityRenderers.register(EntityInit.BOUND_BOW_PROJECTILE.get(), BoundBowProjectileRenderer::new);
        EntityRenderers.register(EntityInit.ELDRIN_FLIGHT.get(), EldrinFlightRenderer::new);
        EntityRenderers.register(EntityInit.DECOY_ENTITY.get(), context -> new DecoyRenderer(context, false));
        EntityRenderers.register(EntityInit.ANIMUS_BLOCK.get(), AnimusBlockRenderer::new);
        EntityRenderers.register(EntityInit.SPELL_WALL.get(), BasicChanneledSpellRenderer::new);
        EntityRenderers.register(EntityInit.SPELL_WAVE.get(), BasicChanneledSpellRenderer::new);
        EntityRenderers.register(EntityInit.SPELL_FISSURE.get(), BasicChanneledSpellRenderer::new);
        EntityRenderers.register(EntityInit.SPELL_FOCUS.get(), BasicChanneledSpellRenderer::new);
        EntityRenderers.register(EntityInit.SPELL_EMBER.get(), EntitySpellEmberRenderer::new);
        EntityRenderers.register(EntityInit.SPELL_EMANATION.get(), BasicChanneledSpellRenderer::new);
        EntityRenderers.register(EntityInit.SPELL_CONE.get(), BasicChanneledSpellRenderer::new);
        EntityRenderers.register(EntityInit.SPELL_WRATH.get(), BasicChanneledSpellRenderer::new);
        EntityRenderers.register(EntityInit.SPELL_BEAM.get(), SpellBeamRenderer::new);
        EntityRenderers.register(EntityInit.SPELL_PROJECTILE.get(), SpellProjectileRenderer::new);
        EntityRenderers.register(EntityInit.SMITE_PROJECTILE.get(), SmiteProjectileRenderer::new);
        EntityRenderers.register(EntityInit.SPELL_FX.get(), SpellFXRenderer::new);
        EntityRenderers.register(EntityInit.SPELL_RUNE.get(), SpellRuneRenderer::new);
        EntityRenderers.register(EntityInit.RISING_BLOCK_ENTITY.get(), context -> new RisingBlockRenderer(context));
        EntityRenderers.register(EntityInit.STATIONARY_BLOCK_ENTITY.get(), context -> new TransitoryBlockRenderer(context));
        EntityRenderers.register(EntityInit.RIFT.get(), RiftRenderer::new);
        EntityRenderers.register(EntityInit.ILLUSION_CREEPER.get(), CreeperRenderer::new);
        EntityRenderers.register(EntityInit.FACTION_RAID_ENTITY.get(), FactionRaidRenderer::new);
        EntityRenderers.register(EntityInit.MUSHROOM_SOLDIER.get(), context -> new DeathcapRenderer(context));
        EntityRenderers.register(EntityInit.PIXIE.get(), context -> new PixieRenderer(context));
        EntityRenderers.register(EntityInit.BARKLING.get(), context -> new BarklingRenderer(context));
        EntityRenderers.register(EntityInit.DEMON_IMP.get(), context -> new DemonImpRenderer(context));
        EntityRenderers.register(EntityInit.LANTERN_WRAITH.get(), context -> new LanternWraithRenderer(context));
        EntityRenderers.register(EntityInit.HULKING_ZOMBIE.get(), context -> new HulkingZombieRenderer(context));
        EntityRenderers.register(EntityInit.SKELETON_ASSASSIN.get(), context -> new SkeletonAssassinRenderer(context));
        EntityRenderers.register(EntityInit.SKELETON_ASSASSIN_BOLO.get(), context -> new SkeletonAssassinBoloRenderer(context));
        EntityRenderers.register(EntityInit.SKELETON_ASSASSIN_SHURIKEN.get(), SkeletonAssassinShurikenRenderer::new);
        EntityRenderers.register(EntityInit.CHATTERER.get(), context -> new ChattererRenderer(context));
        EntityRenderers.register(EntityInit.LIVING_WARD.get(), context -> new LivingWardRenderer(context));
        EntityRenderers.register(EntityInit.SPELLBREAKER.get(), context -> new SpellbreakerRenderer(context));
        EntityRenderers.register(EntityInit.WITCH_HUNTER.get(), context -> new WitchHunterRenderer(context));
        EntityRenderers.register(EntityInit.WITCH_HUNTER_TRICKSHOT.get(), WitchhunterTrickshotRenderer::new);
        EntityRenderers.register(EntityInit.WITCH_HUNTER_ARROW.get(), WitchhunterArrowRenderer::new);
        EntityRenderers.register(EntityInit.ANCIENT_COUNCIL.get(), AncientCouncilRenderer::new);
        EntityRenderers.register(EntityInit.FACTION_WAR.get(), FactionWarRenderer::new);
        EntityRenderers.register(EntityInit.PUMPKIN_KING.get(), context -> new PumpkinKingRenderer(context));
        EntityRenderers.register(EntityInit.PUMPKIN_KING_INCINERATE.get(), context -> new PumpkinKingIncinerateRenderer(context));
        EntityRenderers.register(EntityInit.PUMPKIN_KING_ENTANGLE.get(), context -> new PumpkinKingEntangleRenderer(context));
        EntityRenderers.register(EntityInit.ODIN.get(), context -> new OdinRenderer(context));
        EntityRenderers.register(EntityInit.BIFROST.get(), BifrostRenderer::new);
        EntityRenderers.register(EntityInit.COUNCIL_WARDEN.get(), CouncilWardenRenderer::new);
        EntityRenderers.register(EntityInit.DEMON_STONE.get(), DemonStoneRenderer::new);
        EntityRenderers.register(EntityInit.DEMON_LORD.get(), DemonLordRenderer::new);
        EntityRenderers.register(EntityInit.DEMON_RETURN_PORTAL.get(), DemonReturnPortalRenderer::new);
        EntityRenderers.register(EntityInit.LICH.get(), context -> new LichRenderer(context));
        EntityRenderers.register(EntityInit.FEY_LIGHT.get(), FeyLightRenderer::new);
        EntityRenderers.register(EntityInit.FAERIE_QUEEN.get(), FaerieQueenRenderer::new);
        EntityRenderers.register(EntityInit.PIG_DRAGON.get(), context -> new PigDragonRenderer(context));
        ManaAndArtifice.LOGGER.info("M&A -> Entity Renderers Registered");
    }

    @SubscribeEvent
    @OnlyIn(Dist.CLIENT)
    public static void onRegisterSpecialModels(ModelEvent.RegisterAdditional event) {
        event.register(ConstructRenderer.model_brb_mining);
        event.register(ConstructRenderer.model_brb_adventuring);
        event.register(ConstructRenderer.model_brb_hunting);
        event.register(SpellProjectileRenderer.model_water);
        event.register(SpellProjectileRenderer.model_water2);
        event.register(SpellProjectileRenderer.model_ice);
        event.register(SpellProjectileRenderer.model_ice2);
        event.register(SpellProjectileRenderer.model_earth);
        event.register(SpellProjectileRenderer.model_earth2);
        event.register(SpellProjectileRenderer.model_wind);
        event.register(SpellProjectileRenderer.model_wind2);
        event.register(SpellProjectileRenderer.model_ender);
        event.register(SpellProjectileRenderer.model_ender2);
        event.register(PortalRenderer.model_mushroom);
        event.register(PortalRenderer.model_pink_flower);
        event.register(PortalRenderer.model_yellow_flower);
        event.register(PortalRenderer.model_purple_flower);
        event.register(PortalRenderer.model_council_wedge);
        event.register(PortalRenderer.model_undead_fissure);
        event.register(PortalRenderer.model_demon_portal);
        event.register(PortalRenderer.model_demon_portal_ring);
        for (ResourceLocation rLoc : PortalRenderer.model_demon_portal_runes) {
            event.register(rLoc);
        }
        for (ResourceLocation rLoc : PortalRenderer.model_demon_portal_stones) {
            event.register(rLoc);
        }
    }
}