/// <reference path="./internal_*.d.ts" />
declare namespace io.ejekta.kambrik.internal.mixins {
    interface StructurePoolAccessor {
        abstract getElements(): Internal.ObjectArrayList<Internal.StructurePoolElement>;
        abstract getElementCounts(): Internal.List<com.mojang.datafixers.util.Pair<Internal.StructurePoolElement, number>>;
        abstract setElementCounts(arg0: Internal.List_<com.mojang.datafixers.util.Pair<Internal.StructurePoolElement, number>>): void;
        get elements(): Internal.ObjectArrayList<Internal.StructurePoolElement>
        get elementCounts(): Internal.List<com.mojang.datafixers.util.Pair<Internal.StructurePoolElement, number>>
        set elementCounts(arg0: Internal.List_<com.mojang.datafixers.util.Pair<Internal.StructurePoolElement, number>>)
    }
    type StructurePoolAccessor_ = StructurePoolAccessor;
}
declare namespace com.github.alexmodguy.alexscaves.server.item {
    interface KeybindUsingArmor {
        abstract onKeyPacket(arg0: Internal.Entity_, arg1: Internal.ItemStack_, arg2: number): void;
        (arg0: Internal.Entity, arg1: Internal.ItemStack, arg2: number): void;
    }
    type KeybindUsingArmor_ = ((arg0: Internal.Entity, arg1: Internal.ItemStack, arg2: number)=> void) | KeybindUsingArmor;
}
declare namespace Internal {
    class CrashReport {
        constructor(arg0: string, arg1: Internal.Throwable_)
        getClass(): typeof any;
        static preload(): void;
        getException(): Internal.Throwable;
        getTitle(): string;
        toString(): string;
        static forThrowable(arg0: Internal.Throwable_, arg1: string): Internal.CrashReport;
        saveToFile(arg0: Internal.File_): boolean;
        notifyAll(): void;
        getSystemReport(): Internal.SystemReport;
        getExceptionMessage(): string;
        getDetails(arg0: Internal.StringBuilder_): void;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        getFriendlyReport(): string;
        addCategory(arg0: string): Internal.CrashReportCategory;
        hashCode(): number;
        getSaveFile(): Internal.File;
        wait(): void;
        wait(arg0: number): void;
        addCategory(arg0: string, arg1: number): Internal.CrashReportCategory;
        equals(arg0: any): boolean;
        getDetails(): string;
        get class(): typeof any
        get exception(): Internal.Throwable
        get title(): string
        get systemReport(): Internal.SystemReport
        get exceptionMessage(): string
        get friendlyReport(): string
        get saveFile(): Internal.File
        get details(): string
    }
    type CrashReport_ = CrashReport;
    interface RandomGenerator {
        ints(arg0: number, arg1: number): Internal.IntStream;
        nextFloat(arg0: number): number;
        getDefault(): this;
        abstract nextLong(): number;
        nextDouble(): number;
        nextLong(arg0: number, arg1: number): number;
        nextGaussian(): number;
        doubles(arg0: number, arg1: number, arg2: number): Internal.DoubleStream;
        nextDouble(arg0: number): number;
        nextInt(arg0: number): number;
        nextFloat(): number;
        nextLong(arg0: number): number;
        ints(arg0: number, arg1: number, arg2: number): Internal.IntStream;
        nextFloat(arg0: number, arg1: number): number;
        of(arg0: string): this;
        doubles(): Internal.DoubleStream;
        nextInt(): number;
        nextBytes(arg0: number[]): void;
        longs(arg0: number): Internal.LongStream;
        longs(arg0: number, arg1: number, arg2: number): Internal.LongStream;
        nextBoolean(): boolean;
        nextDouble(arg0: number, arg1: number): number;
        nextExponential(): number;
        longs(arg0: number, arg1: number): Internal.LongStream;
        nextInt(arg0: number, arg1: number): number;
        longs(): Internal.LongStream;
        isDeprecated(): boolean;
        doubles(arg0: number): Internal.DoubleStream;
        nextGaussian(arg0: number, arg1: number): number;
        ints(): Internal.IntStream;
        ints(arg0: number): Internal.IntStream;
        doubles(arg0: number, arg1: number): Internal.DoubleStream;
        get "default"(): Internal.RandomGenerator
        get deprecated(): boolean
        (): number;
    }
    type RandomGenerator_ = (()=> number) | RandomGenerator;
    interface StructurePieceAccessor {
        abstract addPiece(arg0: Internal.StructurePiece_): void;
        abstract findCollisionPiece(arg0: Internal.BoundingBox_): Internal.StructurePiece;
    }
    type StructurePieceAccessor_ = StructurePieceAccessor;
    interface SignApplicator {
        abstract tryApplyToSign(arg0: Internal.Level_, arg1: Internal.SignBlockEntity_, arg2: boolean, arg3: Internal.Player_): boolean;
        canApplyToSign(arg0: Internal.SignText_, arg1: Internal.Player_): boolean;
        (arg0: Internal.Level, arg1: Internal.SignBlockEntity, arg2: boolean, arg3: Internal.Player): boolean;
    }
    type SignApplicator_ = ((arg0: Internal.Level, arg1: Internal.SignBlockEntity, arg2: boolean, arg3: Internal.Player)=> boolean) | SignApplicator;
    interface SleepingBlockEntity {
        startSleeping(): boolean;
        abstract getSleepingTicker(): Internal.TickingBlockEntity;
        wakeUpNow(): void;
        abstract setTickWrapper(arg0: Internal.RebindableTickingBlockEntityWrapperAccessor_): void;
        isSleeping(): boolean;
        setTicker(arg0: Internal.TickingBlockEntity_): void;
        abstract setSleepingTicker(arg0: Internal.TickingBlockEntity_): void;
        sleepOnlyCurrentTick(): void;
        abstract getTickWrapper(): Internal.RebindableTickingBlockEntityWrapperAccessor;
        get sleepingTicker(): Internal.TickingBlockEntity
        set tickWrapper(arg0: Internal.RebindableTickingBlockEntityWrapperAccessor_)
        get sleeping(): boolean
        set ticker(arg0: Internal.TickingBlockEntity_)
        set sleepingTicker(arg0: Internal.TickingBlockEntity_)
        get tickWrapper(): Internal.RebindableTickingBlockEntityWrapperAccessor
        readonly SLEEPING_BLOCK_ENTITY_TICKER: Internal.TickingBlockEntity;
    }
    type SleepingBlockEntity_ = SleepingBlockEntity;
    abstract class MethodHandle implements Internal.Constable {
        getClass(): typeof any;
        invokeExact(...arg0: any[]): any;
        invokeWithArguments(...arg0: any[]): any;
        type(): Internal.MethodType;
        isVarargsCollector(): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        asCollector(arg0: typeof any, arg1: number): this;
        toString(): string;
        describeConstable(): Internal.Optional<Internal.MethodHandleDesc>;
        notifyAll(): void;
        withVarargs(arg0: boolean): this;
        asSpreader(arg0: typeof any, arg1: number): this;
        asFixedArity(): this;
        asVarargsCollector(arg0: typeof any): this;
        asCollector(arg0: number, arg1: typeof any, arg2: number): this;
        "invokeWithArguments(java.lang.Object[])"(...arg0: any[]): any;
        hashCode(): number;
        invokeWithArguments(arg0: Internal.List_<any>): any;
        wait(): void;
        invoke(...arg0: any[]): any;
        asType(arg0: Internal.MethodType_): this;
        wait(arg0: number): void;
        asSpreader(arg0: number, arg1: typeof any, arg2: number): this;
        "invokeWithArguments(java.util.List)"(arg0: Internal.List_<any>): any;
        equals(arg0: any): boolean;
        bindTo(arg0: any): this;
        get class(): typeof any
        get varargsCollector(): boolean
    }
    type MethodHandle_ = MethodHandle;
    class SymbolUsage$VariableCounts {
        constructor()
        getClass(): typeof any;
        hashCode(): number;
        toString(): string;
        wait(): void;
        notifyAll(): void;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        get class(): typeof any
        decl: number;
        write: number;
        read: number;
    }
    type SymbolUsage$VariableCounts_ = SymbolUsage$VariableCounts;
    class ScreenEventListener implements Internal.NarratableEntry, Internal.GuiEventListener {
        constructor(arg0: Internal.IGuiIntegratedParent_, arg1: Internal.Screen_)
        charTyped(arg0: string, arg1: number): boolean;
        getClass(): typeof any;
        isFocused(): boolean;
        setFocused(arg0: boolean): void;
        isActive(): boolean;
        getTabOrderGroup(): number;
        mouseScrolled(arg0: number, arg1: number, arg2: number): boolean;
        mouseClicked(arg0: number, arg1: number, arg2: number): boolean;
        keyReleased(arg0: number, arg1: number, arg2: number): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        mouseDragged(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): boolean;
        mouseMoved(arg0: number, arg1: number): void;
        getRectangle(): Internal.ScreenRectangle;
        nextFocusPath(arg0: Internal.FocusNavigationEvent_): Internal.ComponentPath;
        toString(): string;
        narrationPriority(): Internal.NarratableEntry$NarrationPriority;
        notifyAll(): void;
        getOffsetX(): number;
        mouseReleased(arg0: number, arg1: number, arg2: number): boolean;
        getOffsetY(): number;
        tick(): void;
        keyPressed(arg0: number, arg1: number, arg2: number): boolean;
        hashCode(): number;
        getCurrentFocusPath(): Internal.ComponentPath;
        updateNarration(arg0: Internal.NarrationElementOutput_): void;
        wait(): void;
        getEventTime(): number;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        isMouseOver(arg0: number, arg1: number): boolean;
        get class(): typeof any
        get focused(): boolean
        set focused(arg0: boolean)
        get active(): boolean
        get tabOrderGroup(): number
        get rectangle(): Internal.ScreenRectangle
        get offsetX(): number
        get offsetY(): number
        get currentFocusPath(): Internal.ComponentPath
        get eventTime(): number
        static readonly DOUBLE_CLICK_TIME: (0.2) & (number);
    }
    type ScreenEventListener_ = ScreenEventListener;
    class ContextUtils$EntityLootContext {
        constructor(damageSource: Internal.DamageSource_, lootingMultiplier: number, hitByPlayer: boolean, entity: Internal.LivingEntity_)
        getClass(): typeof any;
        hashCode(): number;
        toString(): string;
        wait(): void;
        notifyAll(): void;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        get class(): typeof any
        /**
         * Whether the entity was hit by a player or not
        */
        readonly hitByPlayer: boolean;
        /**
         * The source of the damage causing the loot
        */
        readonly damageSource: Internal.DamageSource;
        /**
         * The looting multiplier for the loot
        */
        readonly lootingMultiplier: number;
        /**
         * The living entity involved
        */
        readonly entity: Internal.LivingEntity;
    }
    type ContextUtils$EntityLootContext_ = ContextUtils$EntityLootContext;
    class ItemClayMug extends com.mna.api.items.TieredItem {
        constructor()
        getDrinkingSound(): Internal.SoundEvent;
        getShareTag(arg0: Internal.ItemStack_): Internal.CompoundTag;
        setRarity(arg0: Internal.Rarity_): void;
        isEnderMask(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.EnderMan_): boolean;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        getDestroySpeed(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): number;
        getBurnTime(arg0: Internal.ItemStack_, arg1: Internal.RecipeType_<any>): number;
        moonlight$addAdditionalBehavior(placementOverride: Internal.AdditionalItemPlacement_): void;
        /**
         * @deprecated
        */
        onDestroyed(arg0: Internal.ItemEntity_): void;
        isFireResistant(): boolean;
        onItemUseFirst(arg0: Internal.ItemStack_, arg1: Internal.UseOnContext_): Internal.InteractionResult;
        onCraftedBy(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        isComplex(): boolean;
        isCorrectToolForDrops(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): boolean;
        isPiglinCurrency(arg0: Internal.ItemStack_): boolean;
        getEnchantmentValue(arg0: Internal.ItemStack_): number;
        canDisableShield(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.LivingEntity_, arg3: Internal.LivingEntity_): boolean;
        onUseTick(arg0: Internal.Level_, arg1: Internal.LivingEntity_, arg2: Internal.ItemStack_, arg3: number): void;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        canBeHurtBy(arg0: Internal.DamageSource_): boolean;
        /**
         * @deprecated
        */
        getFoodProperties(): Internal.FoodProperties;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): boolean;
        getDescriptionId(): string;
        getUseAnimation(arg0: Internal.ItemStack_): Internal.UseAnim;
        isValidRepairItem(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        moonlight$getClientAnimationExtension(): any;
        getXpRepairRatio(arg0: Internal.ItemStack_): number;
        isBookEnchantable(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getCreativeTab(): string;
        initCapabilities(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): Internal.ICapabilityProvider;
        asItem(): Internal.Item;
        onDroppedByPlayer(arg0: Internal.ItemStack_, arg1: Internal.Player_): boolean;
        getTypeData(): Internal.CompoundTag;
        getDefaultInstance(): Internal.ItemStack;
        getDefaultTooltipHideFlags(arg0: Internal.ItemStack_): number;
        getCreatorModId(arg0: Internal.ItemStack_): string;
        canContinueUsing(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        setMaxStackSize(arg0: number): void;
        setBurnTime(i: number): void;
        getFoodProperties(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): Internal.FoodProperties;
        getBarWidth(arg0: Internal.ItemStack_): number;
        setMaxDamage(arg0: number): void;
        getItem(): Internal.Item;
        getBarColor(arg0: Internal.ItemStack_): number;
        onDestroyed(arg0: Internal.ItemEntity_, arg1: Internal.DamageSource_): void;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        onLeftClickEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): boolean;
        getItemBuilder(): Internal.ItemBuilder;
        makesPiglinsNeutral(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxDamage(): number;
        removeAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_): void;
        asIngredient(): Internal.Ingredient;
        getDescription(): net.minecraft.network.chat.Component;
        /**
         * @deprecated
        */
        hasCraftingRemainingItem(): boolean;
        canPerformAction(arg0: Internal.ItemStack_, arg1: Internal.ToolAction_): boolean;
        getClass(): typeof any;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        static byId(arg0: number): Internal.Item;
        getRenderPropertiesInternal(): any;
        onEntityItemUpdate(arg0: Internal.ItemStack_, arg1: Internal.ItemEntity_): boolean;
        interactLivingEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.LivingEntity_, arg3: Internal.InteractionHand_): Internal.InteractionResult;
        moonlight$getAdditionalBehavior(): Internal.AdditionalItemPlacement;
        moonlight$setClientAnimationExtension(obj: any): void;
        getCraftingRemainingItem(arg0: Internal.ItemStack_): Internal.ItemStack;
        useOn(arg0: Internal.UseOnContext_): Internal.InteractionResult;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        onArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        getRarity(arg0: Internal.ItemStack_): Internal.Rarity;
        setItemBuilder(b: Internal.ItemBuilder_): void;
        shouldCauseBlockBreakReset(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        damageItem<T extends Internal.LivingEntity>(arg0: Internal.ItemStack_, arg1: number, arg2: T, arg3: Internal.Consumer_<T>): number;
        setCraftingRemainingItemFTBL(arg0: Internal.Item_): void;
        attachCapability(capabilityBuilder: Internal.CapabilityBuilder_<any, any, any>): void;
        setAttackDamage(attackDamage: number): void;
        isEdible(): boolean;
        getTooltipImage(arg0: Internal.ItemStack_): Internal.Optional<Internal.TooltipComponent>;
        arch$holder(): Internal.Holder<Internal.Item>;
        getArmorTexture(arg0: Internal.ItemStack_, arg1: Internal.Entity_, arg2: Internal.EquipmentSlot_, arg3: string): string;
        getAttributes(attribute: Internal.Attribute_): Internal.List<Internal.AttributeModifier>;
        use(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.InteractionHand_): Internal.InteractionResultHolder<Internal.ItemStack>;
        toString(): string;
        /**
         * @deprecated
        */
        getEnchantmentValue(): number;
        setArmorToughness(armorToughness: number): void;
        notifyAll(): void;
        getId(): string;
        getTier(arg0: Internal.Level_, arg1: Internal.ItemStack_): number;
        isEnchantable(arg0: Internal.ItemStack_): boolean;
        getSweepHitBox(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): Internal.AABB;
        getEnchantmentLevel(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): number;
        getAllEnchantments(arg0: Internal.ItemStack_): Internal.Map<Internal.Enchantment, number>;
        wait(arg0: number): void;
        getDigSpeed(): number;
        setTier(c: Internal.Consumer_<Internal.MutableToolTier>): void;
        overrideStackedOnOther(arg0: Internal.ItemStack_, arg1: Internal.Slot_, arg2: Internal.ClickAction_, arg3: Internal.Player_): boolean;
        setFoodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        onBlockStartBreak(arg0: Internal.ItemStack_, arg1: BlockPos_, arg2: Internal.Player_): boolean;
        elytraFlightTick(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): boolean;
        getMaxDamage(arg0: Internal.ItemStack_): number;
        isFoil(arg0: Internal.ItemStack_): boolean;
        "setFoodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_): void;
        isRepairable(arg0: Internal.ItemStack_): boolean;
        isDamageable(arg0: Internal.ItemStack_): boolean;
        useOnRelease(arg0: Internal.ItemStack_): boolean;
        canAttackBlock(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        canGrindstoneRepair(arg0: Internal.ItemStack_): boolean;
        notify(): void;
        setDigSpeed(speed: number): void;
        getDescriptionId(arg0: Internal.ItemStack_): string;
        releaseUsing(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_, arg3: number): void;
        setAttackSpeed(attackSpeed: number): void;
        isBarVisible(arg0: Internal.ItemStack_): boolean;
        canWalkOnPowderedSnow(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        getUseDuration(arg0: Internal.ItemStack_): number;
        onStopUsing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): void;
        isNotReplaceableByPickAction(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: number): boolean;
        /**
         * @deprecated
        */
        getMaxStackSize(): number;
        resolveTier(arg0: Internal.Level_, arg1: Internal.ItemStack_): number;
        /**
         * @deprecated
        */
        static byBlock(arg0: Internal.Block_): Internal.Item;
        setCachedTier(arg0: number): void;
        isDamaged(arg0: Internal.ItemStack_): boolean;
        getCachedTier(): number;
        handler$dpg000$initializeClient(consumer: Internal.Consumer_<any>, ci: Internal.CallbackInfo_): void;
        setSneakBypass(): com.mna.api.items.TieredItem;
        canFitInsideContainerItems(): boolean;
        wait(): void;
        getHighlightTip(arg0: Internal.ItemStack_, arg1: net.minecraft.network.chat.Component_): net.minecraft.network.chat.Component;
        isCorrectToolForDrops(arg0: Internal.BlockState_): boolean;
        verifyTagAfterLoad(arg0: Internal.CompoundTag_): void;
        canEquip(arg0: Internal.ItemStack_, arg1: Internal.EquipmentSlot_, arg2: Internal.Entity_): boolean;
        "setFoodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        finishUsingItem(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_): Internal.ItemStack;
        setArmorKnockbackResistance(knockbackResistance: number): void;
        setFireResistant(arg0: boolean): void;
        onInventoryTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_, arg3: number, arg4: number): void;
        getEatingSound(): Internal.SoundEvent;
        hasCustomEntity(arg0: Internal.ItemStack_): boolean;
        canBeDepleted(): boolean;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientItemExtensions>): void;
        getDamage(arg0: Internal.ItemStack_): number;
        mineBlock(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.BlockState_, arg3: BlockPos_, arg4: Internal.LivingEntity_): boolean;
        wait(arg0: number, arg1: number): void;
        setNameKey(arg0: string): void;
        readShareTag(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): void;
        getEquipmentSlot(arg0: Internal.ItemStack_): Internal.EquipmentSlot;
        getLightColor(player: Internal.Player_, stack: Internal.ItemStack_): Vec3f;
        getName(arg0: Internal.ItemStack_): net.minecraft.network.chat.Component;
        /**
         * @deprecated
        */
        getDefaultAttributeModifiers(arg0: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        arch$registryName(): ResourceLocation;
        getIdLocation(): ResourceLocation;
        getAttributeModifiers(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getMod(): string;
        canElytraFly(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Item>;
        createEntity(arg0: Internal.Level_, arg1: Internal.Entity_, arg2: Internal.ItemStack_): Internal.Entity;
        setArmorProtection(armorProtection: number): void;
        getLightEmission(player: Internal.Player_, stack: Internal.ItemStack_): number;
        onEntitySwing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        getEntityLifespan(arg0: Internal.ItemStack_, arg1: Internal.Level_): number;
        inventoryTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Entity_, arg3: number, arg4: boolean): void;
        hurtEnemy(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: Internal.LivingEntity_): boolean;
        setDamage(arg0: Internal.ItemStack_, arg1: number): void;
        /**
         * @deprecated
        */
        getCraftingRemainingItem(): Internal.Item;
        getTypeItemStackKey(): Internal.ItemStackKey;
        hasCraftingRemainingItem(arg0: Internal.ItemStack_): boolean;
        shouldOverrideMultiplayerNbt(): boolean;
        getMaxStackSize(arg0: Internal.ItemStack_): number;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        static getId(arg0: Internal.Item_): number;
        overrideOtherStackedOnMe(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_, arg5: Internal.SlotAccess_): boolean;
        setFoodProperties(arg0: Internal.FoodProperties_): void;
        doesSneakBypassUse(arg0: Internal.ItemStack_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        setCraftingRemainder(arg0: Internal.Item_): void;
        shouldCauseReequipAnimation(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: boolean): boolean;
        onHorseArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Mob_): void;
        addAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_, name: string, d: number, operation: Internal.AttributeModifier$Operation_): void;
        equals(arg0: any): boolean;
        get drinkingSound(): Internal.SoundEvent
        set rarity(arg0: Internal.Rarity_)
        get fireResistant(): boolean
        get complex(): boolean
        /**
         * @deprecated
        */
        get foodProperties(): Internal.FoodProperties
        get descriptionId(): string
        get creativeTab(): string
        get typeData(): Internal.CompoundTag
        get defaultInstance(): Internal.ItemStack
        set maxStackSize(arg0: number)
        set burnTime(i: number)
        set maxDamage(arg0: number)
        get item(): Internal.Item
        get itemBuilder(): Internal.ItemBuilder
        /**
         * @deprecated
        */
        get maxDamage(): number
        get description(): net.minecraft.network.chat.Component
        get class(): typeof any
        get renderPropertiesInternal(): any
        set itemBuilder(b: Internal.ItemBuilder_)
        set craftingRemainingItemFTBL(arg0: Internal.Item_)
        set attackDamage(attackDamage: number)
        get edible(): boolean
        /**
         * @deprecated
        */
        get enchantmentValue(): number
        set armorToughness(armorToughness: number)
        get id(): string
        get digSpeed(): number
        set tier(c: Internal.Consumer_<Internal.MutableToolTier>)
        set foodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set "foodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_)
        set digSpeed(speed: number)
        set attackSpeed(attackSpeed: number)
        /**
         * @deprecated
        */
        get maxStackSize(): number
        set cachedTier(arg0: number)
        get cachedTier(): number
        set "foodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set armorKnockbackResistance(knockbackResistance: number)
        set fireResistant(arg0: boolean)
        get eatingSound(): Internal.SoundEvent
        set nameKey(arg0: string)
        get idLocation(): ResourceLocation
        get mod(): string
        set armorProtection(armorProtection: number)
        /**
         * @deprecated
        */
        get craftingRemainingItem(): Internal.Item
        get typeItemStackKey(): Internal.ItemStackKey
        set foodProperties(arg0: Internal.FoodProperties_)
        set craftingRemainder(arg0: Internal.Item_)
    }
    type ItemClayMug_ = ItemClayMug;
    class ArcaneFurnaceRecipeSerializer extends Internal.AMRecipeBaseSerializer<Internal.ArcaneFurnaceRecipe> {
        constructor()
        getClass(): typeof any;
        "fromNetwork(net.minecraft.resources.ResourceLocation,net.minecraft.network.FriendlyByteBuf)"(arg0: ResourceLocation_, arg1: Internal.FriendlyByteBuf_): Internal.ArcaneFurnaceRecipe;
        "fromNetwork(net.minecraft.resources.ResourceLocation,net.minecraft.network.FriendlyByteBuf)"(arg0: ResourceLocation_, arg1: Internal.FriendlyByteBuf_): Internal.Recipe<any>;
        fromNetwork(arg0: ResourceLocation_, arg1: Internal.FriendlyByteBuf_): Internal.ArcaneFurnaceRecipe;
        readExtra(arg0: ResourceLocation_, arg1: Internal.JsonObject_): Internal.AMRecipeBase;
        fromJson(arg0: ResourceLocation_, arg1: Internal.JsonObject_): Internal.ArcaneFurnaceRecipe;
        toNetwork(arg0: Internal.FriendlyByteBuf_, arg1: Internal.Recipe_<any>): void;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        "readExtra(net.minecraft.resources.ResourceLocation,net.minecraft.network.FriendlyByteBuf)"(arg0: ResourceLocation_, arg1: Internal.FriendlyByteBuf_): Internal.AMRecipeBase;
        static register<S extends Internal.RecipeSerializer<T>, T extends Internal.Recipe<any>>(arg0: string, arg1: S): S;
        writeExtra(arg0: Internal.FriendlyByteBuf_, arg1: Internal.AMRecipeBase_): void;
        fromNetwork(arg0: ResourceLocation_, arg1: Internal.FriendlyByteBuf_): Internal.Recipe<any>;
        toString(): string;
        "toNetwork(net.minecraft.network.FriendlyByteBuf,net.minecraft.world.item.crafting.Recipe)"(arg0: Internal.FriendlyByteBuf_, arg1: Internal.Recipe_<any>): void;
        toNetwork(arg0: Internal.FriendlyByteBuf_, arg1: Internal.ArcaneFurnaceRecipe_): void;
        fromJson(arg0: ResourceLocation_, arg1: Internal.JsonObject_, arg2: Internal.ICondition$IContext_): Internal.ArcaneFurnaceRecipe;
        notifyAll(): void;
        "readExtra(net.minecraft.resources.ResourceLocation,com.google.gson.JsonObject)"(arg0: ResourceLocation_, arg1: Internal.JsonObject_): Internal.AMRecipeBase;
        "fromJson(net.minecraft.resources.ResourceLocation,com.google.gson.JsonObject)"(arg0: ResourceLocation_, arg1: Internal.JsonObject_): Internal.Recipe<any>;
        "writeExtra(net.minecraft.network.FriendlyByteBuf,com.mna.recipes.arcanefurnace.ArcaneFurnaceRecipe)"(arg0: Internal.FriendlyByteBuf_, arg1: Internal.ArcaneFurnaceRecipe_): void;
        hashCode(): number;
        fromJson(arg0: ResourceLocation_, arg1: Internal.JsonObject_): Internal.Recipe<any>;
        wait(): void;
        "toNetwork(net.minecraft.network.FriendlyByteBuf,com.mna.recipes.arcanefurnace.ArcaneFurnaceRecipe)"(arg0: Internal.FriendlyByteBuf_, arg1: Internal.ArcaneFurnaceRecipe_): void;
        writeExtra(arg0: Internal.FriendlyByteBuf_, arg1: Internal.ArcaneFurnaceRecipe_): void;
        wait(arg0: number): void;
        "fromJson(net.minecraft.resources.ResourceLocation,com.google.gson.JsonObject)"(arg0: ResourceLocation_, arg1: Internal.JsonObject_): Internal.ArcaneFurnaceRecipe;
        readExtra(arg0: ResourceLocation_, arg1: Internal.FriendlyByteBuf_): Internal.AMRecipeBase;
        equals(arg0: any): boolean;
        "writeExtra(net.minecraft.network.FriendlyByteBuf,com.mna.recipes.AMRecipeBase)"(arg0: Internal.FriendlyByteBuf_, arg1: Internal.AMRecipeBase_): void;
        get class(): typeof any
    }
    type ArcaneFurnaceRecipeSerializer_ = ArcaneFurnaceRecipeSerializer;
    class FlaxBlock extends Internal.CropBlock implements Internal.IBeeGrowable {
        constructor(properties: Internal.BlockBehaviour$Properties_)
        /**
         * @deprecated
        */
        getSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        /**
         * @deprecated
        */
        getVisualShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        performBonemeal(arg0: Internal.ServerLevel_, arg1: Internal.RandomSource_, arg2: BlockPos_, arg3: Internal.BlockState_): void;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number, arg5: number): void;
        static popResource(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.ItemStack_): void;
        setRandomTickCallback(callback: Internal.Consumer_<any>): void;
        getBeaconColorMultiplier(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): number[];
        stepOn(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Entity_): void;
        getPistonPushReaction(arg0: Internal.BlockState_): Internal.PushReaction;
        getExpDrop(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.RandomSource_, arg3: BlockPos_, arg4: number, arg5: number): number;
        /**
         * @deprecated
        */
        getExplosionResistance(): number;
        asItem(): Internal.Item;
        shouldDisplayFluidOverlay(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        triggerEvent(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: number, arg4: number): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_, arg6: boolean): void;
        getTypeData(): Internal.CompoundTag;
        setFriction(arg0: number): void;
        rotate(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.Rotation_): Internal.BlockState;
        /**
         * @deprecated
        */
        getRenderShape(arg0: Internal.BlockState_): Internal.RenderShape;
        getSpeedFactor(): number;
        /**
         * @deprecated
        */
        getLightBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        playerDestroy(worldIn: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, te: Internal.BlockEntity_, stack: Internal.ItemStack_): void;
        isPossibleToRespawnInThis(arg0: Internal.BlockState_): boolean;
        playerWillDestroy(worldIn: Internal.Level_, pos: BlockPos_, state: Internal.BlockState_, player: Internal.Player_): void;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        getCloneItemStack(arg0: Internal.BlockState_, arg1: Internal.HitResult_, arg2: Internal.BlockGetter_, arg3: BlockPos_, arg4: Internal.Player_): Internal.ItemStack;
        getClass(): typeof any;
        getMaxVerticalOffset(): number;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        getRenderPropertiesInternal(): any;
        onCaughtFire(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.LivingEntity_): void;
        /**
         * @deprecated
        */
        getDrops(arg0: Internal.BlockState_, arg1: Internal.LootParams$Builder_): Internal.List<Internal.ItemStack>;
        getStateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>;
        entityInside(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): void;
        setBlockBuilder(b: Internal.BlockBuilder_): void;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientBlockExtensions>): void;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        getBlockStates(): Internal.List<Internal.BlockState>;
        setRequiresTool(v: boolean): void;
        isMaxAge(arg0: Internal.BlockState_): boolean;
        getPlant(arg0: Internal.BlockGetter_, arg1: BlockPos_): Internal.BlockState;
        addLandingEffects(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.LivingEntity_, arg5: number): boolean;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Block>;
        static popResourceFromFace(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Direction_, arg3: Internal.ItemStack_): void;
        handlePrecipitation(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Biome$Precipitation_): void;
        wait(arg0: number): void;
        /**
         * @deprecated
        */
        getFluidState(arg0: Internal.BlockState_): Internal.FluidState;
        getRespawnPosition(arg0: Internal.BlockState_, arg1: Internal.EntityType_<any>, arg2: Internal.LevelReader_, arg3: BlockPos_, arg4: number, arg5: Internal.LivingEntity_): Internal.Optional<Vec3d>;
        /**
         * @deprecated
        */
        tick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        isFertile(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        canBeHydrated(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.FluidState_, arg4: BlockPos_): boolean;
        getWeakChanges(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        neighborChanged(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Block_, arg4: BlockPos_, arg5: boolean): void;
        isBonemealSuccess(arg0: Internal.Level_, arg1: Internal.RandomSource_, arg2: BlockPos_, arg3: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getBlockSupportShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        /**
         * @deprecated
        */
        isCollisionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        getMenuProvider(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): Internal.MenuProvider;
        static byItem(arg0: Internal.Item_): Internal.Block;
        static updateFromNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_): Internal.BlockState;
        /**
         * @deprecated
        */
        updateIndirectNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: number, arg4: number): void;
        destroy(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): void;
        getFriction(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): number;
        canConnectRedstone(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        use(state: Internal.BlockState_, world: Internal.Level_, pos: BlockPos_, player: Internal.Player_, hand: Internal.InteractionHand_, rayTraceResult: Internal.BlockHitResult_): Internal.InteractionResult;
        setLightEmission(v: number): void;
        setJumpFactor(arg0: number): void;
        isSlimeBlock(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getShadeBrightness(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        /**
         * @deprecated
        */
        getCollisionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        defaultBlockState(): Internal.BlockState;
        getStateForPlacement(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        isSingle(state: Internal.BlockState_): boolean;
        getToolModifiedState(arg0: Internal.BlockState_, arg1: Internal.UseOnContext_, arg2: Internal.ToolAction_, arg3: boolean): Internal.BlockState;
        handler$bjh000$mayPlaceOn(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CallbackInfoReturnable_<any>): void;
        wait(): void;
        getMaxHorizontalOffset(): number;
        /**
         * @deprecated
        */
        getDestroyProgress(arg0: Internal.BlockState_, arg1: Internal.Player_, arg2: Internal.BlockGetter_, arg3: BlockPos_): number;
        makesOpenTrapdoorAboveClimbable(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.BlockState_): boolean;
        getMaxAge(): number;
        updateShape(stateIn: Internal.BlockState_, facing: Internal.Direction_, facingState: Internal.BlockState_, worldIn: Internal.LevelAccessor_, currentPos: BlockPos_, facingPos: BlockPos_): Internal.BlockState;
        isRandomlyTicking(arg0: Internal.BlockState_): boolean;
        static isShapeFullBlock(arg0: Internal.VoxelShape_): boolean;
        withPropertiesOf(arg0: Internal.BlockState_): Internal.BlockState;
        canGrowUp(worldIn: Internal.BlockGetter_, downPos: BlockPos_): boolean;
        setIsRandomlyTicking(arg0: boolean): void;
        isScaffolding(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        hidesNeighborFace(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_, arg4: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        rotate(arg0: Internal.BlockState_, arg1: Internal.Rotation_): Internal.BlockState;
        defaultMapColor(): Internal.MapColor;
        getStateAtViewpoint(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Vec3d_): Internal.BlockState;
        setNameKey(arg0: string): void;
        static box(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.VoxelShape;
        getExplosionResistance(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): number;
        updateEntityAfterFallOn(arg0: Internal.BlockGetter_, arg1: Internal.Entity_): void;
        setBedOccupied(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.LivingEntity_, arg4: boolean): void;
        getLightEmission(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        arch$registryName(): ResourceLocation;
        getBlockBuilder(): Internal.BlockBuilder;
        getIdLocation(): ResourceLocation;
        canDropFromExplosion(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): boolean;
        addRunningEffects(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        isSignalSource(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        onProjectileHit(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockHitResult_, arg3: Internal.Projectile_): void;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): Internal.List<Internal.ItemStack>;
        /**
         * @deprecated
        */
        isOcclusionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        static getId(arg0: Internal.BlockState_): number;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.level.material.Fluid)"(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        canSustainPlant(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.IPlantable_): boolean;
        isPathfindable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.PathComputationType_): boolean;
        setSoundType(arg0: SoundType_): void;
        /**
         * @deprecated
        */
        onRemove(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        equals(arg0: any): boolean;
        /**
         * @deprecated
        */
        getOcclusionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        isFlammable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        collisionExtendsVertically(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        getSoundType(arg0: Internal.BlockState_): SoundType;
        randomTick(state: Internal.BlockState_, level: Internal.ServerLevel_, pos: BlockPos_, random: Internal.RandomSource_): void;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.BlockEntity_): void;
        static canSupportRigidBlock(arg0: Internal.BlockGetter_, arg1: BlockPos_): boolean;
        isStickyBlock(arg0: Internal.BlockState_): boolean;
        getDescriptionId(): string;
        handler$zmd000$onUse(state: Internal.BlockState_, world: Internal.Level_, pos: BlockPos_, player: Internal.Player_, hand: Internal.InteractionHand_, hit: Internal.BlockHitResult_, cir: Internal.CallbackInfoReturnable_<any>): void;
        onBlockExploded(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Explosion_): void;
        fallOn(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: BlockPos_, arg3: Internal.Entity_, arg4: number): void;
        canEntityDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        getJumpFactor(): number;
        isValidSpawn(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.SpawnPlacements$Type_, arg4: Internal.EntityType_<any>): boolean;
        placeAt(worldIn: Internal.LevelAccessor_, pos: BlockPos_, flags: number): void;
        getFlammability(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        static canSupportCenter(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        skipRendering(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        getDirectSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isLadder(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        onDestroyedByPlayer(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: boolean, arg5: Internal.FluidState_): boolean;
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.item.context.BlockPlaceContext)"(pState: Internal.BlockState_, pUseContext: Internal.BlockPlaceContext_): boolean;
        getMapColor(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.MapColor_): Internal.MapColor;
        isPortalFrame(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        useShapeForLightOcclusion(arg0: Internal.BlockState_): boolean;
        getBedDirection(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): Internal.Direction;
        setSpeedFactor(arg0: number): void;
        getPollinated(level: Internal.Level_, pos: BlockPos_, state: Internal.BlockState_): boolean;
        isValidBonemealTarget(worldIn: Internal.LevelReader_, pos: BlockPos_, state: Internal.BlockState_, isClient: boolean): boolean;
        setExplosionResistance(arg0: number): void;
        getEnchantPowerBonus(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): number;
        toString(): string;
        notifyAll(): void;
        getId(): string;
        getLootTable(): ResourceLocation;
        /**
         * @deprecated
        */
        getInteractionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        propagatesSkylightDown(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setPlacedBy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.LivingEntity_, arg4: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        onPlace(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        getFriction(): number;
        /**
         * @deprecated
        */
        hasAnalogOutputSignal(arg0: Internal.BlockState_): boolean;
        getSoundType(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): SoundType;
        /**
         * @deprecated
        */
        getAnalogOutputSignal(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): number;
        supportsExternalFaceHiding(arg0: Internal.BlockState_): boolean;
        notify(): void;
        onBlockStateChange(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_): void;
        static isFaceFull(arg0: Internal.VoxelShape_, arg1: Internal.Direction_): boolean;
        isFireSource(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        growCrops(level: Internal.Level_, pos: BlockPos_, state: Internal.BlockState_): void;
        canSurvive(state: Internal.BlockState_, worldIn: Internal.LevelReader_, pos: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): void;
        getAppearance(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.BlockState_, arg5: BlockPos_): Internal.BlockState;
        setDestroySpeed(v: number): void;
        getAge(arg0: Internal.BlockState_): number;
        canHarvestBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        shouldCheckWeakPower(arg0: Internal.BlockState_, arg1: Internal.SignalGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        arch$holder(): Internal.Holder<Internal.Block>;
        getCloneItemStack(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        isPlantFullyGrown(state: Internal.BlockState_, pos: BlockPos_, level: Internal.Level_): boolean;
        hasDynamicShape(): boolean;
        getPlantType(arg0: Internal.BlockGetter_, arg1: BlockPos_): Internal.PlantType;
        /**
         * @deprecated
        */
        getSeed(arg0: Internal.BlockState_, arg1: BlockPos_): number;
        defaultDestroyTime(): number;
        getBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        dropFromExplosion(arg0: Internal.Explosion_): boolean;
        onNeighborChange(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): void;
        static isExceptionForConnection(arg0: Internal.BlockState_): boolean;
        onTreeGrow(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.BiConsumer_<BlockPos, Internal.BlockState>, arg3: Internal.RandomSource_, arg4: BlockPos_, arg5: Internal.TreeConfiguration_): boolean;
        wait(arg0: number, arg1: number): void;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.BlockGetter_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        mirror(arg0: Internal.BlockState_, arg1: Internal.Mirror_): Internal.BlockState;
        isBed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        wasExploded(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Explosion_): void;
        getName(): Internal.MutableComponent;
        canStickTo(arg0: Internal.BlockState_, arg1: Internal.BlockState_): boolean;
        animateTick(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        getFireSpreadSpeed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        getStateForAge(arg0: number): Internal.BlockState;
        getMod(): string;
        getAdjacentBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_, arg4: Internal.BlockPathTypes_): Internal.BlockPathTypes;
        canBeReplaced(pState: Internal.BlockState_, pUseContext: Internal.BlockPlaceContext_): boolean;
        isConduitFrame(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): boolean;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number): void;
        /**
         * @deprecated
        */
        attack(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): void;
        getShape(state: Internal.BlockState_, worldIn: Internal.BlockGetter_, pos: BlockPos_, context: Internal.CollisionContext_): Internal.VoxelShape;
        static stateById(arg0: number): Internal.BlockState;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        popExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: number): void;
        static pushEntitiesUp(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_): Internal.BlockState;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_): Internal.List<Internal.ItemStack>;
        isBurning(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setHasCollision(arg0: boolean): void;
        static shouldRenderFace(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: BlockPos_): boolean;
        growCropBy(level: Internal.Level_, pos: BlockPos_, state: Internal.BlockState_, increment: number): void;
        /**
         * @deprecated
        */
        spawnAfterBreak(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.ItemStack_, arg4: boolean): void;
        set randomTickCallback(callback: Internal.Consumer_<any>)
        /**
         * @deprecated
        */
        get explosionResistance(): number
        get typeData(): Internal.CompoundTag
        set friction(arg0: number)
        get speedFactor(): number
        get class(): typeof any
        get maxVerticalOffset(): number
        get renderPropertiesInternal(): any
        get stateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>
        set blockBuilder(b: Internal.BlockBuilder_)
        get blockStates(): Internal.List<Internal.BlockState>
        set requiresTool(v: boolean)
        set lightEmission(v: number)
        set jumpFactor(arg0: number)
        get maxHorizontalOffset(): number
        get maxAge(): number
        set isRandomlyTicking(arg0: boolean)
        set nameKey(arg0: string)
        get blockBuilder(): Internal.BlockBuilder
        get idLocation(): ResourceLocation
        set soundType(arg0: SoundType_)
        get descriptionId(): string
        get jumpFactor(): number
        set speedFactor(arg0: number)
        set explosionResistance(arg0: number)
        get id(): string
        get lootTable(): ResourceLocation
        get friction(): number
        set destroySpeed(v: number)
        get name(): Internal.MutableComponent
        get mod(): string
        set hasCollision(arg0: boolean)
        static readonly DOUBLE_AGE: (4) & (number);
        static readonly HALF: Internal.EnumProperty<Internal.DoubleBlockHalf>;
    }
    type FlaxBlock_ = FlaxBlock;
    interface LongSortedSet extends Internal.LongSet, Internal.SortedSet<number>, Internal.LongBidirectionalIterable {
        abstract firstLong(): number;
        abstract remove(arg0: number): boolean;
        /**
         * @deprecated
        */
        stream(): Internal.Stream<number>;
        /**
         * @deprecated
        */
        last(): any;
        of(arg0: number, arg1: number, arg2: number): Internal.LongSet;
        /**
         * @deprecated
        */
        subSet(arg0: any, arg1: any): Internal.SortedSet<any>;
        toArray<T>(arg0: Internal.IntFunction_<T[]>): T[];
        of<E>(arg0: E, arg1: E): Internal.Set<E>;
        /**
         * @deprecated
        */
        headSet(arg0: number): this;
        of<E>(arg0: E, arg1: E, arg2: E, arg3: E, arg4: E): Internal.Set<E>;
        /**
         * @deprecated
        */
        "headSet(java.lang.Object)"(arg0: any): Internal.SortedSet<any>;
        /**
         * @deprecated
        */
        "contains(java.lang.Object)"(arg0: any): boolean;
        abstract addAll(arg0: Internal.LongCollection_): boolean;
        abstract "remove(long)"(arg0: number): boolean;
        abstract toArray<T>(arg0: T[]): T[];
        /**
         * @deprecated
        */
        remove(arg0: any): boolean;
        abstract "removeAll(java.util.Collection)"(arg0: Internal.Collection_<any>): boolean;
        /**
         * @deprecated
        */
        "removeIf(java.util.function.Predicate)"(arg0: Internal.Predicate_<number>): boolean;
        /**
         * @deprecated
        */
        add(arg0: any): boolean;
        "removeIf(it.unimi.dsi.fastutil.longs.LongPredicate)"(arg0: it.unimi.dsi.fastutil.longs.LongPredicate_): boolean;
        of(arg0: number, arg1: number): Internal.LongSet;
        /**
         * @deprecated
        */
        first(): number;
        /**
         * @deprecated
        */
        add(arg0: number): boolean;
        longSpliterator(): Internal.LongSpliterator;
        "of(long)"(arg0: number): Internal.LongSet;
        /**
         * @deprecated
        */
        "headSet(java.lang.Long)"(arg0: number): this;
        copyOf<E>(arg0: Internal.Collection_<E>): Internal.Set<E>;
        "forEach(java.util.function.LongConsumer)"(arg0: Internal.LongConsumer_): void;
        abstract "headSet(long)"(arg0: number): this;
        iterator(): Internal.LongIterator;
        longIterator(): Internal.LongIterator;
        abstract subSet(arg0: number, arg1: number): this;
        abstract "contains(long)"(arg0: number): boolean;
        /**
         * @deprecated
        */
        toLongArray(arg0: number[]): number[];
        of<E>(arg0: E, arg1: E, arg2: E, arg3: E, arg4: E, arg5: E, arg6: E, arg7: E, arg8: E, arg9: E): Internal.Set<E>;
        abstract toArray(arg0: number[]): number[];
        of(...arg0: number[]): Internal.LongSet;
        abstract lastLong(): number;
        of<E>(arg0: E, arg1: E, arg2: E, arg3: E): Internal.Set<E>;
        /**
         * @deprecated
        */
        contains(arg0: any): boolean;
        abstract "add(long)"(arg0: number): boolean;
        of<E>(arg0: E, arg1: E, arg2: E, arg3: E, arg4: E, arg5: E, arg6: E, arg7: E): Internal.Set<E>;
        /**
         * @deprecated
        */
        "tailSet(java.lang.Object)"(arg0: any): Internal.SortedSet<any>;
        "toArray(java.util.function.IntFunction)"<T>(arg0: Internal.IntFunction_<T[]>): T[];
        of(): Internal.LongSet;
        /**
         * @deprecated
        */
        rem(arg0: number): boolean;
        abstract "addAll(java.util.Collection)"(arg0: Internal.Collection_<number>): boolean;
        abstract toLongArray(): number[];
        abstract size(): number;
        longParallelStream(): Internal.LongStream;
        "of(long[])"(...arg0: number[]): Internal.LongSet;
        abstract clear(): void;
        /**
         * @deprecated
        */
        tailSet(arg0: number): this;
        abstract headSet(arg0: number): this;
        /**
         * @deprecated
        */
        "forEach(java.util.function.Consumer)"(arg0: Internal.Consumer_<number>): void;
        "removeIf(java.util.function.LongPredicate)"(arg0: Internal.LongPredicate_): boolean;
        removeIf(arg0: Internal.LongPredicate_): boolean;
        abstract "subSet(long,long)"(arg0: number, arg1: number): this;
        "of(long,long,long)"(arg0: number, arg1: number, arg2: number): Internal.LongSet;
        abstract retainAll(arg0: Internal.Collection_<any>): boolean;
        of(arg0: number): Internal.LongSet;
        abstract "containsAll(java.util.Collection)"(arg0: Internal.Collection_<any>): boolean;
        of<E>(arg0: E, arg1: E, arg2: E): Internal.Set<E>;
        abstract tailSet(arg0: number): this;
        abstract retainAll(arg0: Internal.LongCollection_): boolean;
        /**
         * @deprecated
        */
        "subSet(java.lang.Object,java.lang.Object)"(arg0: any, arg1: any): Internal.SortedSet<any>;
        abstract iterator(arg0: number): Internal.LongBidirectionalIterator;
        abstract "retainAll(java.util.Collection)"(arg0: Internal.Collection_<any>): boolean;
        forEach(arg0: Internal.LongConsumer_): void;
        comparator(): Internal.Comparator<any>;
        "of(java.lang.Object[])"<E>(...arg0: E[]): Internal.Set<E>;
        /**
         * @deprecated
        */
        "remove(java.lang.Object)"(arg0: any): boolean;
        /**
         * @deprecated
        */
        subSet(arg0: number, arg1: number): this;
        abstract "tailSet(long)"(arg0: number): this;
        forEach(arg0: it.unimi.dsi.fastutil.longs.LongConsumer_): void;
        abstract removeAll(arg0: Internal.LongCollection_): boolean;
        abstract containsAll(arg0: Internal.LongCollection_): boolean;
        of<E>(arg0: E): Internal.Set<E>;
        of<E>(arg0: E, arg1: E, arg2: E, arg3: E, arg4: E, arg5: E, arg6: E, arg7: E, arg8: E): Internal.Set<E>;
        /**
         * @deprecated
        */
        "tailSet(java.lang.Long)"(arg0: number): this;
        spliterator(): Internal.Spliterator<any>;
        abstract removeAll(arg0: Internal.Collection_<any>): boolean;
        "of(java.lang.Object,java.lang.Object)"<E>(arg0: E, arg1: E): Internal.Set<E>;
        /**
         * @deprecated
        */
        "subSet(java.lang.Long,java.lang.Long)"(arg0: number, arg1: number): this;
        abstract "addAll(it.unimi.dsi.fastutil.longs.LongCollection)"(arg0: Internal.LongCollection_): boolean;
        abstract "toArray(long[])"(arg0: number[]): number[];
        abstract "removeAll(it.unimi.dsi.fastutil.longs.LongCollection)"(arg0: Internal.LongCollection_): boolean;
        /**
         * @deprecated
        */
        tailSet(arg0: any): Internal.SortedSet<any>;
        abstract add(arg0: number): boolean;
        abstract isEmpty(): boolean;
        /**
         * @deprecated
        */
        "add(java.lang.Object)"(arg0: any): boolean;
        abstract addAll(arg0: Internal.Collection_<number>): boolean;
        abstract "retainAll(it.unimi.dsi.fastutil.longs.LongCollection)"(arg0: Internal.LongCollection_): boolean;
        /**
         * @deprecated
        */
        "add(java.lang.Long)"(arg0: number): boolean;
        "of(long,long)"(arg0: number, arg1: number): Internal.LongSet;
        abstract containsAll(arg0: Internal.Collection_<any>): boolean;
        /**
         * @deprecated
        */
        headSet(arg0: any): Internal.SortedSet<any>;
        /**
         * @deprecated
        */
        forEach(arg0: Internal.Consumer_<number>): void;
        /**
         * @deprecated
        */
        parallelStream(): Internal.Stream<number>;
        of<E>(arg0: E, arg1: E, arg2: E, arg3: E, arg4: E, arg5: E, arg6: E): Internal.Set<E>;
        abstract "containsAll(it.unimi.dsi.fastutil.longs.LongCollection)"(arg0: Internal.LongCollection_): boolean;
        of<E>(arg0: E, arg1: E, arg2: E, arg3: E, arg4: E, arg5: E): Internal.Set<E>;
        abstract contains(arg0: number): boolean;
        "of(java.lang.Object,java.lang.Object,java.lang.Object)"<E>(arg0: E, arg1: E, arg2: E): Internal.Set<E>;
        /**
         * @deprecated
        */
        removeIf(arg0: Internal.Predicate_<number>): boolean;
        abstract "toArray(java.lang.Object[])"<T>(arg0: T[]): T[];
        abstract toArray(): any[];
        "forEach(it.unimi.dsi.fastutil.longs.LongConsumer)"(arg0: it.unimi.dsi.fastutil.longs.LongConsumer_): void;
        abstract hashCode(): number;
        of<E>(...arg0: E[]): Internal.Set<E>;
        longStream(): Internal.LongStream;
        abstract equals(arg0: any): boolean;
        removeIf(arg0: it.unimi.dsi.fastutil.longs.LongPredicate_): boolean;
        "of(java.lang.Object)"<E>(arg0: E): Internal.Set<E>;
        get empty(): boolean
    }
    type LongSortedSet_ = LongSortedSet;
    class CriterionProgress {
        constructor()
        getClass(): typeof any;
        grant(): void;
        serializeToJson(): Internal.JsonElement;
        toString(): string;
        getObtained(): Internal.Date;
        notifyAll(): void;
        revoke(): void;
        isDone(): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        static fromNetwork(arg0: Internal.FriendlyByteBuf_): Internal.CriterionProgress;
        hashCode(): number;
        wait(): void;
        static fromJson(arg0: string): Internal.CriterionProgress;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        serializeToNetwork(arg0: Internal.FriendlyByteBuf_): void;
        get class(): typeof any
        get obtained(): Internal.Date
        get done(): boolean
    }
    type CriterionProgress_ = CriterionProgress;
    class ParticleVanillaCloudExtended$VanillaCloudData implements Internal.ParticleOptions {
        constructor(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: Vec3d_[])
        getGreen(): number;
        getClass(): typeof any;
        getBlue(): number;
        getDrag(): number;
        toString(): string;
        notifyAll(): void;
        writeToNetwork(arg0: Internal.FriendlyByteBuf_): void;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        getScale(): number;
        getRed(): number;
        hashCode(): number;
        wait(): void;
        writeToString(): string;
        wait(arg0: number): void;
        getDuration(): number;
        getDestination(): Vec3d[];
        equals(arg0: any): boolean;
        static CODEC(arg0: Internal.ParticleType_<Internal.ParticleVanillaCloudExtended$VanillaCloudData>): Internal.Codec<Internal.ParticleVanillaCloudExtended$VanillaCloudData>;
        getType(): Internal.ParticleType<Internal.ParticleVanillaCloudExtended$VanillaCloudData>;
        get green(): number
        get class(): typeof any
        get blue(): number
        get drag(): number
        get scale(): number
        get red(): number
        get duration(): number
        get destination(): Vec3d[]
        get type(): Internal.ParticleType<Internal.ParticleVanillaCloudExtended$VanillaCloudData>
        static readonly DESERIALIZER: Internal.ParticleOptions$Deserializer<Internal.ParticleVanillaCloudExtended$VanillaCloudData>;
    }
    type ParticleVanillaCloudExtended$VanillaCloudData_ = ParticleVanillaCloudExtended$VanillaCloudData;
    interface ImageConsumer {
        abstract setPixels(arg0: number, arg1: number, arg2: number, arg3: number, arg4: Internal.ColorModel_, arg5: number[], arg6: number, arg7: number): void;
        abstract setHints(arg0: number): void;
        abstract setDimensions(arg0: number, arg1: number): void;
        abstract setProperties(arg0: Internal.Hashtable_<any, any>): void;
        abstract "setPixels(int,int,int,int,java.awt.image.ColorModel,byte[],int,int)"(arg0: number, arg1: number, arg2: number, arg3: number, arg4: Internal.ColorModel_, arg5: number[], arg6: number, arg7: number): void;
        abstract imageComplete(arg0: number): void;
        abstract "setPixels(int,int,int,int,java.awt.image.ColorModel,int[],int,int)"(arg0: number, arg1: number, arg2: number, arg3: number, arg4: Internal.ColorModel_, arg5: number[], arg6: number, arg7: number): void;
        abstract setPixels(arg0: number, arg1: number, arg2: number, arg3: number, arg4: Internal.ColorModel_, arg5: number[], arg6: number, arg7: number): void;
        abstract setColorModel(arg0: Internal.ColorModel_): void;
        set hints(arg0: number)
        set properties(arg0: Internal.Hashtable_<any, any>)
        set colorModel(arg0: Internal.ColorModel_)
        readonly COMPLETESCANLINES: (4) & (number);
        readonly SINGLEPASS: (8) & (number);
        readonly SINGLEFRAME: (16) & (number);
        readonly RANDOMPIXELORDER: (1) & (number);
        readonly TOPDOWNLEFTRIGHT: (2) & (number);
        readonly IMAGEERROR: (1) & (number);
        readonly STATICIMAGEDONE: (3) & (number);
        readonly IMAGEABORTED: (4) & (number);
        readonly SINGLEFRAMEDONE: (2) & (number);
    }
    type ImageConsumer_ = ImageConsumer;
    class CustomCraftRecipe implements Internal.IMachineRecipe, Internal.Recipe<net.minecraft.world.Container> {
        constructor(id: ResourceLocation_, machine: ResourceLocation_, output: Internal.ItemStack_, requirements: Internal.List_<Internal.IRequirement<any>>, jeiRequirements: Internal.List_<Internal.IRequirement<any>>, priority: number, jeiPriority: number, hidden: boolean)
        getJeiPriority(): number;
        getClass(): typeof any;
        getGroup(): string;
        getToastSymbol(): Internal.ItemStack;
        getSchema(): Internal.RecipeSchema;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        getRecipeTime(): number;
        assemble(container: net.minecraft.world.Container_, access: Internal.RegistryAccess_): Internal.ItemStack;
        getSerializer(): Internal.RecipeSerializer<any>;
        getId(): ResourceLocation;
        showInJei(): boolean;
        shouldResetOnError(): boolean;
        matches(container: net.minecraft.world.Container_, level: Internal.Level_): boolean;
        getRecipeId(): ResourceLocation;
        getMod(): string;
        getRemainingItems(arg0: net.minecraft.world.Container_): Internal.NonNullList<Internal.ItemStack>;
        getJEIIngredientRequirements(): Internal.List<Internal.IJEIIngredientRequirement<any>>;
        getOutput(): Internal.ItemStack;
        getIngredients(): Internal.NonNullList<Internal.Ingredient>;
        isSpecial(): boolean;
        hasOutput(match: Internal.ReplacementMatch_): boolean;
        getResultItem(access: Internal.RegistryAccess_): Internal.ItemStack;
        toString(): string;
        getRequirements(): Internal.List<Internal.IRequirement<any>>;
        notifyAll(): void;
        getMachineId(): ResourceLocation;
        canCraftInDimensions(i: number, j: number): boolean;
        showNotification(): boolean;
        replaceInput(match: Internal.ReplacementMatch_, with_: Internal.InputReplacement_): boolean;
        getType(): ResourceLocation;
        getJeiRequirements(): Internal.List<Internal.IRequirement<any>>;
        setGroup(group: string): void;
        hashCode(): number;
        getOrCreateId(): ResourceLocation;
        getPriority(): number;
        hasInput(match: Internal.ReplacementMatch_): boolean;
        wait(): void;
        isIncomplete(): boolean;
        getDisplayInfoRequirements(): Internal.List<Internal.IRequirement<any>>;
        wait(arg0: number): void;
        replaceOutput(match: Internal.ReplacementMatch_, with_: Internal.OutputReplacement_): boolean;
        equals(arg0: any): boolean;
        checker(): Internal.RecipeChecker<Internal.CustomCraftRecipe>;
        get jeiPriority(): number
        get class(): typeof any
        get group(): string
        get toastSymbol(): Internal.ItemStack
        get schema(): Internal.RecipeSchema
        get recipeTime(): number
        get serializer(): Internal.RecipeSerializer<any>
        get id(): ResourceLocation
        get recipeId(): ResourceLocation
        get mod(): string
        get JEIIngredientRequirements(): Internal.List<Internal.IJEIIngredientRequirement<any>>
        get output(): Internal.ItemStack
        get ingredients(): Internal.NonNullList<Internal.Ingredient>
        get special(): boolean
        get requirements(): Internal.List<Internal.IRequirement<any>>
        get machineId(): ResourceLocation
        get type(): ResourceLocation
        get jeiRequirements(): Internal.List<Internal.IRequirement<any>>
        set group(group: string)
        get orCreateId(): ResourceLocation
        get priority(): number
        get incomplete(): boolean
        get displayInfoRequirements(): Internal.List<Internal.IRequirement<any>>
        static readonly FORBIDDEN_REQUIREMENTS: ([Internal.RequirementType<any>, Internal.RequirementType<any>, Internal.RequirementType<any>]) & (Internal.List<Internal.RequirementType<any>>);
    }
    type CustomCraftRecipe_ = CustomCraftRecipe;
    interface DoubleIterator extends Internal.PrimitiveIterator$OfDouble {
        forEachRemaining(arg0: any): void;
        forEachRemaining(arg0: it.unimi.dsi.fastutil.doubles.DoubleConsumer_): void;
        "forEachRemaining(java.util.function.DoubleConsumer)"(arg0: Internal.DoubleConsumer_): void;
        /**
         * @deprecated
        */
        next(): any;
        skip(arg0: number): number;
        abstract nextDouble(): number;
        "forEachRemaining(it.unimi.dsi.fastutil.doubles.DoubleConsumer)"(arg0: it.unimi.dsi.fastutil.doubles.DoubleConsumer_): void;
        /**
         * @deprecated
        */
        forEachRemaining(arg0: Internal.Consumer_<number>): void;
        remove(): void;
        forEachRemaining(arg0: Internal.DoubleConsumer_): void;
        "forEachRemaining(java.lang.Object)"(arg0: any): void;
        /**
         * @deprecated
        */
        "forEachRemaining(java.util.function.Consumer)"(arg0: Internal.Consumer_<number>): void;
        abstract hasNext(): boolean;
    }
    type DoubleIterator_ = DoubleIterator;
    interface ClientPlayerKJS extends Internal.PlayerKJS {
        getDistance(pos: BlockPos_): number;
        isFake(): boolean;
        damageHeldItem(hand: Internal.InteractionHand_, amount: number): void;
        getStats(): Internal.PlayerStatsJS;
        removeAttribute(attribute: Internal.Attribute_, identifier: string): void;
        playSound(id: Internal.SoundEvent_, volume: number, pitch: number): void;
        damageEquipment(slot: Internal.EquipmentSlot_, amount: number, onBroken: Internal.Consumer_<Internal.ItemStack>): void;
        setDefaultMovementSpeedMultiplier(speed: number): void;
        getOffHandItem(): Internal.ItemStack;
        isOnScoreboardTeam(teamId: string): boolean;
        addFood(f: number, m: number): void;
        getEquipment(slot: Internal.EquipmentSlot_): Internal.ItemStack;
        swing(): void;
        runCommandSilent(command: string): number;
        setPosition(x: number, y: number, z: number): void;
        isPlayer(): boolean;
        isAnimal(): boolean;
        rayTrace(distance: number, fluids: boolean): Internal.RayTraceResultJS;
        setY(y: number): void;
        getXpLevel(): number;
        setSelectedSlot(index: number): void;
        damageEquipment(slot: Internal.EquipmentSlot_): void;
        isLiving(): boolean;
        getTotalMovementSpeed(): number;
        rayTrace(): Internal.RayTraceResultJS;
        paint(tag: Internal.CompoundTag_): void;
        damageHeldItem(): void;
        getDisplayName(): net.minecraft.network.chat.Component;
        setPosition(block: Internal.BlockContainerJS_): void;
        setMotionZ(z: number): void;
        mergeNbt(tag: Internal.CompoundTag_): Internal.Entity;
        attack(hp: number): void;
        getFoodLevel(): number;
        notify(title: net.minecraft.network.chat.Component_, text: net.minecraft.network.chat.Component_): void;
        getTeamId(): string;
        setMaxHealth(hp: number): void;
        getFacing(): Internal.Direction;
        getCraftingGrid(): Internal.InventoryKJS;
        setXpLevel(l: number): void;
        setFoodLevel(foodLevel: number): void;
        setSaturation(saturation: number): void;
        addXPLevels(l: number): void;
        getLegsArmorItem(): Internal.ItemStack;
        setMainHandItem(item: Internal.ItemStack_): void;
        isHoldingInAnyHand(i: Internal.Ingredient_): boolean;
        rayTrace(distance: number): Internal.RayTraceResultJS;
        getReachDistance(): number;
        getMotionX(): number;
        isWaterCreature(): boolean;
        getPersistentData(): Internal.CompoundTag;
        sendData(channel: string): void;
        getItem(): Internal.ItemStack;
        setX(x: number): void;
        getSelectedSlot(): number;
        setAttributeBaseValue(attribute: Internal.Attribute_, value: number): void;
        getPotionEffects(): Internal.EntityPotionEffectsJS;
        getOpenInventory(): Internal.AbstractContainerMenu;
        getXp(): number;
        isFrame(): boolean;
        setLegsArmorItem(item: Internal.ItemStack_): void;
        playSound(id: Internal.SoundEvent_): void;
        foodEaten(is: Internal.ItemStack_): void;
        setXp(xp: number): void;
        getDefaultMovementSpeed(): number;
        getHeldItem(hand: Internal.InteractionHand_): Internal.ItemStack;
        swing(hand: Internal.InteractionHand_): void;
        getDistance(x: number, y: number, z: number): number;
        isMiningBlock(): boolean;
        setMotionY(y: number): void;
        getAttributeTotalValue(attribute: Internal.Attribute_): number;
        isPeacefulCreature(): boolean;
        isUndead(): boolean;
        setRotation(yaw: number, pitch: number): void;
        isAmbientCreature(): boolean;
        notify(notification: Notification_): void;
        getInventoryChangeListener(): Internal.KubeJSInventoryListener;
        isMonster(): boolean;
        getType(): string;
        self(): Internal.Entity;
        setChestArmorItem(item: Internal.ItemStack_): void;
        getBlock(): Internal.BlockContainerJS;
        getNbt(): Internal.CompoundTag;
        setEquipment(slot: Internal.EquipmentSlot_, item: Internal.ItemStack_): void;
        getMotionY(): number;
        getStages(): Internal.Stages;
        getName(): net.minecraft.network.chat.Component;
        boostElytraFlight(): void;
        addExhaustion(exhaustion: number): void;
        getPassengers(): Internal.EntityArrayList;
        giveInHand(item: Internal.ItemStack_): void;
        setMouseItem(item: Internal.ItemStack_): void;
        setTotalMovementSpeedMultiplier(speed: number): void;
        sendData(channel: string, data: Internal.CompoundTag_): void;
        addXP(xp: number): void;
        setHeldItem(hand: Internal.InteractionHand_, item: Internal.ItemStack_): void;
        getInventory(): Internal.InventoryKJS;
        give(item: Internal.ItemStack_): void;
        damageHeldItem(hand: Internal.InteractionHand_, amount: number, onBroken: Internal.Consumer_<Internal.ItemStack>): void;
        getFeetArmorItem(): Internal.ItemStack;
        setDefaultMovementSpeed(speed: number): void;
        setOffHandItem(item: Internal.ItemStack_): void;
        spawn(): void;
        getMainHandItem(): Internal.ItemStack;
        getServer(): Internal.MinecraftServer;
        setMotionX(x: number): void;
        canEntityBeSeen(entity: Internal.LivingEntity_): boolean;
        teleportTo(dimension: ResourceLocation_, x: number, y: number, z: number, yaw: number, pitch: number): void;
        setNbt(nbt: Internal.CompoundTag_): void;
        getLevel(): Internal.Level;
        getScriptType(): Internal.ScriptType;
        setMovementSpeedAddition(speed: number): void;
        getHeadArmorItem(): Internal.ItemStack;
        modifyAttribute(attribute: Internal.Attribute_, identifier: string, d: number, operation: Internal.AttributeModifier$Operation_): void;
        setFeetArmorItem(item: Internal.ItemStack_): void;
        isSelf(): boolean;
        setPositionAndRotation(x: number, y: number, z: number, yaw: number, pitch: number): void;
        sendInventoryUpdate(): void;
        getChestArmorItem(): Internal.ItemStack;
        damageEquipment(slot: Internal.EquipmentSlot_, amount: number): void;
        getMotionZ(): number;
        tell(message: net.minecraft.network.chat.Component_): void;
        getMouseItem(): Internal.ItemStack;
        setZ(z: number): void;
        setStatusMessage(message: net.minecraft.network.chat.Component_): void;
        getDistanceSq(pos: BlockPos_): number;
        abstract getData(): Internal.AttachedData<Internal.Player>;
        getProfile(): Internal.GameProfile;
        getSaturation(): number;
        setHeadArmorItem(item: Internal.ItemStack_): void;
        getAttributeBaseValue(attribute: Internal.Attribute_): number;
        runCommand(command: string): number;
        addItemCooldown(item: Internal.Item_, ticks: number): void;
        get fake(): boolean
        get stats(): Internal.PlayerStatsJS
        set defaultMovementSpeedMultiplier(speed: number)
        get offHandItem(): Internal.ItemStack
        get player(): boolean
        get animal(): boolean
        set y(y: number)
        get xpLevel(): number
        set selectedSlot(index: number)
        get living(): boolean
        get totalMovementSpeed(): number
        get displayName(): net.minecraft.network.chat.Component
        set position(block: Internal.BlockContainerJS_)
        set motionZ(z: number)
        get foodLevel(): number
        get teamId(): string
        set maxHealth(hp: number)
        get facing(): Internal.Direction
        get craftingGrid(): Internal.InventoryKJS
        set xpLevel(l: number)
        set foodLevel(foodLevel: number)
        set saturation(saturation: number)
        get legsArmorItem(): Internal.ItemStack
        set mainHandItem(item: Internal.ItemStack_)
        get reachDistance(): number
        get motionX(): number
        get waterCreature(): boolean
        get persistentData(): Internal.CompoundTag
        get item(): Internal.ItemStack
        set x(x: number)
        get selectedSlot(): number
        get potionEffects(): Internal.EntityPotionEffectsJS
        get openInventory(): Internal.AbstractContainerMenu
        get xp(): number
        get frame(): boolean
        set legsArmorItem(item: Internal.ItemStack_)
        set xp(xp: number)
        get defaultMovementSpeed(): number
        get miningBlock(): boolean
        set motionY(y: number)
        get peacefulCreature(): boolean
        get undead(): boolean
        get ambientCreature(): boolean
        get inventoryChangeListener(): Internal.KubeJSInventoryListener
        get monster(): boolean
        get type(): string
        set chestArmorItem(item: Internal.ItemStack_)
        get block(): Internal.BlockContainerJS
        get nbt(): Internal.CompoundTag
        get motionY(): number
        get stages(): Internal.Stages
        get name(): net.minecraft.network.chat.Component
        get passengers(): Internal.EntityArrayList
        set mouseItem(item: Internal.ItemStack_)
        set totalMovementSpeedMultiplier(speed: number)
        get inventory(): Internal.InventoryKJS
        get feetArmorItem(): Internal.ItemStack
        set defaultMovementSpeed(speed: number)
        set offHandItem(item: Internal.ItemStack_)
        get mainHandItem(): Internal.ItemStack
        get server(): Internal.MinecraftServer
        set motionX(x: number)
        set nbt(nbt: Internal.CompoundTag_)
        get level(): Internal.Level
        get scriptType(): Internal.ScriptType
        set movementSpeedAddition(speed: number)
        get headArmorItem(): Internal.ItemStack
        set feetArmorItem(item: Internal.ItemStack_)
        get self(): boolean
        get chestArmorItem(): Internal.ItemStack
        get motionZ(): number
        get mouseItem(): Internal.ItemStack
        set z(z: number)
        set statusMessage(message: net.minecraft.network.chat.Component_)
        get data(): Internal.AttachedData<Internal.Player>
        get profile(): Internal.GameProfile
        get saturation(): number
        set headArmorItem(item: Internal.ItemStack_)
        (): Internal.AttachedData_<Internal.Player>;
    }
    type ClientPlayerKJS_ = ClientPlayerKJS | (()=> Internal.AttachedData_<Internal.Player>);
    class RunescribingRecipeSerializer extends Internal.AMRecipeBaseSerializer<Internal.RunescribingRecipe> {
        constructor()
        getClass(): typeof any;
        "fromNetwork(net.minecraft.resources.ResourceLocation,net.minecraft.network.FriendlyByteBuf)"(arg0: ResourceLocation_, arg1: Internal.FriendlyByteBuf_): Internal.Recipe<any>;
        readExtra(arg0: ResourceLocation_, arg1: Internal.JsonObject_): Internal.AMRecipeBase;
        toNetwork(arg0: Internal.FriendlyByteBuf_, arg1: Internal.Recipe_<any>): void;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        fromJson(arg0: ResourceLocation_, arg1: Internal.JsonObject_, arg2: Internal.ICondition$IContext_): Internal.RunescribingRecipe;
        "readExtra(net.minecraft.resources.ResourceLocation,net.minecraft.network.FriendlyByteBuf)"(arg0: ResourceLocation_, arg1: Internal.FriendlyByteBuf_): Internal.AMRecipeBase;
        static register<S extends Internal.RecipeSerializer<T>, T extends Internal.Recipe<any>>(arg0: string, arg1: S): S;
        writeExtra(arg0: Internal.FriendlyByteBuf_, arg1: Internal.AMRecipeBase_): void;
        fromNetwork(arg0: ResourceLocation_, arg1: Internal.FriendlyByteBuf_): Internal.Recipe<any>;
        fromJson(arg0: ResourceLocation_, arg1: Internal.JsonObject_): Internal.RunescribingRecipe;
        toString(): string;
        "toNetwork(net.minecraft.network.FriendlyByteBuf,net.minecraft.world.item.crafting.Recipe)"(arg0: Internal.FriendlyByteBuf_, arg1: Internal.Recipe_<any>): void;
        "writeExtra(net.minecraft.network.FriendlyByteBuf,com.mna.recipes.runeforging.RunescribingRecipe)"(arg0: Internal.FriendlyByteBuf_, arg1: Internal.RunescribingRecipe_): void;
        notifyAll(): void;
        toNetwork(arg0: Internal.FriendlyByteBuf_, arg1: Internal.RunescribingRecipe_): void;
        "readExtra(net.minecraft.resources.ResourceLocation,com.google.gson.JsonObject)"(arg0: ResourceLocation_, arg1: Internal.JsonObject_): Internal.AMRecipeBase;
        "fromJson(net.minecraft.resources.ResourceLocation,com.google.gson.JsonObject)"(arg0: ResourceLocation_, arg1: Internal.JsonObject_): Internal.Recipe<any>;
        "fromJson(net.minecraft.resources.ResourceLocation,com.google.gson.JsonObject)"(arg0: ResourceLocation_, arg1: Internal.JsonObject_): Internal.RunescribingRecipe;
        fromNetwork(arg0: ResourceLocation_, arg1: Internal.FriendlyByteBuf_): Internal.RunescribingRecipe;
        hashCode(): number;
        fromJson(arg0: ResourceLocation_, arg1: Internal.JsonObject_): Internal.Recipe<any>;
        wait(): void;
        wait(arg0: number): void;
        readExtra(arg0: ResourceLocation_, arg1: Internal.FriendlyByteBuf_): Internal.AMRecipeBase;
        writeExtra(arg0: Internal.FriendlyByteBuf_, arg1: Internal.RunescribingRecipe_): void;
        equals(arg0: any): boolean;
        "fromNetwork(net.minecraft.resources.ResourceLocation,net.minecraft.network.FriendlyByteBuf)"(arg0: ResourceLocation_, arg1: Internal.FriendlyByteBuf_): Internal.RunescribingRecipe;
        "toNetwork(net.minecraft.network.FriendlyByteBuf,com.mna.recipes.runeforging.RunescribingRecipe)"(arg0: Internal.FriendlyByteBuf_, arg1: Internal.RunescribingRecipe_): void;
        "writeExtra(net.minecraft.network.FriendlyByteBuf,com.mna.recipes.AMRecipeBase)"(arg0: Internal.FriendlyByteBuf_, arg1: Internal.AMRecipeBase_): void;
        get class(): typeof any
        static ALL_RECIPES: ({[key: ResourceLocation]: Internal.RunescribingRecipe, [key: ResourceLocation]: Internal.RunescribingRecipe, [key: ResourceLocation]: Internal.RunescribingRecipe, [key: ResourceLocation]: Internal.RunescribingRecipe, [key: ResourceLocation]: Internal.RunescribingRecipe, [key: ResourceLocation]: Internal.RunescribingRecipe, [key: ResourceLocation]: Internal.RunescribingRecipe, [key: ResourceLocation]: Internal.RunescribingRecipe, [key: ResourceLocation]: Internal.RunescribingRecipe, [key: ResourceLocation]: Internal.RunescribingRecipe, [key: ResourceLocation]: Internal.RunescribingRecipe, [key: ResourceLocation]: Internal.RunescribingRecipe, [key: ResourceLocation]: Internal.RunescribingRecipe, [key: ResourceLocation]: Internal.RunescribingRecipe, [key: ResourceLocation]: Internal.RunescribingRecipe, [key: ResourceLocation]: Internal.RunescribingRecipe, [key: ResourceLocation]: Internal.RunescribingRecipe, [key: ResourceLocation]: Internal.RunescribingRecipe, [key: ResourceLocation]: Internal.RunescribingRecipe, [key: ResourceLocation]: Internal.RunescribingRecipe, [key: ResourceLocation]: Internal.RunescribingRecipe, [key: ResourceLocation]: Internal.RunescribingRecipe, [key: ResourceLocation]: Internal.RunescribingRecipe, [key: ResourceLocation]: Internal.RunescribingRecipe}) & (Internal.HashMap<ResourceLocation, Internal.RunescribingRecipe>);
    }
    type RunescribingRecipeSerializer_ = RunescribingRecipeSerializer;
    interface CapabilityForgeEnergy$EnergyIOBlockEntity {
        abstract transfer(arg0: Internal.BlockEntity_, arg1: number, arg2: boolean): number;
        (arg0: Internal.BlockEntity, arg1: number, arg2: boolean): number;
    }
    type CapabilityForgeEnergy$EnergyIOBlockEntity_ = CapabilityForgeEnergy$EnergyIOBlockEntity | ((arg0: Internal.BlockEntity, arg1: number, arg2: boolean)=> number);
    interface ProgressListener {
        abstract progressStart(arg0: net.minecraft.network.chat.Component_): void;
        abstract stop(): void;
        abstract progressStagePercentage(arg0: number): void;
        abstract progressStartNoAbort(arg0: net.minecraft.network.chat.Component_): void;
        abstract progressStage(arg0: net.minecraft.network.chat.Component_): void;
    }
    type ProgressListener_ = ProgressListener;
    class ItemView {
        constructor(arg0: Internal.ItemStack_, arg1: string)
        constructor(arg0: Internal.ItemStack_)
        getClass(): typeof any;
        /**
         * @deprecated
        */
        static fromContainer(arg0: net.minecraft.world.Container_, arg1: number, arg2: number): Internal.ViewGroup<Internal.ItemStack>;
        static groupOf(arg0: any, arg1: Internal.Accessor_<any>): Internal.List<Internal.ViewGroup<Internal.ItemStack>>;
        toString(): string;
        notifyAll(): void;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        static groupOf(arg0: net.minecraft.world.Container_, arg1: Internal.Accessor_<any>): Internal.List<Internal.ViewGroup<Internal.ItemStack>>;
        hashCode(): number;
        static "groupOf(net.minecraft.world.Container,snownee.jade.api.Accessor)"(arg0: net.minecraft.world.Container_, arg1: Internal.Accessor_<any>): Internal.List<Internal.ViewGroup<Internal.ItemStack>>;
        /**
         * @deprecated
        */
        static compacted(arg0: Internal.Stream_<Internal.ItemStack>, arg1: number): Internal.ViewGroup<Internal.ItemStack>;
        static "groupOf(java.lang.Object,snownee.jade.api.Accessor)"(arg0: any, arg1: Internal.Accessor_<any>): Internal.List<Internal.ViewGroup<Internal.ItemStack>>;
        wait(): void;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        get class(): typeof any
        item: Internal.ItemStack;
        text: string;
    }
    type ItemView_ = ItemView;
    class BeehiveBlockEntity$BeeReleaseStatus extends Internal.Enum<Internal.BeehiveBlockEntity$BeeReleaseStatus> {
        static valueOf<T extends Internal.Enum<T>>(arg0: T, arg1: string): T;
        getClass(): typeof any;
        "compareTo(net.minecraft.world.level.block.entity.BeehiveBlockEntity$BeeReleaseStatus)"(arg0: Internal.BeehiveBlockEntity$BeeReleaseStatus_): number;
        toString(): string;
        notifyAll(): void;
        static values(): Internal.BeehiveBlockEntity$BeeReleaseStatus[];
        compareTo(arg0: Internal.BeehiveBlockEntity$BeeReleaseStatus_): number;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        compareTo(arg0: any): number;
        name(): string;
        getDeclaringClass(): typeof Internal.BeehiveBlockEntity$BeeReleaseStatus;
        hashCode(): number;
        ordinal(): number;
        wait(): void;
        wait(arg0: number): void;
        "compareTo(java.lang.Object)"(arg0: any): number;
        equals(arg0: any): boolean;
        static valueOf(arg0: string): Internal.BeehiveBlockEntity$BeeReleaseStatus;
        describeConstable(): Internal.Optional<Internal.Enum$EnumDesc<Internal.BeehiveBlockEntity$BeeReleaseStatus>>;
        get class(): typeof any
        get declaringClass(): typeof Internal.BeehiveBlockEntity$BeeReleaseStatus
        static readonly EMERGENCY: (Internal.BeehiveBlockEntity$BeeReleaseStatus) & (Internal.BeehiveBlockEntity$BeeReleaseStatus);
        static readonly HONEY_DELIVERED: (Internal.BeehiveBlockEntity$BeeReleaseStatus) & (Internal.BeehiveBlockEntity$BeeReleaseStatus);
        static readonly BEE_RELEASED: (Internal.BeehiveBlockEntity$BeeReleaseStatus) & (Internal.BeehiveBlockEntity$BeeReleaseStatus);
    }
    type BeehiveBlockEntity$BeeReleaseStatus_ = "bee_released" | "honey_delivered" | BeehiveBlockEntity$BeeReleaseStatus | "emergency";
    interface IMixinMinecraft {
        abstract getFontManagerDrippy(): Internal.FontManager;
        get fontManagerDrippy(): Internal.FontManager
        (): Internal.FontManager_;
    }
    type IMixinMinecraft_ = IMixinMinecraft | (()=> Internal.FontManager_);
    class SelectionSideBar$Context extends Internal.Record {
        constructor(gui: Internal.ForgeGui_, g: Internal.GuiGraphics_, pTick: number, font: net.minecraft.client.gui.Font_, x0: number, y0: number)
        getClass(): typeof any;
        toString(): string;
        renderItem(arg0: Internal.ItemStack_, arg1: number, arg2: number): void;
        notifyAll(): void;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        g(): Internal.GuiGraphics;
        font(): net.minecraft.client.gui.Font;
        pTick(): number;
        hashCode(): number;
        wait(): void;
        gui(): Internal.ForgeGui;
        wait(arg0: number): void;
        y0(): number;
        equals(arg0: any): boolean;
        x0(): number;
        get class(): typeof any
    }
    type SelectionSideBar$Context_ = SelectionSideBar$Context;
    class SignableCommand <S> extends Internal.Record {
        constructor(arg0: Internal.List_<Internal.SignableCommand$Argument<S>>)
        static of<S>(arg0: Internal.ParseResults_<S>): Internal.SignableCommand<S>;
        getClass(): typeof any;
        hashCode(): number;
        "arguments"(): Internal.List<Internal.SignableCommand$Argument<S>>;
        toString(): string;
        wait(): void;
        notifyAll(): void;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        get class(): typeof any
    }
    type SignableCommand_<S> = SignableCommand<S>;
    class BiomeSpecialEffectsBuilder extends Internal.BiomeSpecialEffects$Builder {
        getClass(): typeof any;
        getAmbientAdditionsSound(): Internal.Optional<Internal.AmbientAdditionsSettings>;
        ambientAdditionsSound(arg0: Internal.AmbientAdditionsSettings_): Internal.BiomeSpecialEffects$Builder;
        waterColor(): number;
        grassColorOverride(arg0: number): Internal.BiomeSpecialEffects$Builder;
        getAmbientMoodSound(): Internal.Optional<Internal.AmbientMoodSettings>;
        getFoliageColorOverride(): Internal.Optional<number>;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        ambientParticle(arg0: Internal.AmbientParticleSettings_): Internal.BiomeSpecialEffects$Builder;
        getAmbientLoopSound(): Internal.Optional<Internal.Holder<Internal.SoundEvent>>;
        build(): Internal.BiomeSpecialEffects;
        waterFogColor(arg0: number): Internal.BiomeSpecialEffects$Builder;
        getGrassColorOverride(): Internal.Optional<number>;
        getFogColor(): number;
        getSkyColor(): number;
        grassColorModifier(arg0: Internal.BiomeSpecialEffects$GrassColorModifier_): Internal.BiomeSpecialEffects$Builder;
        static create(arg0: number, arg1: number, arg2: number, arg3: number): Internal.BiomeSpecialEffectsBuilder;
        getGrassColorModifier(): Internal.BiomeSpecialEffects$GrassColorModifier;
        static copyOf(arg0: Internal.BiomeSpecialEffects_): Internal.BiomeSpecialEffectsBuilder;
        toString(): string;
        fogColor(arg0: number): Internal.BiomeSpecialEffects$Builder;
        ambientLoopSound(arg0: Internal.Holder_<Internal.SoundEvent>): Internal.BiomeSpecialEffects$Builder;
        backgroundMusic(arg0: Internal.Music_): Internal.BiomeSpecialEffects$Builder;
        notifyAll(): void;
        ambientMoodSound(arg0: Internal.AmbientMoodSettings_): Internal.BiomeSpecialEffects$Builder;
        waterColor(arg0: number): Internal.BiomeSpecialEffects$Builder;
        hashCode(): number;
        getBackgroundMusic(): Internal.Optional<Internal.Music>;
        foliageColorOverride(arg0: number): Internal.BiomeSpecialEffects$Builder;
        getWaterFogColor(): number;
        wait(): void;
        wait(arg0: number): void;
        getAmbientParticle(): Internal.Optional<Internal.AmbientParticleSettings>;
        skyColor(arg0: number): Internal.BiomeSpecialEffects$Builder;
        equals(arg0: any): boolean;
        get class(): typeof any
        get ambientAdditionsSound(): Internal.Optional<Internal.AmbientAdditionsSettings>
        get ambientMoodSound(): Internal.Optional<Internal.AmbientMoodSettings>
        get foliageColorOverride(): Internal.Optional<number>
        get ambientLoopSound(): Internal.Optional<Internal.Holder<Internal.SoundEvent>>
        get grassColorOverride(): Internal.Optional<number>
        get fogColor(): number
        get skyColor(): number
        get grassColorModifier(): Internal.BiomeSpecialEffects$GrassColorModifier
        get backgroundMusic(): Internal.Optional<Internal.Music>
        get waterFogColor(): number
        get ambientParticle(): Internal.Optional<Internal.AmbientParticleSettings>
    }
    type BiomeSpecialEffectsBuilder_ = BiomeSpecialEffectsBuilder;
    class CripplingSmite extends Internal.SmiteMobEffect {
        constructor()
        getDisplayName(): net.minecraft.network.chat.Component;
        getClass(): typeof any;
        addAttributeModifier(arg0: Internal.Attribute_, arg1: string, arg2: number, arg3: Internal.AttributeModifier$Operation_): Internal.MobEffect;
        addAttributeModifiers(arg0: Internal.LivingEntity_, arg1: Internal.AttributeMap_, arg2: number): void;
        isInstantenous(): boolean;
        applyInstantenousEffect(arg0: Internal.Entity_, arg1: Internal.Entity_, arg2: Internal.LivingEntity_, arg3: number, arg4: number): void;
        notify(): void;
        isBeneficial(): boolean;
        wait(arg0: number, arg1: number): void;
        getEffectRendererInternal(): any;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientMobEffectExtensions>): void;
        getColor(): number;
        removeAttributeModifiers(arg0: Internal.LivingEntity_, arg1: Internal.AttributeMap_, arg2: number): void;
        applyEffectTick(arg0: Internal.LivingEntity_, arg1: number): void;
        getAttributeModifierValue(arg0: number, arg1: Internal.AttributeModifier_): number;
        getSortOrder(arg0: Internal.MobEffectInstance_): number;
        getDescriptionId(): string;
        static getIdFromNullable(arg0: Internal.MobEffect_): number;
        getCategory(): Internal.MobEffectCategory;
        toString(): string;
        performSmite(arg0: Internal.Player_, arg1: Internal.LivingEntity_, arg2: number, arg3: number, arg4: number, arg5: number): void;
        getCurativeItems(): Internal.List<Internal.ItemStack>;
        notifyAll(): void;
        setFactorDataFactory(arg0: Internal.Supplier_<Internal.MobEffectInstance$FactorData>): Internal.MobEffect;
        createFactorData(): Internal.Optional<Internal.MobEffectInstance$FactorData>;
        static byId(arg0: number): Internal.MobEffect;
        hashCode(): number;
        getAttributeModifiers(): Internal.Map<Internal.Attribute, Internal.AttributeModifier>;
        wait(): void;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        isDurationEffectTick(arg0: number, arg1: number): boolean;
        static getId(arg0: Internal.MobEffect_): number;
        get displayName(): net.minecraft.network.chat.Component
        get class(): typeof any
        get instantenous(): boolean
        get beneficial(): boolean
        get effectRendererInternal(): any
        get color(): number
        get descriptionId(): string
        get category(): Internal.MobEffectCategory
        get curativeItems(): Internal.List<Internal.ItemStack>
        set factorDataFactory(arg0: Internal.Supplier_<Internal.MobEffectInstance$FactorData>)
        get attributeModifiers(): Internal.Map<Internal.Attribute, Internal.AttributeModifier>
    }
    type CripplingSmite_ = CripplingSmite;
    class BasaltAshFeature$Config extends Internal.Record implements Internal.FeatureConfiguration {
        constructor(tries: number, xzSpread: number, ySpread: number, target: Internal.RuleTest_, ash: Internal.BlockStateProvider_, belowAsh: Internal.Optional_<Internal.BlockState>)
        getClass(): typeof any;
        ySpread(): number;
        getFeatures(): Internal.Stream<Internal.ConfiguredFeature<any, any>>;
        toString(): string;
        notifyAll(): void;
        notify(): void;
        xzSpread(): number;
        wait(arg0: number, arg1: number): void;
        tries(): number;
        hashCode(): number;
        target(): Internal.RuleTest;
        wait(): void;
        belowAsh(): Internal.Optional<Internal.BlockState>;
        wait(arg0: number): void;
        equals(o: any): boolean;
        ash(): Internal.BlockStateProvider;
        get class(): typeof any
        get features(): Internal.Stream<Internal.ConfiguredFeature<any, any>>
        static readonly CODEC: Internal.Codec<Internal.BasaltAshFeature$Config>;
    }
    type BasaltAshFeature$Config_ = BasaltAshFeature$Config;
    class IronGolemJSBuilder extends Internal.PathfinderMobBuilder<Internal.IronGolemEntityJS> {
        constructor(i: ResourceLocation_)
        /**
         * Sets a predicate to determine whether the entity should drop loot upon death.
         * The provided Predicate accepts a {@link LivingEntity} parameter,
         * representing the entity whose loot dropping behavior is being determined.
         * It returns a Boolean indicating whether the entity should drop loot.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.shouldDropLoot(entity => {
         *     // Define logic to determine whether the entity should drop loot
         *     // Use information about the LivingEntity provided by the context.
         *     return // Some Boolean value indicating whether the entity should drop loot;
         * });
         * ```
        */
        shouldDropLoot(b: Internal.Function_<Internal.LivingEntity, any>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a predicate function to determine whether the entity can stand on a fluid.
         * The provided Predicate accepts a {@link ContextUtils.EntityFluidStateContext} parameter,
         * representing the context of the entity potentially standing on a fluid.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.canStandOnFluid(context => {
         *     // Define conditions for the entity to be able to stand on a fluid
         *     // Use information about the EntityFluidStateContext provided by the context.
         *     return // Some boolean condition indicating if the entity can stand on the fluid;
         * });
         * ```
        */
        canStandOnFluid(predicate: Internal.Function_<Internal.ContextUtils$EntityFluidStateContext, any>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets the swim splash sound for the entity using either a string representation or a ResourceLocation object.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.setSwimSplashSound("minecraft:entity.generic.splash");
         * ```
        */
        setSwimSplashSound(sound: any): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a predicate function to determine whether the entity is attackable.
         * The provided Predicate accepts a {@link LivingEntity} parameter,
         * representing the entity that may be checked for its attackability.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.isAttackable(entity => {
         *     // Define conditions to check if the entity is attackable
         *     // Use information about the LivingEntity provided by the context.
         *     return // Some boolean condition indicating if the entity is attackable;
         * });
         * ```
        */
        isAttackable(predicate: Internal.Function_<Internal.LivingEntity, any>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a callback function to be executed when the entity drops custom loot upon death.
         * The provided Consumer accepts a {@link ContextUtils.EntityLootContext} parameter,
         * representing the context of the entity's death and loot dropping.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.dropCustomDeathLoot(context => {
         *     // Define custom logic for handling the entity dropping custom loot upon death
         *     // Use information about the EntityLootContext provided by the context.
         * });
         * ```
        */
        dropCustomDeathLoot(consumer: Internal.Consumer_<Internal.ContextUtils$EntityLootContext>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Adds a triggerable AnimationController to the entity callable off the entity's methods anywhere.
         * @param name The name of the controller
         * @param translationTicksLength How many ticks it takes to transition between different animations
         * @param triggerableAnimationID The unique identifier of the triggerable animation(sets it apart from other triggerable animations)
         * @param triggerableAnimationName The name of the animation defined in the animations.json
         * @param loopType The loop type for the triggerable animation, either 'LOOP' or 'PLAY_ONCE' or 'HOLD_ON_LAST_FRAME' or 'DEFAULT'
        */
        addTriggerableAnimationController(name: string, translationTicksLength: number, triggerableAnimationName: string, triggerableAnimationID: string, loopType: string): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a predicate to determine whether the entity can fire a projectile weapon.
         * 
         * @param canFireProjectileWeaponPredicate A Predicate accepting a
         *            ContextUtils.EntityProjectileWeaponContext parameter,
         *            defining the condition under which the entity can fire a projectile weapon.
         * 
         * Example usage:
         * ```javascript
         * mobBuilder.canFireProjectileWeaponPredicate(context => {
         *     // Custom logic to determine whether the entity can fire a projectile weapon
         *     // Access information about the entity and the projectile weapon using the provided context.
         *     return context.projectileWeapon.id == 'minecraft:bow'; // Replace with your specific condition.
         * });
         * ```
        */
        canFireProjectileWeaponPredicate(canFireProjectileWeaponPredicate: Internal.Function_<Internal.ContextUtils$EntityProjectileWeaponContext, any>): Internal.MobBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets the spawn placement of the entity type
         * entityBuilder.spawnPlacement('on_ground', 'world_surface', (entitypredicate, levelaccessor, spawntype, blockpos, randomsource) => {
         *     if (levelaccessor.getLevel().getBiome(blockpos) == 'minecraft:plains') return true;
         *     return false
         * })
         * @param placementType The placement type of the spawn, accepts 'on_ground', 'in_water', 'no_restrictions', 'in_lava'
         * @param heightMap The height map used for the spawner
         * @param spawnPredicate The predicate that determines if the entity will spawn
        */
        spawnPlacement(placementType: Internal.SpawnPlacements$Type_, heightMap: Internal.Heightmap$Types_, spawnPredicate: Internal.SpawnPlacements$SpawnPredicate_<Internal.IronGolemEntityJS>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a function to determine the custom hurt sound of the entity.
         * The provided Function accepts a {@link ContextUtils.HurtContext} parameter,
         * ```javascript
         * entityBuilder.setHurtSound(context => {
         *     // Custom logic to determine the hurt sound for the entity
         *     // You can use information from the HurtContext to customize the sound based on the context
         *     const { entity, damageSource } = context;
         *     // Determine the hurt sound based on the type of damage source
         *     switch (damageSource.getType()) {
         *         case "fire":
         *             return "minecraft:entity.generic.burn";
         *         case "fall":
         *             return "minecraft:entity.generic.hurt";
         *         case "drown":
         *             return "minecraft:entity.generic.hurt";
         *         case "explosion":
         *             return "minecraft:entity.generic.explode";
         *         default:
         *             return "minecraft:entity.generic.explode";
         *     }
         * })
         * ```
        */
        setHurtSound(sound: Internal.Function_<Internal.ContextUtils$HurtContext, any>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a predicate function to determine whether the entity is on a climbable surface.
         * The provided Predicate accepts a {@link LivingEntity} parameter,
         * representing the entity that may be checked for being on a climbable surface.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.onClimbable(entity => {
         *     // Define conditions to check if the entity is on a climbable surface
         *     // Use information about the LivingEntity provided by the context.
         *     return // Some boolean condition indicating if the entity is on a climbable surface;
         * });
         * ```
        */
        onClimbable(predicate: Internal.Function_<Internal.LivingEntity, any>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a predicate to determine if the entity should be removed when far away from the player.
         * 
         * @param removeWhenFarAway A Function accepting a ContextUtils.EntityDistanceToPlayerContext parameter,
         *                          defining the condition for the entity to be removed when far away.
         * 
         * Example usage:
         * ```javascript
         * mobBuilder.removeWhenFarAway(context => {
         *     // Custom logic to determine if the entity should be removed when far away
         *     // Return true if the entity should be removed based on the provided context.
         * });
         * ```
        */
        removeWhenFarAway(removeWhenFarAway: Internal.Function_<Internal.ContextUtils$EntityDistanceToPlayerContext, any>): Internal.MobBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets the swim sound for the entity using a string representation.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.setSwimSound("minecraft:entity.generic.swim");
         * ```
        */
        setSwimSound(sound: any): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Function which sets the offset for riding on the mob entity.
         * 
         * @param myRidingOffset The offset value for riding on the mob.
         * Defaults to 0.0.
         * 
         * Example usage:
         * ```javascript
         * mobBuilder.myRidingOffset(entity => {
         *     //Use the provided context about the entity to determine the riding offset of the passengers
         *     return 5 //Some double value;
         * })
         * ```
        */
        myRidingOffset(myRidingOffset: Internal.Function_<Internal.LivingEntity, any>): Internal.MobBuilder<Internal.IronGolemEntityJS>;
        /**
         * Function determining if the entity is allied with a potential target.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.isAlliedTo(context => {
         *     const {entity, target} = context
         *     return target.type == 'minecraft:blaze'
         * });
         * ```
        */
        isAlliedTo(isAlliedTo: Internal.Function_<Internal.ContextUtils$LineOfSightContext, any>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets the function to determine the squared melee attack range for the entity.
         * 
         * @param meleeAttackRangeSqr A Function accepting a {@link Mob} parameter,
         *                           defining the squared melee attack range based on the entity's state.
         *                           Returns a 'Double' value representing the squared melee attack range.
         * Example usage:
         * ```javascript
         * mobBuilder.meleeAttackRangeSqr(entity => {
         *     // Custom logic to calculate the squared melee attack range based on the provided mob.
         *     return 2;
         * });
         * ```
        */
        meleeAttackRangeSqr(meleeAttackRangeSqr: Internal.Function_<Internal.Mob, any>): Internal.MobBuilder<Internal.IronGolemEntityJS>;
        createObject(): Internal.EntityType<Internal.IronGolemEntityJS>;
        /**
         * Sets a callback function to be executed when the entity starts sleeping.
         * The provided Consumer accepts a {@link ContextUtils.EntityBlockPosContext} parameter,
         * representing the context of the entity starting to sleep at a specific block position.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.onStartSleeping(context => {
         *     // Define custom logic for handling the entity starting to sleep
         *     // Use information about the EntityBlockPosContext provided by the context.
         * });
         * ```
        */
        onStartSleeping(consumer: Internal.Consumer_<Internal.ContextUtils$EntityBlockPosContext>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a callback function to be executed when the entity is added to the world.
         * The provided Consumer accepts a {@link LivingEntity} parameter,
         * representing the entity that is added to the world.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.onAddedToWorld(entity => {
         *     // Define custom logic for handling when the entity is added to the world
         *     // Use information about the LivingEntity provided by the context.
         * });
         * ```
        */
        onAddedToWorld(onAddedToWorldCallback: Internal.Consumer_<Internal.LivingEntity>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a predicate to determine if the entity has inverted heal and harm behavior.
         * 
         * @param invertedHealAndHarm The predicate to check for inverted heal and harm behavior.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.invertedHealAndHarm(entity => {
         *     // Custom logic to determine if the entity has inverted heal and harm behavior
         *     return true; // Replace with your custom boolean condition
         * });
         * ```
        */
        invertedHealAndHarm(invertedHealAndHarm: Internal.Function_<Internal.LivingEntity, any>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets the display name for this object, e.g. `Stone`.
         * 
         * This will be overridden by a lang file if it exists.
        */
        displayName(name: net.minecraft.network.chat.Component_): Internal.BuilderBase<Internal.EntityType<T>>;
        /**
         * Sets a callback function to be executed when the entity stops riding.
         * The provided Consumer accepts a {@link LivingEntity} parameter,
         * representing the entity that has stopped being ridden.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.onStopRiding(entity => {
         *     // Define custom logic for handling when the entity stops being ridden
         *     // Use information about the LivingEntity provided by the context.
         * });
         * ```
        */
        onStopRiding(callback: Internal.Consumer_<Internal.LivingEntity>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets whether the entity is always considered as an experience dropper.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.isAlwaysExperienceDropper(true);
         * ```
        */
        isAlwaysExperienceDropper(b: boolean): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a function to determine the texture resource for the entity.
         * The provided Function accepts a parameter of type T (the entity),
         * allowing changing the texture based on information about the entity.
         * The default behavior returns <namespace>:textures/entity/<path>.png.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.textureResource(entity => {
         *     // Define logic to determine the texture resource for the entity
         *     // Use information about the entity provided by the context.
         *     return "kubejs:textures/entity/wyrm.png" // Some ResourceLocation representing the texture resource;
         * });
         * ```
        */
        textureResource(function_: Internal.Function_<Internal.IronGolemEntityJS, any>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Adds a spawner for this entity to the provided biome(s)
         * @param biomes A list of biomes that the entity should spawn in. If using a tag, only one value may be provided
         * @param weight The spawn weight the entity should have
         * @param minCount The minimum number of entities that can spawn at a time
         * @param maxCount The maximum number of entities that can spawn at a time
        */
        biomeSpawn(biomes: Internal.List_<string>, weight: number, minCount: number, maxCount: number): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a predicate function to determine whether the entity is affected by potions.
         * The provided Predicate accepts a {@link LivingEntity} parameter,
         * representing the entity that may be checked for its susceptibility to potions.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.isAffectedByPotions(entity => {
         *     // Define conditions to check if the entity is affected by potions
         *     // Use information about the LivingEntity provided by the context.
         *     return // Some boolean condition indicating if the entity is affected by potions;
         * });
         * ```
        */
        isAffectedByPotions(predicate: Internal.Function_<Internal.LivingEntity, any>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a predicate function to determine whether the entity can be affected by an effect.
         * The provided Predicate accepts a {@link ContextUtils.OnEffectContext} parameter,
         * representing the context of the effect that may affect the entity.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.canBeAffected(context => {
         *     // Define conditions to check if the entity can be affected by the effect
         *     // Use information about the OnEffectContext provided by the context.
         *     return // Some boolean condition indicating if the entity can be affected by an effect;
         * });
         * ```
        */
        canBeAffected(predicate: Internal.Function_<Internal.ContextUtils$OnEffectContext, any>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a callback function to be executed when the entity starts sprinting.
         * The provided Consumer accepts a {@link LivingEntity} parameter,
         * representing the entity that has started sprinting.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.onSprint(entity => {
         *     // Define custom logic for handling when the entity starts sprinting
         *     // Use information about the LivingEntity provided by the context.
         * });
         * ```
        */
        onSprint(consumer: Internal.Consumer_<Internal.LivingEntity>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets the ingredient required for the entity to fire a projectile weapon.
         * 
         * @param canFireProjectileWeapon An Ingredient representing the required item for firing a projectile weapon.
         * 
         * Example usage:
         * ```javascript
         * mobBuilder.canFireProjectileWeapon([
         *     'minecraft:bow',
         *     'minecraft:crossbow'
         * ]);
         * ```
        */
        canFireProjectileWeapon(canFireProjectileWeapon: Internal.Ingredient_): Internal.MobBuilder<Internal.IronGolemEntityJS>;
        transformObject(obj: Internal.EntityType_<T>): Internal.EntityType<T>;
        /**
         * Sets a predicate to determine whether the living entity dampens vibrations.
         * 
         * @param predicate The predicate to determine whether the living entity dampens vibrations.
         * 
         * The predicate should take a LivingEntity as a parameter and return a boolean value indicating whether the living entity dampens vibrations.
         * 
         * Example usage:
         * ```javascript
         * baseLivingEntityBuilder.dampensVibrations(entity => {
         *     // Determine whether the living entity dampens vibrations
         *     // Return true if the entity dampens vibrations, false otherwise
         * });
         * ```
        */
        dampensVibrations(predicate: Internal.Function_<Internal.LivingEntity, any>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a predicate to determine whether the entity is affected by fluids.
         * The provided Predicate accepts a {@link LivingEntity} parameter,
         * representing the entity whose interaction with fluids is being determined.
         * It returns a Boolean indicating whether the entity is affected by fluids.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.isAffectedByFluids(entity => {
         *     // Define logic to determine whether the entity is affected by fluids
         *     // Use information about the LivingEntity provided by the context.
         *     return // Some Boolean value indicating whether the entity is affected by fluids;
         * });
         * ```
        */
        isAffectedByFluids(b: Internal.Function_<Internal.LivingEntity, any>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets the client tracking range for the entity.
         * Defaults to 5.
         * Example usage:
         * ```javascript
         * entityBuilder.clientTrackingRange(64); // Set the client tracking range to 64 blocks
         * ```
        */
        clientTrackingRange(i: number): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a callback function to be executed when a player interacts with the entity.
         * The provided Consumer accepts a {@link ContextUtils.PlayerEntityContext} parameter,
         * representing the context of the player's interaction with the entity.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.playerTouch(context => {
         *     // Define custom logic for handling player interaction with the entity
         *     // Use information about the PlayerEntityContext provided by the context.
         * });
         * ```
        */
        playerTouch(consumer: Internal.Consumer_<Internal.ContextUtils$PlayerEntityContext>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a callback function to be executed when the entity is hurt.
         * The provided Consumer accepts a {@link ContextUtils.EntityDamageContext} parameter,
         * representing the context of the entity being hurt.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.onHurt(context => {
         *     // Define custom logic for handling when the entity is hurt
         *     // Use information about the EntityDamageContext provided by the context.
         * });
         * ```
        */
        onHurt(predicate: Internal.Consumer_<Internal.ContextUtils$EntityDamageContext>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Combined method of formattedDisplayName().displayName(name).
        */
        formattedDisplayName(name: net.minecraft.network.chat.Component_): Internal.BuilderBase<Internal.EntityType<T>>;
        generateLang(lang: Internal.LangEventJS_): void;
        /**
         * Sets a function to calculate fall damage for the entity.
         * The provided Function accepts a {@link ContextUtils.CalculateFallDamageContext} parameter,
         * representing the context of the fall damage calculation.
         * It returns an Integer representing the calculated fall damage.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.calculateFallDamage(context => {
         *     // Define logic to calculate and return the fall damage for the entity
         *     // Use information about the CalculateFallDamageContext provided by the context.
         *     return // Some Integer value representing the calculated fall damage;
         * });
         * ```
        */
        calculateFallDamage(calculation: Internal.Function_<Internal.ContextUtils$CalculateFallDamageContext, any>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a callback function to be executed when the entity's target changes.
         * 
         * @param setTarget A Consumer accepting a ContextUtils.TargetChangeContext parameter,
         *                  defining the behavior to be executed when the entity's target changes.
         * 
         * Example usage:
         * ```javascript
         * mobBuilder.onTargetChanged(context => {
         *     // Custom logic to handle the entity's target change
         *     // Access information about the target change using the provided context.
         * });
         * ```
        */
        onTargetChanged(setTarget: Internal.Consumer_<Internal.ContextUtils$TargetChangeContext>): Internal.MobBuilder<Internal.IronGolemEntityJS>;
        /**
         * @param positionRider A consumer determining the position of rider/riders.
         * 
         *     Example usage:
         *     ```javascript
         *     entityBuilder.positionRider(context => {
         *         const {entity, passenger, moveFunction} = context
         *     });
         *     ```
        */
        positionRider(builderConsumer: Internal.Consumer_<Internal.ContextUtils$PositionRiderContext>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Defines logic to render the entity.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.render(context => {
         *     // Define logic to render the entity
         *     if (context.entity.isBaby()) {
         *         context.poseStack.scale(0.5, 0.5, 0.5);
         *     }
         * });
         * ```
        */
        render(render: Internal.Consumer_<Internal.ContextUtils$RenderContext<Internal.IronGolemEntityJS>>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        getClass(): typeof any;
        /**
         * Sets whether persistence is required for the entity.
         * 
         * @param isPersistenceRequired A boolean indicating whether persistence is required.
         * 
         * Example usage:
         * ```javascript
         * mobBuilder.isPersistenceRequired(true);
         * ```
        */
        isPersistenceRequired(isPersistenceRequired: boolean): Internal.MobBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a callback function to be executed when the entity equips an item.
         * The provided Consumer accepts a {@link ContextUtils.EntityEquipmentContext} parameter,
         * representing the context of the entity equipping an item.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.onEquipItem(context => {
         *     // Define custom logic for handling when the entity equips an item
         *     // Use information about the EntityEquipmentContext provided by the context.
         * });
         * ```
        */
        onEquipItem(onEquipItem: Internal.Consumer_<Internal.ContextUtils$EntityEquipmentContext>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a function to determine the next step distance for the entity.
         * The provided Function accepts a {@link Entity} parameter,
         * representing the entity whose next step distance is being determined.
         * It returns a Float representing the next step distance.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.nextStep(entity => {
         *     // Define logic to calculate and return the next step distance for the entity
         *     // Use information about the Entity provided by the context.
         *     return // Some Float value representing the next step distance;
         * });
         * ```
        */
        nextStep(nextStep: Internal.Function_<Internal.Entity, any>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a callback function to be executed when the entity is blocked by a shield.
         * The provided Consumer accepts a {@link ContextUtils.LivingEntityContext} parameter,
         * representing the entity that is blocked by a shield.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.onBlockedByShield(context => {
         *     // Define custom logic for handling when the entity is blocked by a shield
         *     // Use information about the LivingEntity provided by the context.
         * });
         * ```
        */
        onBlockedByShield(onBlockedByShield: Internal.Consumer_<Internal.ContextUtils$LivingEntityContext>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a consumer to handle custom lerping logic for the living entity.
         * 
         * @param lerpTo The consumer to handle the custom lerping logic.
         * 
         * The consumer should take a LerpToContext as a parameter, providing information about the lerping operation, including the target position, yaw, pitch, increment count, teleport flag, and the entity itself.
         * 
         * Example usage:
         * ```javascript
         * baseLivingEntityBuilder.lerpTo(context => {
         *     // Custom lerping logic for the living entity
         *     const { x, y, z, yaw, pitch, posRotationIncrements, teleport, entity } = context;
         *     // Perform custom lerping operations using the provided context
         *     // For example, you can smoothly move the entity from its current position to the target position
         *     entity.setPositionAndRotation(x, y, z, yaw, pitch);
         * });
         * ```
        */
        lerpTo(lerpTo: Internal.Consumer_<Internal.ContextUtils$LerpToContext>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a callback function to be executed when the entity's air supply decreases.
         * The provided Consumer accepts a {@link LivingEntity} parameter,
         * representing the entity whose air supply is being decreased.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.onDecreaseAirSupply(entity => {
         *     // Define custom logic for handling when the entity's air supply decreases
         *     // Use information about the LivingEntity provided by the context.
         * });
         * ```
        */
        onDecreaseAirSupply(onDecreaseAirSupply: Internal.Consumer_<Internal.LivingEntity>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a predicate function to determine whether the entity has line of sight to another entity.
         * The provided Function accepts a {@link LineOfSightContext} parameter,
         * representing the entity to check for line of sight.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.hasLineOfSight(context => {
         *     // Define conditions to check if the entity has line of sight to the target entity
         *     // Use information about the Entity provided by the context.
         *     return // Some boolean condition indicating if there is line of sight;
         * });
         * ```
        */
        hasLineOfSight(f: Internal.Function_<Internal.ContextUtils$LineOfSightContext, any>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a predicate function to determine whether the entity can trample or step on something.
         * The provided Predicate accepts a {@link ContextUtils.CanTrampleContext} parameter,
         * representing the context of the potential trampling action, and returns a boolean.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.canTrample(context => {
         *     // Define conditions for the entity to be allowed to trample
         *     // Use information about the CanTrampleContext provided by the context.
         *     return false // Some boolean condition indicating if the entity can trample;
         * });
         * ```
        */
        canTrample(predicate: Internal.Function_<Internal.ContextUtils$CanTrampleContext, any>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets the list of block names to which the entity is immune.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.immuneTo("minecraft:stone", "minecraft:dirt");
         * ```
        */
        immuneTo(...blockNames: string[]): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets the callback function to be executed when the entity ticks while leashed.
         * 
         * @param consumer A Consumer accepting a {@link ContextUtils.PlayerEntityContext} parameter,
         *                 defining the behavior to be executed when the entity ticks while leashed.
         * 
         * Example usage:
         * ```javascript
         * mobBuilder.tickLeash(context => {
         *     // Custom logic to handle the entity's behavior while leashed.
         *     // Access information about the player and entity using the provided context.
         * });
         * ```
        */
        tickLeash(consumer: Internal.Consumer_<Internal.ContextUtils$PlayerEntityContext>): Internal.MobBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a callback function to be executed when the entity performs an eating action.
         * 
         * @param ate A Consumer accepting a LivingEntity parameter,
         *            defining the behavior to be executed when the entity eats.
         * 
         * Example usage:
         * ```javascript
         * mobBuilder.ate(entity => {
         *     // Custom logic to handle the entity's eating action
         *     // Access information about the entity using the provided parameter.
         * });
         * ```
        */
        ate(ate: Internal.Consumer_<Internal.LivingEntity>): Internal.MobBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a callback function to be executed when the entity picks up an item.
         * The provided Consumer accepts a {@link ContextUtils.EntityItemEntityContext} parameter,
         * representing the context of the entity picking up an item with another entity.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.onItemPickup(context => {
         *     // Define custom logic for handling the entity picking up an item
         *     // Use information about the EntityItemEntityContext provided by the context.
         * });
         * ```
        */
        onItemPickup(consumer: Internal.Consumer_<Internal.ContextUtils$EntityItemEntityContext>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Defines in what condition the entity will start freezing.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.isFreezing(entity => {
         *     return true;
         * });
         * ```
        */
        isFreezing(isFreezing: Internal.Function_<Internal.LivingEntity, any>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Adds a new AnimationController to the entity, with the ability to add event listeners
         * @param name The name of the controller
         * @param translationTicksLength How many ticks it takes to transition between different animations
         * @param predicate The predicate for the controller, determines if an animation should continue or not
         * @param soundListener A sound listener, used to execute actions when the json requests a sound to play. May be null
         * @param particleListener A particle listener, used to execute actions when the json requests a particle. May be null
         * @param instructionListener A custom instruction listener, used to execute actions based on arbitrary instructions provided by the json. May be null
        */
        addKeyAnimationController(name: string, translationTicksLength: number, predicate: Internal.BaseLivingEntityBuilder$IAnimationPredicateJS_<Internal.IronGolemEntityJS>, soundListener: Internal.BaseLivingEntityBuilder$ISoundListenerJS_<Internal.IronGolemEntityJS>, particleListener: Internal.BaseLivingEntityBuilder$IParticleListenerJS_<Internal.IronGolemEntityJS>, instructionListener: Internal.BaseLivingEntityBuilder$ICustomInstructionListenerJS_<Internal.IronGolemEntityJS>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a callback function to be executed during the living entity's AI step.
         * The provided Consumer accepts a {@link LivingEntity} parameter,
         * allowing customization of the AI behavior.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.aiStep(entity => {
         *     // Custom logic to be executed during the living entity's AI step
         *     // Access and modify information about the entity using the provided context.
         * });
         * ```
        */
        aiStep(aiStep: Internal.Consumer_<Internal.LivingEntity>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets the function to determine whether the entity can pick up loot.
         * 
         * @param canPickUpLoot A Function accepting a {@link Mob} parameter,
         *                      defining the condition for the entity to pick up loot.
         * 
         * Example usage:
         * ```javascript
         * mobBuilder.canPickUpLoot(entity => {
         *     // Custom logic to determine whether the entity can pick up loot based on the provided mob.
         *     return true;
         * });
         * ```
        */
        canPickUpLoot(canPickUpLoot: Internal.Function_<Internal.Mob, any>): Internal.MobBuilder<Internal.IronGolemEntityJS>;
        /**
         * Indicates that no egg item should be created for this entity type
        */
        noEggItem(): Internal.MobBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a function to determine the model resource for the entity.
         * The provided Function accepts a parameter of type T (the entity),
         * allowing changing the model based on information about the entity.
         * The default behavior returns <namespace>:geo/entity/<path>.geo.json.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.modelResource(entity => {
         *     // Define logic to determine the model resource for the entity
         *     // Use information about the entity provided by the context.
         *     return "kubejs:geo/entity/wyrm.geo.json" // Some ResourceLocation representing the model resource;
         * });
         * ```
        */
        modelResource(function_: Internal.Function_<Internal.IronGolemEntityJS, any>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets the scale of the model.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.modelSize(2,2);
         * ```
        */
        modelSize(scaleHeight: number, scaleWidth: number): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a predicate function to determine whether the entity is currently glowing.
         * The provided Predicate accepts a {@link LivingEntity} parameter,
         * representing the entity that may be checked for its glowing state.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.isCurrentlyGlowing(entity => {
         *     // Define the conditions to check if the entity is currently glowing
         *     // Use information about the LivingEntity provided by the context.
         *     const isGlowing = // Some boolean condition to check if the entity is glowing;
         *     return isGlowing;
         * });
         * ```
        */
        isCurrentlyGlowing(predicate: Internal.Function_<Internal.LivingEntity, any>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets the overall sound volume for the entity.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.setSoundVolume(0.5);
         * ```
        */
        setSoundVolume(volume: number): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets the death sound for the entity.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.setDeathSound("minecraft:entity.generic.death");
         * ```
        */
        setDeathSound(sound: any): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a predicate function to determine whether the entity is invulnerable to a specific type of damage.
         * The provided Predicate accepts a {@link ContextUtils.DamageContext} parameter,
         * representing the context of the damage, and returns a boolean indicating invulnerability.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.isInvulnerableTo(context => {
         *     // Define conditions for the entity to be invulnerable to the specific type of damage
         *     // Use information about the DamageContext provided by the context.
         *     return true // Some boolean condition indicating if the entity has invulnerability to the damage type;
         * });
         * ```
        */
        isInvulnerableTo(predicate: Internal.Function_<Internal.ContextUtils$DamageContext, any>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a function to determine the standing eye height of the entity.
         * The provided Function accepts a {@link ContextUtils.EntityPoseDimensionsContext} parameter,
         * representing the context of the entity's pose and dimensions when standing.
         * It returns a Float representing the standing eye height.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.setStandingEyeHeight(context => {
         *     // Define logic to calculate and return the standing eye height for the entity
         *     // Use information about the EntityPoseDimensionsContext provided by the context.
         *     return // Some Float value representing the standing eye height;
         * });
         * ```
        */
        setStandingEyeHeight(setStandingEyeHeight: Internal.Function_<Internal.ContextUtils$EntityPoseDimensionsContext, any>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets the block jump factor for the entity.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.setBlockJumpFactor(entity => {
         *     //Set the jump factor for the entity through context
         *     return 1 //some float value;
         * });
         * ```
        */
        setBlockJumpFactor(blockJumpFactor: Internal.Function_<Internal.LivingEntity, any>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Adds an animation controller to the entity with the specified parameters.
         * 
         * @param name The name of the animation controller.
         * @param translationTicksLength The length of translation ticks for the animation.
         * @param predicate The animation predicate defining the conditions for the animation to be played.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.addAnimationController('exampleController', 5, event => {
         *     // Define conditions for the animation to be played based on the entity.
         *     if (event.entity.hurtTime > 0) {
         *         event.thenLoop('spawn');
         *     } else {
         *         event.thenPlayAndHold('idle');
         *     }
         *     return true; // Some boolean condition indicating if the animation should be played;
         * });
         * ```
        */
        addAnimationController(name: string, translationTicksLength: number, predicate: Internal.BaseLivingEntityBuilder$IAnimationPredicateJS_<Internal.IronGolemEntityJS>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        toString(): string;
        /**
         * Sets a function to determine the animation resource for the entity.
         * The provided Function accepts a parameter of type T (the entity),
         * allowing changing the animations based on information about the entity.
         * The default behavior returns <namespace>:animations/<path>.animation.json.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.animationResource(entity => {
         *     // Define logic to determine the animation resource for the entity
         *     // Use information about the entity provided by the context.
         *     //return some ResourceLocation representing the animation resource;
         *     return "kubejs:animations/entity/wyrm.animation.json" // Some ResourceLocation representing the animation resource;
         * });
         * ```
        */
        animationResource(function_: Internal.Function_<Internal.IronGolemEntityJS, any>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        notifyAll(): void;
        /**
         * Sets a function to determine whether the entity can disable its target's shield.
         * The provided Predicate accepts a {@link LivingEntity} parameter.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.canDisableShield(entity => {
         *     // Define the conditions to check if the entity can disable its shield
         *     // Use information about the LivingEntity provided by the context.
         *     return true;
         * });
         * ```
        */
        canDisableShield(predicate: Internal.Function_<Internal.LivingEntity, any>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets whether the entity should despawn in peaceful difficulty.
         * 
         * @param shouldDespawnInPeaceful A boolean indicating whether the entity should despawn in peaceful difficulty.
         * 
         * Example usage:
         * ```javascript
         * mobBuilder.shouldDespawnInPeaceful(true);
         * ```
        */
        shouldDespawnInPeaceful(shouldDespawnInPeaceful: boolean): Internal.MobBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a function to determine the block speed factor of the entity.
         * The provided Function accepts a {@link LivingEntity} parameter,
         * representing the entity whose block speed factor is being determined.
         * It returns a Float representing the block speed factor.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.blockSpeedFactor(entity => {
         *     // Define logic to calculate and return the block speed factor for the entity
         *     // Use information about the LivingEntity provided by the context.
         *     return // Some Float value representing the block speed factor;
         * });
         * ```
        */
        blockSpeedFactor(callback: Internal.Function_<Internal.LivingEntity, any>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a predicate function to determine whether the entity can attack another entity.
         * The provided Predicate accepts a {@link ContextUtils.LivingEntityContext} parameter,
         * representing the entity that may be attacked.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.canAttack(context => {
         *     // Define conditions to check if the entity can attack the targetEntity
         *     // Use information about the LivingEntity provided by the context.
         *     return // Some boolean condition indicating if the entity can attack the targetEntity;
         * });
         * ```
        */
        canAttack(customCanAttack: Internal.Function_<Internal.ContextUtils$LivingEntityContext, any>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * @param scaleModelForRender A Consumer to determing logic for model scaling and rendering
         *     without affecting core logic such as hitbox sizing.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.scaleModelForRender(context => {
         *     const { entity, widthScale, heightScale, poseStack, model, isReRender, partialTick, packedLight, packedOverlay } = context
         *     if (entity.isBaby()) {
         *         poseStack.scale(0.5, 0.5, 0.5)
         *     }
         * });
         * ```
        */
        scaleModelForRender(scaleModelForRender: Internal.Consumer_<Internal.ContextUtils$ScaleModelRenderContext<Internal.IronGolemEntityJS>>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        wait(arg0: number): void;
        /**
         * Sets a callback function to be executed when an effect is removed from the entity.
         * The provided Consumer accepts a {@link ContextUtils.OnEffectContext} parameter,
         * representing the context of the effect being removed from the entity.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.onEffectRemoved(context => {
         *     // Define custom logic for handling when an effect is removed from the entity
         *     // Use information about the OnEffectContext provided by the context.
         * });
         * ```
        */
        onEffectRemoved(consumer: Internal.Consumer_<Internal.ContextUtils$OnEffectContext>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Determines if the entity should serialize its data. Defaults to true.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.saves(false);
         * ```
        */
        saves(shouldSave: boolean): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Function determining if the entity may collide with another entity
         * using the ContextUtils.CollidingEntityContext which has this entity and the
         * one colliding with this entity.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.canCollideWith(context => {
         *     return true //Some Boolean value determining whether the entity may collide with another
         * });
         * ```
        */
        canCollideWith(canCollideWith: Internal.Function_<Internal.ContextUtils$CollidingEntityContext, any>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        newID(pre: string, post: string): ResourceLocation;
        /**
         * Adds a tag to this object, e.g. `minecraft:stone`.
        */
        tag(tag: ResourceLocation_): Internal.BuilderBase<Internal.EntityType<T>>;
        /**
         * Sets a function to determine if the entity can be leashed.
         * 
         * @param canBeLeashed A Function accepting a ContextUtils.PlayerEntityContext parameter
         * 
         * Example usage:
         * ```javascript
         * mobBuilder.canBeLeashed(context => {
         *     return true // Return true if the entity can be leashed, false otherwise.
         * });
         * ```
        */
        canBeLeashed(canBeLeashed: Internal.Function_<Internal.ContextUtils$PlayerEntityContext, any>): Internal.MobBuilder<Internal.IronGolemEntityJS>;
        /**
         * Defines the Mob's Type
         * Examples: 'undead', 'water', 'arthropod', 'undefined', 'illager'
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.mobType('undead');
         * ```
        */
        mobType(mt: any): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets the main arm of the entity. Defaults to 'right'.
         * 
         * @param arm The main arm of the entity. Accepts values "left" or "right".
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.mainArm("left");
         * ```
        */
        mainArm(arm: any): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Adds an extra hitbox to the mob. Aka part-entities.
         * Vanilla ticks extra hitboxes(for example the ender dragon's) with the
         * .tickPart method which specifies which hitbox to move to the entity and
         * its offset. This method is available off of the parent entity anywhere
         * including non EntityJS callbacks. (Usually used in the entity's aiStep method)
         * For example: `entity.tickPart("head", 0, 1, 0)`
         * 
         * Creation of the hitbox:
         * ```javascript
         * entityBuilder.addPartEntity("head", 1, 2, builder => {
         *     // Can also be null
         *     builder.isPickable(true)
         * });
         * ```
         * @param name The name of the part
         * @param width The width of the part
         * @param height The height of the part
         * @param builderConsumer The builder for the part, very similar to the normal builder callbacks
        */
        addPartEntity(name: string, width: number, height: number, builderConsumer: Internal.Consumer_<Internal.PartBuilder<Internal.IronGolemEntityJS>>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets whether the entity can jump.
         * 
         * @param canJump A boolean indicating whether the entity can jump.
         * 
         * Example usage:
         * ```javascript
         * mobBuilder.canJump(true);
         * ```
        */
        canJump(canJump: boolean): Internal.MobBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a predicate function to determine whether the entity is sensitive to water.
         * The provided Predicate accepts a {@link LivingEntity} parameter,
         * representing the entity that may be checked for sensitivity to water.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.isSensitiveToWater(entity => {
         *     // Define conditions to check if the entity is sensitive to water
         *     // Use information about the LivingEntity provided by the context.
         *     return // Some boolean condition indicating if the entity is sensitive to water;
         * });
         * ```
        */
        isSensitiveToWater(predicate: Internal.Function_<Internal.LivingEntity, any>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        getTranslationKeyGroup(): string;
        /**
         * Sets a function to determine whether the entity is currently flapping.
         * The provided Function accepts a {@link LivingEntity} parameter,
         * representing the entity whose flapping status is being determined.
         * It returns a Boolean indicating whether the entity is flapping.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.isFlapping(entity => {
         *     // Define logic to determine whether the entity is currently flapping
         *     // Use information about the LivingEntity provided by the context.
         *     return // Some Boolean value indicating whether the entity is flapping;
         * });
         * ```
        */
        isFlapping(b: Internal.Function_<Internal.LivingEntity, any>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        notify(): void;
        /**
         * Sets a predicate function to determine whether the entity should drop experience upon death.
         * The provided Predicate accepts a {@link LivingEntity} parameter,
         * representing the entity whose experience drop is being determined.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.shouldDropExperience(entity => {
         *     // Define conditions to check if the entity should drop experience upon death
         *     // Use information about the LivingEntity provided by the context.
         *     return // Some boolean condition indicating if the entity should drop experience;
         * });
         * ```
        */
        shouldDropExperience(p: Internal.Function_<Internal.LivingEntity, any>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a callback function to be executed when the entity performs a flap action.
         * The provided Consumer accepts a {@link LivingEntity} parameter,
         * representing the entity that is flapping.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.onFlap(entity => {
         *     // Define custom logic for handling the entity's flap action
         *     // Use information about the LivingEntity provided by the context.
         * });
         * ```
        */
        onFlap(consumer: Internal.Consumer_<Internal.LivingEntity>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets the sound to play when the entity is ambient using either a string representation or a ResourceLocation object.
         * 
         * Example usage:
         * ```javascript
         * mobBuilder.setAmbientSound("minecraft:entity.zombie.ambient");
         * ```
        */
        setAmbientSound(ambientSound: any): Internal.MobBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a callback function to be executed when the entity is hurt by lava.
         * The provided Consumer accepts a {@link LivingEntity} parameter,
         * representing the entity that is affected by lava.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.lavaHurt(entity => {
         *     // Define custom logic for handling the entity being hurt by lava
         *     // Use information about the LivingEntity provided by the context.
         * });
         * ```
        */
        lavaHurt(consumer: Internal.Consumer_<Internal.LivingEntity>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Boolean determining if the entity will turn sideways on death.
         * Defaults to true.
         * Example usage:
         * ```javascript
         * entityBuilder.defaultDeathPose(false);
         * ```
        */
        defaultDeathPose(defaultDeathPose: boolean): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a callback function to be executed when the entity is hit by thunder.
         * The provided Consumer accepts a {@link ContextUtils.ThunderHitContext} parameter,
         * representing the context of the entity being hit by thunder.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.thunderHit(context => {
         *     // Define custom logic for handling the entity being hit by thunder
         *     // Use information about the ThunderHitContext provided by the context.
         * });
         * ```
        */
        thunderHit(consumer: Internal.Consumer_<Internal.ContextUtils$ThunderHitContext>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a callback function to be executed when the entity dies.
         * The provided Consumer accepts a {@link ContextUtils.DeathContext} parameter,
         * representing the context of the entity's death.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.onDeath(context => {
         *     // Define custom logic for handling the entity's death
         *     // Use information about the DeathContext provided by the context.
         * });
         * ```
        */
        onDeath(consumer: Internal.Consumer_<Internal.ContextUtils$DeathContext>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a callback function to be executed when the entity enters combat.
         * The provided Consumer accepts a {@link LivingEntity} parameter,
         * representing the entity that has entered combat.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.onEnterCombat(entity => {
         *     // Define custom logic for handling the entity entering combat
         *     // Use information about the LivingEntity provided by the context.
         * });
         * ```
        */
        onEnterCombat(c: Internal.Consumer_<Internal.LivingEntity>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a callback function to be executed when the entity receives healing.
         * The provided Consumer accepts a {@link ContextUtils.EntityHealContext} parameter,
         * representing the context of the entity receiving healing.
         * Very similar to {@link ForgeEventFactory.onLivingHeal}
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.onLivingHeal(context => {
         *     // Define custom logic for handling when the entity receives healing
         *     // Use information about the EntityHealContext provided by the context.
         * });
         * ```
        */
        onLivingHeal(callback: Internal.Consumer_<Internal.ContextUtils$EntityHealContext>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets the follow leash speed for the entity.
         * 
         * @param speed The follow leash speed.
         * 
         * Example usage:
         * ```javascript
         * mobBuilder.followLeashSpeed(1.5);
         * ```
        */
        followLeashSpeed(speed: number): Internal.PathfinderMobBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets whether the entity is pushable.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.isPushable(true);
         * ```
        */
        isPushable(b: boolean): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets whether to reposition the entity after loading.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.repositionEntityAfterLoad(true);
         * ```
        */
        repositionEntityAfterLoad(customRepositionEntityAfterLoad: boolean): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets the water slowdown factor for the entity. Defaults to 0.8.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.setWaterSlowDown(0.6);
         * ```
        */
        setWaterSlowDown(slowdownFactor: number): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a function to determine the experience reward for killing the entity.
         * The provided Function accepts a {@link LivingEntity} parameter,
         * representing the entity whose experience reward is being determined.
         * It returns an Integer representing the experience reward.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.experienceReward(killedEntity => {
         *     // Define logic to calculate and return the experience reward for the killedEntity
         *     // Use information about the LivingEntity provided by the context.
         *     return // Some Integer value representing the experience reward;
         * });
         * ```
        */
        experienceReward(experienceReward: Internal.Function_<Internal.LivingEntity, any>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets the jump boost power for the entity.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.jumpBoostPower(entity => {
         *     return //some float value
         * });
         * ```
        */
        jumpBoostPower(jumpBoostPower: Internal.Function_<Internal.LivingEntity, any>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a callback function to be executed when the entity is removed on the client side.
         * The provided Consumer accepts a {@link LivingEntity} parameter,
         * representing the entity that is being removed on the client side.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.onClientRemoval(entity => {
         *     // Define custom logic for handling the removal of the entity on the client side
         *     // Use information about the LivingEntity provided by the context.
         * });
         * ```
        */
        onClientRemoval(consumer: Internal.Consumer_<Internal.LivingEntity>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a callback function to be executed when an effect is added to the entity.
         * The provided Consumer accepts a {@link ContextUtils.OnEffectContext} parameter,
         * representing the context of the effect being added to the entity.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.onEffectAdded(context => {
         *     // Define custom logic for handling when an effect is added to the entity
         *     // Use information about the OnEffectContext provided by the context.
         * });
         * ```
        */
        onEffectAdded(consumer: Internal.Consumer_<Internal.ContextUtils$OnEffectContext>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * @param onHurtTarget A Consumer to execute when the mob attacks its target
         * 
         * Example usage:
         * ```javascript
         * mobBuilder.onHurtTarget(context => {
         *     const {entity, targetEntity} = context
         *     //Execute code when the target is hurt
         * });
         * ```
        */
        onHurtTarget(onHurtTarget: Internal.Consumer_<Internal.ContextUtils$LineOfSightContext>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a function to determine the visibility percentage of the entity.
         * The provided Function accepts a {@link ContextUtils.VisualContext} parameter,
         * representing both the entity whose visibility percentage is being determined
         * and the the builder entity who is being looked at.
         * It returns a Double representing the visibility percentage.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.visibilityPercent(context => {
         *     // Define logic to calculate and return the visibility percentage for the targetEntity
         *     // Use information about the Entity provided by the context.
         *     return // Some Double value representing the visibility percentage;
         * });
         * ```
        */
        visibilityPercent(visibilityPercent: Internal.Function_<Internal.ContextUtils$VisualContext, any>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        getBuilderTranslationKey(): string;
        /**
         * Sets the interval in ticks between ambient sounds for the mob entity.
         * 
         * @param ambientSoundInterval The interval in ticks between ambient sounds.
         * Defaults to 120.
         * 
         * Example usage:
         * ```javascript
         * mobBuilder.ambientSoundInterval(100);
         * ```
        */
        ambientSoundInterval(ambientSoundInterval: number): Internal.MobBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a callback function to be executed when the living entity falls and takes damage.
         * The provided Consumer accepts a {@link ContextUtils.EntityFallDamageContext} parameter,
         * representing the context of the entity falling and taking fall damage.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.onLivingFall(context => {
         *     // Define custom logic for handling when the living entity falls and takes damage
         *     // Use information about the EntityFallDamageContext provided by the context.
         * });
         * ```
        */
        onLivingFall(c: Internal.Consumer_<Internal.ContextUtils$EntityFallDamageContext>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets the update interval for the entity.
         * Defaults to 1 tick.
         * Example usage:
         * ```javascript
         * entityBuilder.updateInterval(20); // Set the update interval to 20 ticks
         * ```
        */
        updateInterval(i: number): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a callback function to be executed when the entity stops sleeping.
         * The provided Consumer accepts a {@link LivingEntity} parameter,
         * representing the entity that has stopped sleeping.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.onStopSleeping(entity => {
         *     // Define custom logic for handling the entity stopping sleeping
         *     // Use information about the LivingEntity provided by the context.
         * });
         * ```
        */
        onStopSleeping(runnable: Internal.Consumer_<Internal.LivingEntity>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a consumer to handle the interaction with the entity.
         * The provided Consumer accepts a {@link ContextUtils.MobInteractContext} parameter,
         * representing the context of the interaction
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.onInteract(context => {
         *     // Define custom logic for the interaction with the entity
         *     // Use information about the MobInteractContext provided by the context.
         *     if (context.player.isShiftKeyDown()) return
         *     context.player.startRiding(context.entity);
         * });
         * ```
        */
        onInteract(c: Internal.Consumer_<Internal.ContextUtils$MobInteractContext>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets the mob category for the entity.
         * Available options: 'monster', 'creature', 'ambient', 'water_creature', 'misc'.
         * Defaults to 'misc'.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.mobCategory('monster');
         * ```
        */
        mobCategory(category: string): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Consumer determining travel logic for the entity.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.travel(context => {
         *     const {entity, vec3} = context
         *     // Use the vec3 and entity to determine the travel logic of the entity
         * });
         * ```
        */
        travel(travel: Internal.Consumer_<Internal.ContextUtils$Vec3Context>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        wait(): void;
        /**
         * Sets a function to determine the PathNavigation of the entity.
         * 
         * @param createNavigation A Function accepting an EntityLevelContext parameter
         * 
         * Example usage:
         * ```javascript
         * mobBuilder.createNavigation(context => {
         *     const {entity, level} = context
         *     return EntityJSUtils.createWallClimberNavigation(entity, level) // Return some path navigation
         * });
         * ```
        */
        createNavigation(createNavigation: Internal.Function_<Internal.ContextUtils$EntityLevelContext, any>): Internal.MobBuilder<Internal.IronGolemEntityJS>;
        get(): Internal.EntityType<T>;
        /**
         * Sets a callback function to be executed when the entity performs an eating action.
         * The provided Consumer accepts a {@link ContextUtils.EntityItemLevelContext} parameter,
         * representing the context of the entity's interaction with a specific item during eating.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.eat(context => {
         *     // Custom logic to handle the entity's eating action
         *     // Access information about the item being consumed using the provided context.
         * });
         * ```
        */
        eat(function_: Internal.Consumer_<Internal.ContextUtils$EntityItemLevelContext>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets the render type for the entity.
         * 
         * @param type The render type to be set. Acceptable values are:
         *              - "solid
         *              - "cutout"
         *              - "translucent"
         *              - RenderType.SOLID
         *              - RenderType.CUTOUT
         *              - RenderType.TRANSLUCENT
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.setRenderType("translucent");
         * ```
        */
        setRenderType(type: any): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets whether the entity can breathe underwater.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.canBreatheUnderwater(true);
         * ```
        */
        canBreatheUnderwater(canBreatheUnderwater: boolean): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a predicate to determine whether the entity is immobile.
         * The provided Predicate accepts a {@link LivingEntity} parameter,
         * representing the entity whose immobility is being determined.
         * It returns a Boolean indicating whether the entity is immobile.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.isImmobile(entity => {
         *     // Define logic to determine whether the entity is immobile
         *     // Use information about the LivingEntity provided by the context.
         *     return // Some Boolean value indicating whether the entity is immobile;
         * });
         * ```
        */
        isImmobile(b: Internal.Function_<Internal.LivingEntity, any>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        wait(arg0: number, arg1: number): void;
        /**
         * Sets the sound resource location for the entity's eating sound using either a string representation or a ResourceLocation object.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.eatingSound("minecraft:entity.zombie.ambient");
         * ```
        */
        eatingSound(sound: any): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        generateDataJsons(generator: Internal.DataJsonGenerator_): void;
        /**
         * Sets a predicate function to determine whether the entity can change dimensions.
         * The provided Predicate accepts a {@link LivingEntity} parameter,
         * representing the entity that may attempt to change dimensions.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.canChangeDimensions(entity => {
         *     // Define the conditions for the entity to be able to change dimensions
         *     // Use information about the LivingEntity provided by the context.
         *     return false // Some boolean condition indicating if the entity can change dimensions;
         * });
         * ```
        */
        canChangeDimensions(supplier: Internal.Function_<Internal.LivingEntity, any>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a callback function to be executed during each tick when the entity is being ridden.
         * The provided Consumer accepts a {@link LivingEntity} parameter,
         * representing the entity that is being ridden.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.rideTick(entity => {
         *     // Define custom logic for handling each tick when the entity is being ridden
         *     // Use information about the LivingEntity provided by the context.
         * });
         * ```
        */
        rideTick(callback: Internal.Consumer_<Internal.LivingEntity>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Makes displayName() override language files.
        */
        formattedDisplayName(): Internal.BuilderBase<Internal.EntityType<T>>;
        /**
         * Boolean determining whether the passenger is able to steer the entity while riding.
         * Defaults to true.
         * Example usage:
         * ```javascript
         * entityBuilder.canSteer(false);
         * ```
        */
        canSteer(canSteer: boolean): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a callback function to be executed when the entity automatically attacks on touch.
         * The provided Consumer accepts a {@link ContextUtils.AutoAttackContext} parameter,
         * representing the context of the auto-attack when the entity touches another entity.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.doAutoAttackOnTouch(context => {
         *     // Define custom logic for handling when the entity automatically attacks on touch
         *     // Use information about the AutoAttackContext provided by the context.
         * });
         * ```
        */
        doAutoAttackOnTouch(doAutoAttackOnTouch: Internal.Consumer_<Internal.ContextUtils$AutoAttackContext>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets the minimum fall distance for the entity before taking damage.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.setMaxFallDistance(entity => {
         *     // Define custom logic to determine the maximum fall distance
         *     // Use information about the LivingEntity provided by the context.
         *     return 3;
         * });
         * ```
        */
        setMaxFallDistance(maxFallDistance: Internal.Function_<Internal.LivingEntity, any>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a callback function to be executed during each tick of the entity.
         * The provided Consumer accepts a {@link LivingEntity} parameter,
         * representing the entity that is being ticked.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.tick(entity => {
         *     // Define custom logic for handling during each tick of the entity
         *     // Use information about the LivingEntity provided by the context.
         * });
         * ```
        */
        tick(tickCallback: Internal.Consumer_<Internal.LivingEntity>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a predicate function to determine whether the entity can attack a specific entity type.
         * The provided Predicate accepts a {@link ContextUtils.EntityTypeEntityContext} parameter,
         * representing the context of the entity attacking a specific entity type.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.canAttackType(context => {
         *     // Define conditions to check if the entity can attack the specified entity type
         *     // Use information about the EntityTypeEntityContext provided by the context.
         *     return // Some boolean condition indicating if the entity can attack the specified entity type;
         * });
         * ```
        */
        canAttackType(canAttackType: Internal.Function_<Internal.ContextUtils$EntityTypeEntityContext, any>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a predicate to determine whether to show the vehicle health for the living entity.
         * 
         * @param predicate The predicate to determine whether to show the vehicle health.
         * 
         * The predicate should take a LivingEntity as a parameter and return a boolean value indicating whether to show the vehicle health.
         * 
         * Example usage:
         * ```javascript
         * baseLivingEntityBuilder.showVehicleHealth(entity => {
         *     // Determine whether to show the vehicle health for the living entity
         *     // Return true to show the vehicle health, false otherwise
         * });
         * ```
        */
        showVehicleHealth(predicate: Internal.Function_<Internal.LivingEntity, any>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets the walk target value function for the entity.
         * 
         * @param function A Function accepting a {@link ContextUtils.EntityBlockPosLevelContext} parameter,
         *                 defining the walk target value based on the entity's interaction with a specific block.
         * 
         * Example usage:
         * ```javascript
         * mobBuilder.walkTargetValue(context => {
         *     // Custom logic to calculate the walk target value based on the provided context.
         *     // Access information about the block position and level using the provided context.
         *     return 10;
         * });
         * ```
        */
        walkTargetValue(function_: Internal.Function_<Internal.ContextUtils$EntityBlockPosLevelContext, any>): Internal.PathfinderMobBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets the translation key for this object, e.g. `block.minecraft.stone`.
        */
        translationKey(key: string): Internal.BuilderBase<Internal.EntityType<T>>;
        /**
         * Sets a callback function to be executed when the entity's air supply increases.
         * The provided Consumer accepts a {@link LivingEntity} parameter,
         * representing the entity whose air supply is being increased.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.onIncreaseAirSupply(entity => {
         *     // Define custom logic for handling when the entity's air supply increases
         *     // Use information about the LivingEntity provided by the context.
         * });
         * ```
        */
        onIncreaseAirSupply(onIncreaseAirSupply: Internal.Consumer_<Internal.LivingEntity>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a callback function to be executed when the entity is removed from the world.
         * The provided Consumer accepts a {@link LivingEntity} parameter,
         * representing the entity that is being removed from the world.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.onRemovedFromWorld(entity => {
         *     // Define custom logic for handling the removal of the entity from the world
         *     // Use information about the LivingEntity provided by the context.
         * });
         * ```
        */
        onRemovedFromWorld(consumer: Internal.Consumer_<Internal.LivingEntity>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a callback function to be executed when the entity leaves combat.
         * The provided Consumer accepts a {@link LivingEntity} parameter,
         * representing the entity that has left combat.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.onLeaveCombat(entity => {
         *     // Define custom logic for handling the entity leaving combat
         *     // Use information about the LivingEntity provided by the context.
         * });
         * ```
        */
        onLeaveCombat(runnable: Internal.Consumer_<Internal.LivingEntity>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets whether the entity is summonable.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.setSummonable(true);
         * ```
        */
        setSummonable(b: boolean): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Boolean determining whether the entity can jump while mounted by a player.
         * (Currently experimental jumping logic subject to change in the future)
         * Defaults to false.
         * Example usage:
         * ```javascript
         * entityBuilder.mountJumpingEnabled(true);
         * ```
        */
        mountJumpingEnabled(mountJumpingEnabled: boolean): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Consumer overriding the tickDeath responsible to counting down
         * the ticks it takes to remove the entity when it dies.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.tickDeath(entity => {
         *     // Override the tickDeath method in the entity
         * });
         * ```
        */
        tickDeath(tickDeath: Internal.Consumer_<Internal.LivingEntity>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets the function to determine whether the entity can hold an item.
         * 
         * @param canHoldItem A Function accepting a {@link ContextUtils.EntityItemStackContext} parameter,
         *                    defining the condition for the entity to hold an item.
         * 
         * Example usage:
         * ```javascript
         * mobBuilder.canHoldItem(context => {
         *     // Custom logic to determine whether the entity can hold an item based on the provided context.
         *     return true;
         * });
         * ```
        */
        canHoldItem(canHoldItem: Internal.Function_<Internal.ContextUtils$EntityItemStackContext, any>): Internal.MobBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets whether the entity is immune to fire damage.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.fireImmune(true);
         * ```
        */
        fireImmune(isFireImmune: boolean): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Creates a spawn egg item for this entity type
        */
        eggItem(eggItem: Internal.Consumer_<Internal.SpawnEggItemBuilder>): Internal.MobBuilder<Internal.IronGolemEntityJS>;
        /**
         * Adds an extra render layer to the mob.
         * @param newGeoLayer The builder Consumer for the new render layer.
         * 
         *     Example usage:
         *     ```javascript
         *     entityBuilder.newGeoLayer(builder => {
         *         builder.textureResource(entity => {
         *             return "kubejs:textures/entity/sasuke.png"
         *         })
         *     });
         *     ```
        */
        newGeoLayer(builderConsumer: Internal.Consumer_<Internal.GeoLayerJSBuilder<Internal.IronGolemEntityJS>>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a function to determine the custom hitbox scale of the entity.
         * The provided Function accepts a {@link LivingEntity} parameter,
         * representing the entity whose scale is being determined.
         * It returns a Float representing the custom scale.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.scale(entity => {
         *     // Define logic to calculate and return the custom scale for the entity
         *     // Use information about the LivingEntity provided by the context.
         *     return // Some Float value;
         * });
         * ```
        */
        scale(customScale: Internal.Function_<Internal.LivingEntity, any>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets whether the entity can spawn far from the player.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.canSpawnFarFromPlayer(true);
         * ```
        */
        canSpawnFarFromPlayer(canSpawnFar: boolean): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a predicate function to determine whether the entity is currently sleeping.
         * The provided Predicate accepts a {@link LivingEntity} parameter,
         * representing the entity that may be checked for its sleeping state.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.isSleeping(entity => {
         *     // Define conditions to check if the entity is currently sleeping
         *     // Use information about the LivingEntity provided by the context.
         *     return // Some boolean condition indicating if the entity is sleeping;
         * });
         * ```
        */
        isSleeping(supplier: Internal.Function_<Internal.LivingEntity, any>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        hashCode(): number;
        /**
         * Sets a predicate function to determine whether the entity can take an item.
         * The provided Predicate accepts a {@link ContextUtils.EntityItemLevelContext} parameter,
         * representing the context of the entity potentially taking an item.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.canTakeItem(context => {
         *     // Define conditions for the entity to be able to take an item
         *     // Use information about the EntityItemLevelContext provided by the context.
         *     return // Some boolean condition indicating if the entity can take the item;
         * });
         * ```
        */
        canTakeItem(predicate: Internal.Function_<Internal.ContextUtils$EntityItemLevelContext, any>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a callback function to be executed when the entity jumps.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.onLivingJump(entity => {
         *     // Custom logic to handle the entity's jump action
         * });
         * ```
        */
        onLivingJump(onJump: Internal.Consumer_<Internal.LivingEntity>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a predicate function to determine whether the entity can undergo freezing.
         * The provided Predicate accepts a {@link LivingEntity} parameter,
         * representing the entity that may be subjected to freezing.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.canFreeze(entity => {
         *     // Define the conditions for the entity to be able to freeze
         *     // Use information about the LivingEntity provided by the context.
         *     return true //someBoolean;
         * });
         * ```
        */
        canFreeze(predicate: Internal.Function_<Internal.LivingEntity, any>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets the hit box of the entity type.
         * 
         * @param width The width of the entity, defaults to 1.
         * @param height The height of the entity, defaults to 1.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.sized(2, 3);
         * ```
        */
        sized(width: number, height: number): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a predicate function to determine whether the rider of the entity should face forward.
         * The provided Predicate accepts a {@link ContextUtils.PlayerEntityContext} parameter,
         * representing the context of the player entity riding the main entity.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.shouldRiderFaceForward(context => {
         *     // Define the conditions for the rider to face forward
         *     // Use information about the player entity provided by the context.
         *     return true //someBoolean;
         * });
         * ```
        */
        shouldRiderFaceForward(predicate: Internal.Function_<Internal.ContextUtils$PlayerEntityContext, any>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets the sound resource locations for small and large falls of the entity using either string representations or ResourceLocation objects.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.fallSounds("minecraft:entity.generic.small_fall",
         *     "minecraft:entity.generic.large_fall");
         * ```
        */
        fallSounds(smallFallSound: any, largeFallSound: any): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets the function to determine whether the entity should stay close to its leash holder.
         * 
         * @param predicate A Function accepting a {@link Mob} parameter,
         *                  defining the condition for the entity to stay close to its leash holder.
         * 
         * Example usage:
         * ```javascript
         * mobBuilder.shouldStayCloseToLeashHolder(entity => {
         *     // Custom logic to determine whether the entity should stay close to its leash holder.
         *     return true;
         * });
         * ```
        */
        shouldStayCloseToLeashHolder(predicate: Internal.Function_<Internal.Mob, any>): Internal.PathfinderMobBuilder<Internal.IronGolemEntityJS>;
        /**
         * Sets a predicate function to determine whether the entity may interact with something.
         * The provided Predicate accepts a {@link ContextUtils.MayInteractContext} parameter,
         * representing the context of the potential interaction, and returns a boolean.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.mayInteract(context => {
         *     // Define conditions for the entity to be allowed to interact
         *     // Use information about the MayInteractContext provided by the context.
         *     return false // Some boolean condition indicating if the entity may interact;
         * });
         * ```
        */
        mayInteract(predicate: Internal.Function_<Internal.ContextUtils$MayInteractContext, any>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        /**
         * @param defaultGoals Sets whether the mob should inherit it's goals from it's superclass
         * Defaults to true.
         * 
         * Example usage:
         * ```javascript
         * builder.defaultGoals(false);
         * ```
        */
        defaultGoals(defaultGoals: boolean): this;
        equals(arg0: any): boolean;
        /**
         * Sets a predicate to determine if a passenger can be added to the entity.
         * 
         * @param predicate The predicate to check if a passenger can be added.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.canAddPassenger(context => {
         *     // Custom logic to determine if a passenger can be added to the entity
         *     return true;
         * });
         * ```
        */
        canAddPassenger(predicate: Internal.Function_<Internal.ContextUtils$PassengerEntityContext, any>): Internal.BaseLivingEntityBuilder<Internal.IronGolemEntityJS>;
        generateAssetJsons(generator: Internal.AssetJsonGenerator_): void;
        /**
         * Sets the swim splash sound for the entity using either a string representation or a ResourceLocation object.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.setSwimSplashSound("minecraft:entity.generic.splash");
         * ```
        */
        set swimSplashSound(sound: any)
        /**
         * Sets a function to determine the custom hurt sound of the entity.
         * The provided Function accepts a {@link ContextUtils.HurtContext} parameter,
         * ```javascript
         * entityBuilder.setHurtSound(context => {
         *     // Custom logic to determine the hurt sound for the entity
         *     // You can use information from the HurtContext to customize the sound based on the context
         *     const { entity, damageSource } = context;
         *     // Determine the hurt sound based on the type of damage source
         *     switch (damageSource.getType()) {
         *         case "fire":
         *             return "minecraft:entity.generic.burn";
         *         case "fall":
         *             return "minecraft:entity.generic.hurt";
         *         case "drown":
         *             return "minecraft:entity.generic.hurt";
         *         case "explosion":
         *             return "minecraft:entity.generic.explode";
         *         default:
         *             return "minecraft:entity.generic.explode";
         *     }
         * })
         * ```
        */
        set hurtSound(sound: Internal.Function_<Internal.ContextUtils$HurtContext, any>)
        /**
         * Sets the swim sound for the entity using a string representation.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.setSwimSound("minecraft:entity.generic.swim");
         * ```
        */
        set swimSound(sound: any)
        get class(): typeof any
        /**
         * Sets the overall sound volume for the entity.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.setSoundVolume(0.5);
         * ```
        */
        set soundVolume(volume: number)
        /**
         * Sets the death sound for the entity.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.setDeathSound("minecraft:entity.generic.death");
         * ```
        */
        set deathSound(sound: any)
        /**
         * Sets a function to determine the standing eye height of the entity.
         * The provided Function accepts a {@link ContextUtils.EntityPoseDimensionsContext} parameter,
         * representing the context of the entity's pose and dimensions when standing.
         * It returns a Float representing the standing eye height.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.setStandingEyeHeight(context => {
         *     // Define logic to calculate and return the standing eye height for the entity
         *     // Use information about the EntityPoseDimensionsContext provided by the context.
         *     return // Some Float value representing the standing eye height;
         * });
         * ```
        */
        set standingEyeHeight(setStandingEyeHeight: Internal.Function_<Internal.ContextUtils$EntityPoseDimensionsContext, any>)
        /**
         * Sets the block jump factor for the entity.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.setBlockJumpFactor(entity => {
         *     //Set the jump factor for the entity through context
         *     return 1 //some float value;
         * });
         * ```
        */
        set blockJumpFactor(blockJumpFactor: Internal.Function_<Internal.LivingEntity, any>)
        get translationKeyGroup(): string
        /**
         * Sets the sound to play when the entity is ambient using either a string representation or a ResourceLocation object.
         * 
         * Example usage:
         * ```javascript
         * mobBuilder.setAmbientSound("minecraft:entity.zombie.ambient");
         * ```
        */
        set ambientSound(ambientSound: any)
        /**
         * Sets the water slowdown factor for the entity. Defaults to 0.8.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.setWaterSlowDown(0.6);
         * ```
        */
        set waterSlowDown(slowdownFactor: number)
        get builderTranslationKey(): string
        /**
         * Sets the render type for the entity.
         * 
         * @param type The render type to be set. Acceptable values are:
         *              - "solid
         *              - "cutout"
         *              - "translucent"
         *              - RenderType.SOLID
         *              - RenderType.CUTOUT
         *              - RenderType.TRANSLUCENT
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.setRenderType("translucent");
         * ```
        */
        set renderType(type: any)
        /**
         * Sets the minimum fall distance for the entity before taking damage.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.setMaxFallDistance(entity => {
         *     // Define custom logic to determine the maximum fall distance
         *     // Use information about the LivingEntity provided by the context.
         *     return 3;
         * });
         * ```
        */
        set maxFallDistance(maxFallDistance: Internal.Function_<Internal.LivingEntity, any>)
        /**
         * Sets whether the entity is summonable.
         * 
         * Example usage:
         * ```javascript
         * entityBuilder.setSummonable(true);
         * ```
        */
        set summonable(b: boolean)
    }
    type IronGolemJSBuilder_ = IronGolemJSBuilder;
    class ImmutableCollections$List12 <E> extends Internal.ImmutableCollections$AbstractImmutableList<E> implements Internal.Serializable {
        static of<E>(arg0: E, arg1: E, arg2: E, arg3: E, arg4: E, arg5: E): Internal.List<E>;
        static copyOf<E>(arg0: Internal.Collection_<E>): Internal.List<E>;
        static of<E>(arg0: E, arg1: E, arg2: E, arg3: E, arg4: E, arg5: E, arg6: E, arg7: E, arg8: E): Internal.List<E>;
        sort(arg0: Internal.Comparator_<E>): void;
        notify(): void;
        static of<E>(arg0: E): Internal.List<E>;
        static of<E>(): Internal.List<E>;
        abstract retainAll(arg0: Internal.Collection_<any>): boolean;
        "remove(int)"(arg0: number): E;
        toArray<T>(arg0: Internal.IntFunction_<T[]>): T[];
        addAll(arg0: number, arg1: Internal.Collection_<E>): boolean;
        abstract addAll(arg0: Internal.Collection_<E>): boolean;
        static of<E>(arg0: E, arg1: E, arg2: E): Internal.List<E>;
        subList(arg0: number, arg1: number): Internal.List<E>;
        indexOf(arg0: any): number;
        add(arg0: number, arg1: E): void;
        forEach(arg0: Internal.Consumer_<E>): void;
        toArray<T>(arg0: T[]): T[];
        abstract remove(arg0: any): boolean;
        abstract "remove(java.lang.Object)"(arg0: any): boolean;
        listIterator(arg0: number): Internal.ListIterator<E>;
        iterator(): Internal.Iterator<E>;
        static of<E>(arg0: E, arg1: E): Internal.List<E>;
        stream(): Internal.Stream<E>;
        abstract removeAll(arg0: Internal.Collection_<any>): boolean;
        wait(): void;
        removeIf(arg0: Internal.Predicate_<E>): boolean;
        static of<E>(arg0: E, arg1: E, arg2: E, arg3: E): Internal.List<E>;
        static "of(java.lang.Object[])"<E>(...arg0: E[]): Internal.List<E>;
        lastIndexOf(arg0: any): number;
        getClass(): typeof any;
        get(arg0: number): E;
        abstract add(arg0: E): boolean;
        listIterator(): Internal.ListIterator<E>;
        static of<E>(arg0: E, arg1: E, arg2: E, arg3: E, arg4: E, arg5: E, arg6: E, arg7: E): Internal.List<E>;
        parallelStream(): Internal.Stream<E>;
        isEmpty(): boolean;
        wait(arg0: number, arg1: number): void;
        set(arg0: number, arg1: E): E;
        static of<E>(...arg0: E[]): Internal.List<E>;
        abstract containsAll(arg0: Internal.Collection_<any>): boolean;
        remove(arg0: number): E;
        contains(arg0: any): boolean;
        static of<E>(arg0: E, arg1: E, arg2: E, arg3: E, arg4: E, arg5: E, arg6: E): Internal.List<E>;
        static "of(java.lang.Object)"<E>(arg0: E): Internal.List<E>;
        replaceAll(arg0: Internal.UnaryOperator_<E>): void;
        toString(): string;
        notifyAll(): void;
        "toArray(java.lang.Object[])"<T>(arg0: T[]): T[];
        static of<E>(arg0: E, arg1: E, arg2: E, arg3: E, arg4: E): Internal.List<E>;
        "toArray(java.util.function.IntFunction)"<T>(arg0: Internal.IntFunction_<T[]>): T[];
        static of<E>(arg0: E, arg1: E, arg2: E, arg3: E, arg4: E, arg5: E, arg6: E, arg7: E, arg8: E, arg9: E): Internal.List<E>;
        toArray(): any[];
        size(): number;
        hashCode(): number;
        abstract clear(): void;
        wait(arg0: number): void;
        spliterator(): Internal.Spliterator<E>;
        equals(arg0: any): boolean;
        get class(): typeof any
        get empty(): boolean
    }
    type ImmutableCollections$List12_<E> = ImmutableCollections$List12<E>;
    class ParticleCloud$EnumCloudBehavior extends Internal.Enum<Internal.ParticleCloud$EnumCloudBehavior> {
        static valueOf<T extends Internal.Enum<T>>(arg0: T, arg1: string): T;
        getClass(): typeof any;
        "compareTo(com.bobmowzie.mowziesmobs.client.particle.ParticleCloud$EnumCloudBehavior)"(arg0: Internal.ParticleCloud$EnumCloudBehavior_): number;
        toString(): string;
        describeConstable(): Internal.Optional<Internal.Enum$EnumDesc<Internal.ParticleCloud$EnumCloudBehavior>>;
        notifyAll(): void;
        compareTo(arg0: Internal.ParticleCloud$EnumCloudBehavior_): number;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        compareTo(arg0: any): number;
        name(): string;
        static valueOf(arg0: string): Internal.ParticleCloud$EnumCloudBehavior;
        hashCode(): number;
        getDeclaringClass(): typeof Internal.ParticleCloud$EnumCloudBehavior;
        ordinal(): number;
        wait(): void;
        wait(arg0: number): void;
        "compareTo(java.lang.Object)"(arg0: any): number;
        equals(arg0: any): boolean;
        static values(): Internal.ParticleCloud$EnumCloudBehavior[];
        get class(): typeof any
        get declaringClass(): typeof Internal.ParticleCloud$EnumCloudBehavior
        static readonly SHRINK: (Internal.ParticleCloud$EnumCloudBehavior) & (Internal.ParticleCloud$EnumCloudBehavior);
        static readonly CONSTANT: (Internal.ParticleCloud$EnumCloudBehavior) & (Internal.ParticleCloud$EnumCloudBehavior);
        static readonly GROW: (Internal.ParticleCloud$EnumCloudBehavior) & (Internal.ParticleCloud$EnumCloudBehavior);
    }
    type ParticleCloud$EnumCloudBehavior_ = "shrink" | "grow" | ParticleCloud$EnumCloudBehavior | "constant";
    class NarratedElementType extends Internal.Enum<Internal.NarratedElementType> {
        static valueOf<T extends Internal.Enum<T>>(arg0: T, arg1: string): T;
        getClass(): typeof any;
        toString(): string;
        notifyAll(): void;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        compareTo(arg0: any): number;
        static valueOf(arg0: string): Internal.NarratedElementType;
        name(): string;
        hashCode(): number;
        ordinal(): number;
        wait(): void;
        wait(arg0: number): void;
        static values(): Internal.NarratedElementType[];
        compareTo(arg0: Internal.NarratedElementType_): number;
        describeConstable(): Internal.Optional<Internal.Enum$EnumDesc<Internal.NarratedElementType>>;
        "compareTo(java.lang.Object)"(arg0: any): number;
        equals(arg0: any): boolean;
        getDeclaringClass(): typeof Internal.NarratedElementType;
        "compareTo(net.minecraft.client.gui.narration.NarratedElementType)"(arg0: Internal.NarratedElementType_): number;
        get class(): typeof any
        get declaringClass(): typeof Internal.NarratedElementType
        static readonly HINT: (Internal.NarratedElementType) & (Internal.NarratedElementType);
        static readonly POSITION: (Internal.NarratedElementType) & (Internal.NarratedElementType);
        static readonly TITLE: (Internal.NarratedElementType) & (Internal.NarratedElementType);
        static readonly USAGE: (Internal.NarratedElementType) & (Internal.NarratedElementType);
    }
    type NarratedElementType_ = NarratedElementType | "hint" | "position" | "title" | "usage";
    interface LocationAware {
        abstract requiresLocation(): boolean;
        (): boolean;
    }
    type LocationAware_ = LocationAware | (()=> boolean);
    abstract class SimpleChannelInboundHandler <I> extends Internal.ChannelInboundHandlerAdapter {
        getClass(): typeof any;
        channelActive(arg0: Internal.ChannelHandlerContext_): void;
        acceptInboundMessage(arg0: any): boolean;
        toString(): string;
        notifyAll(): void;
        isSharable(): boolean;
        handlerRemoved(arg0: Internal.ChannelHandlerContext_): void;
        channelReadComplete(arg0: Internal.ChannelHandlerContext_): void;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        channelWritabilityChanged(arg0: Internal.ChannelHandlerContext_): void;
        channelInactive(arg0: Internal.ChannelHandlerContext_): void;
        hashCode(): number;
        wait(): void;
        channelUnregistered(arg0: Internal.ChannelHandlerContext_): void;
        userEventTriggered(arg0: Internal.ChannelHandlerContext_, arg1: any): void;
        wait(arg0: number): void;
        exceptionCaught(arg0: Internal.ChannelHandlerContext_, arg1: Internal.Throwable_): void;
        handlerAdded(arg0: Internal.ChannelHandlerContext_): void;
        equals(arg0: any): boolean;
        channelRegistered(arg0: Internal.ChannelHandlerContext_): void;
        channelRead(arg0: Internal.ChannelHandlerContext_, arg1: any): void;
        get class(): typeof any
        get sharable(): boolean
    }
    type SimpleChannelInboundHandler_<I> = SimpleChannelInboundHandler<I>;
    class RequirementType <T extends Internal.IRequirement<any>> {
        getClass(): typeof any;
        getName(): net.minecraft.network.chat.Component;
        toString(): string;
        notifyAll(): void;
        isWorldRequirement(): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        static inventory<T extends Internal.IRequirement<any>>(codec: Internal.NamedCodec_<T>): Internal.RequirementType<T>;
        hashCode(): number;
        getId(): ResourceLocation;
        static world<T extends Internal.IRequirement<any>>(codec: Internal.NamedCodec_<T>): Internal.RequirementType<T>;
        wait(): void;
        getCodec(): Internal.NamedCodec<T>;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        get class(): typeof any
        get name(): net.minecraft.network.chat.Component
        get worldRequirement(): boolean
        get id(): ResourceLocation
        get codec(): Internal.NamedCodec<T>
        static readonly REGISTRY_KEY: Internal.ResourceKey<Internal.Registry<Internal.RequirementType<Internal.IRequirement<any>>>>;
    }
    type RequirementType_<T extends Internal.IRequirement<any>> = RequirementType<T>;
    class RedstoneSpellTriggerBlock extends Internal.Block implements Internal.ISpellInteractibleBlock<Internal.RedstoneSpellTriggerBlock> {
        constructor()
        getSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        /**
         * @deprecated
        */
        getVisualShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number, arg5: number): void;
        static popResource(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.ItemStack_): void;
        setRandomTickCallback(callback: Internal.Consumer_<any>): void;
        getBeaconColorMultiplier(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): number[];
        stepOn(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Entity_): void;
        getPistonPushReaction(arg0: Internal.BlockState_): Internal.PushReaction;
        getExpDrop(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.RandomSource_, arg3: BlockPos_, arg4: number, arg5: number): number;
        /**
         * @deprecated
        */
        getExplosionResistance(): number;
        asItem(): Internal.Item;
        shouldDisplayFluidOverlay(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        triggerEvent(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: number, arg4: number): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_, arg6: boolean): void;
        getTypeData(): Internal.CompoundTag;
        setFriction(arg0: number): void;
        rotate(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.Rotation_): Internal.BlockState;
        /**
         * @deprecated
        */
        getRenderShape(arg0: Internal.BlockState_): Internal.RenderShape;
        getSpeedFactor(): number;
        /**
         * @deprecated
        */
        getLightBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        isPossibleToRespawnInThis(arg0: Internal.BlockState_): boolean;
        playerDestroy(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.BlockEntity_, arg5: Internal.ItemStack_): void;
        playerWillDestroy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Player_): void;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        getCloneItemStack(arg0: Internal.BlockState_, arg1: Internal.HitResult_, arg2: Internal.BlockGetter_, arg3: BlockPos_, arg4: Internal.Player_): Internal.ItemStack;
        getClass(): typeof any;
        getMaxVerticalOffset(): number;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        getRenderPropertiesInternal(): any;
        onCaughtFire(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.LivingEntity_): void;
        /**
         * @deprecated
        */
        getDrops(arg0: Internal.BlockState_, arg1: Internal.LootParams$Builder_): Internal.List<Internal.ItemStack>;
        getStateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>;
        setBlockBuilder(b: Internal.BlockBuilder_): void;
        /**
         * @deprecated
        */
        entityInside(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): void;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientBlockExtensions>): void;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        getBlockStates(): Internal.List<Internal.BlockState>;
        setRequiresTool(v: boolean): void;
        addLandingEffects(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.LivingEntity_, arg5: number): boolean;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Block>;
        static popResourceFromFace(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Direction_, arg3: Internal.ItemStack_): void;
        handlePrecipitation(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Biome$Precipitation_): void;
        wait(arg0: number): void;
        /**
         * @deprecated
        */
        getFluidState(arg0: Internal.BlockState_): Internal.FluidState;
        getRespawnPosition(arg0: Internal.BlockState_, arg1: Internal.EntityType_<any>, arg2: Internal.LevelReader_, arg3: BlockPos_, arg4: number, arg5: Internal.LivingEntity_): Internal.Optional<Vec3d>;
        tick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        isFertile(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        canBeHydrated(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.FluidState_, arg4: BlockPos_): boolean;
        getWeakChanges(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        neighborChanged(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Block_, arg4: BlockPos_, arg5: boolean): void;
        /**
         * @deprecated
        */
        getBlockSupportShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        /**
         * @deprecated
        */
        isCollisionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        getMenuProvider(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): Internal.MenuProvider;
        static byItem(arg0: Internal.Item_): Internal.Block;
        static updateFromNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_): Internal.BlockState;
        /**
         * @deprecated
        */
        updateIndirectNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: number, arg4: number): void;
        canConnectRedstone(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        destroy(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): void;
        getFriction(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): number;
        /**
         * @deprecated
        */
        use(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: Internal.InteractionHand_, arg5: Internal.BlockHitResult_): Internal.InteractionResult;
        setLightEmission(v: number): void;
        setJumpFactor(arg0: number): void;
        isSlimeBlock(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getShadeBrightness(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        /**
         * @deprecated
        */
        getCollisionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        defaultBlockState(): Internal.BlockState;
        getStateForPlacement(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        getToolModifiedState(arg0: Internal.BlockState_, arg1: Internal.UseOnContext_, arg2: Internal.ToolAction_, arg3: boolean): Internal.BlockState;
        wait(): void;
        getMaxHorizontalOffset(): number;
        /**
         * @deprecated
        */
        getDestroyProgress(arg0: Internal.BlockState_, arg1: Internal.Player_, arg2: Internal.BlockGetter_, arg3: BlockPos_): number;
        makesOpenTrapdoorAboveClimbable(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        updateShape(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.BlockState_, arg3: Internal.LevelAccessor_, arg4: BlockPos_, arg5: BlockPos_): Internal.BlockState;
        isRandomlyTicking(arg0: Internal.BlockState_): boolean;
        static isShapeFullBlock(arg0: Internal.VoxelShape_): boolean;
        withPropertiesOf(arg0: Internal.BlockState_): Internal.BlockState;
        setIsRandomlyTicking(arg0: boolean): void;
        isScaffolding(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        hidesNeighborFace(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_, arg4: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        rotate(arg0: Internal.BlockState_, arg1: Internal.Rotation_): Internal.BlockState;
        defaultMapColor(): Internal.MapColor;
        getStateAtViewpoint(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Vec3d_): Internal.BlockState;
        setNameKey(arg0: string): void;
        static box(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.VoxelShape;
        getExplosionResistance(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): number;
        updateEntityAfterFallOn(arg0: Internal.BlockGetter_, arg1: Internal.Entity_): void;
        setBedOccupied(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.LivingEntity_, arg4: boolean): void;
        getLightEmission(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        arch$registryName(): ResourceLocation;
        getBlockBuilder(): Internal.BlockBuilder;
        getIdLocation(): ResourceLocation;
        canDropFromExplosion(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): boolean;
        addRunningEffects(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        isSignalSource(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        onProjectileHit(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockHitResult_, arg3: Internal.Projectile_): void;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): Internal.List<Internal.ItemStack>;
        /**
         * @deprecated
        */
        isOcclusionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        static getId(arg0: Internal.BlockState_): number;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.level.material.Fluid)"(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        canSustainPlant(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.IPlantable_): boolean;
        /**
         * @deprecated
        */
        isPathfindable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.PathComputationType_): boolean;
        setSoundType(arg0: SoundType_): void;
        /**
         * @deprecated
        */
        onRemove(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        equals(arg0: any): boolean;
        /**
         * @deprecated
        */
        getOcclusionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        isFlammable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        onHitBySpell(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.ISpellDefinition_): boolean;
        collisionExtendsVertically(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        getSoundType(arg0: Internal.BlockState_): SoundType;
        /**
         * @deprecated
        */
        randomTick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.BlockEntity_): void;
        static canSupportRigidBlock(arg0: Internal.BlockGetter_, arg1: BlockPos_): boolean;
        isStickyBlock(arg0: Internal.BlockState_): boolean;
        getDescriptionId(): string;
        handler$zmd000$onUse(state: Internal.BlockState_, world: Internal.Level_, pos: BlockPos_, player: Internal.Player_, hand: Internal.InteractionHand_, hit: Internal.BlockHitResult_, cir: Internal.CallbackInfoReturnable_<any>): void;
        onBlockExploded(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Explosion_): void;
        fallOn(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: BlockPos_, arg3: Internal.Entity_, arg4: number): void;
        canEntityDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        getJumpFactor(): number;
        isValidSpawn(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.SpawnPlacements$Type_, arg4: Internal.EntityType_<any>): boolean;
        getFlammability(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        static canSupportCenter(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        skipRendering(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.Direction_): boolean;
        getDirectSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isLadder(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        onDestroyedByPlayer(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: boolean, arg5: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.item.context.BlockPlaceContext)"(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        getMapColor(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.MapColor_): Internal.MapColor;
        isPortalFrame(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        useShapeForLightOcclusion(arg0: Internal.BlockState_): boolean;
        getBedDirection(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): Internal.Direction;
        setSpeedFactor(arg0: number): void;
        setExplosionResistance(arg0: number): void;
        getEnchantPowerBonus(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): number;
        toString(): string;
        notifyAll(): void;
        getId(): string;
        getLootTable(): ResourceLocation;
        /**
         * @deprecated
        */
        getInteractionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        setPlacedBy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.LivingEntity_, arg4: Internal.ItemStack_): void;
        propagatesSkylightDown(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        onPlace(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        getFriction(): number;
        /**
         * @deprecated
        */
        hasAnalogOutputSignal(arg0: Internal.BlockState_): boolean;
        getSoundType(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): SoundType;
        /**
         * @deprecated
        */
        getAnalogOutputSignal(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): number;
        supportsExternalFaceHiding(arg0: Internal.BlockState_): boolean;
        notify(): void;
        onBlockStateChange(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_): void;
        static isFaceFull(arg0: Internal.VoxelShape_, arg1: Internal.Direction_): boolean;
        isFireSource(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        canSurvive(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): void;
        getAppearance(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.BlockState_, arg5: BlockPos_): Internal.BlockState;
        setDestroySpeed(v: number): void;
        canHarvestBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        shouldCheckWeakPower(arg0: Internal.BlockState_, arg1: Internal.SignalGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        arch$holder(): Internal.Holder<Internal.Block>;
        /**
         * @deprecated
        */
        getCloneItemStack(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        hasDynamicShape(): boolean;
        /**
         * @deprecated
        */
        getSeed(arg0: Internal.BlockState_, arg1: BlockPos_): number;
        defaultDestroyTime(): number;
        getBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        dropFromExplosion(arg0: Internal.Explosion_): boolean;
        onNeighborChange(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): void;
        static isExceptionForConnection(arg0: Internal.BlockState_): boolean;
        onTreeGrow(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.BiConsumer_<BlockPos, Internal.BlockState>, arg3: Internal.RandomSource_, arg4: BlockPos_, arg5: Internal.TreeConfiguration_): boolean;
        wait(arg0: number, arg1: number): void;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.BlockGetter_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        mirror(arg0: Internal.BlockState_, arg1: Internal.Mirror_): Internal.BlockState;
        isBed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        wasExploded(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Explosion_): void;
        getName(): Internal.MutableComponent;
        canStickTo(arg0: Internal.BlockState_, arg1: Internal.BlockState_): boolean;
        animateTick(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        getFireSpreadSpeed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        getMod(): string;
        getAdjacentBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_, arg4: Internal.BlockPathTypes_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        isConduitFrame(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): boolean;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number): void;
        /**
         * @deprecated
        */
        attack(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): void;
        /**
         * @deprecated
        */
        getShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static stateById(arg0: number): Internal.BlockState;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        popExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: number): void;
        static pushEntitiesUp(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_): Internal.BlockState;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_): Internal.List<Internal.ItemStack>;
        isBurning(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setHasCollision(arg0: boolean): void;
        static shouldRenderFace(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: BlockPos_): boolean;
        /**
         * @deprecated
        */
        spawnAfterBreak(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.ItemStack_, arg4: boolean): void;
        set randomTickCallback(callback: Internal.Consumer_<any>)
        /**
         * @deprecated
        */
        get explosionResistance(): number
        get typeData(): Internal.CompoundTag
        set friction(arg0: number)
        get speedFactor(): number
        get class(): typeof any
        get maxVerticalOffset(): number
        get renderPropertiesInternal(): any
        get stateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>
        set blockBuilder(b: Internal.BlockBuilder_)
        get blockStates(): Internal.List<Internal.BlockState>
        set requiresTool(v: boolean)
        set lightEmission(v: number)
        set jumpFactor(arg0: number)
        get maxHorizontalOffset(): number
        set isRandomlyTicking(arg0: boolean)
        set nameKey(arg0: string)
        get blockBuilder(): Internal.BlockBuilder
        get idLocation(): ResourceLocation
        set soundType(arg0: SoundType_)
        get descriptionId(): string
        get jumpFactor(): number
        set speedFactor(arg0: number)
        set explosionResistance(arg0: number)
        get id(): string
        get lootTable(): ResourceLocation
        get friction(): number
        set destroySpeed(v: number)
        get name(): Internal.MutableComponent
        get mod(): string
        set hasCollision(arg0: boolean)
        static readonly OUTPUT_POWER: (Internal.IntegerProperty) & (Internal.IntegerProperty);
    }
    type RedstoneSpellTriggerBlock_ = RedstoneSpellTriggerBlock;
    class AcidFluidType extends Internal.FluidType {
        constructor(arg0: any_)
        canSwim(arg0: Internal.Entity_): boolean;
        isVaporizedOnPlacement(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.FluidStack_): boolean;
        getDescriptionId(arg0: Internal.FluidStack_): string;
        canBePlacedInLevel(arg0: Internal.BlockAndTintGetter_, arg1: BlockPos_, arg2: Internal.FluidState_): boolean;
        "canBePlacedInLevel(net.minecraft.world.level.BlockAndTintGetter,net.minecraft.core.BlockPos,net.minecraft.world.level.material.FluidState)"(arg0: Internal.BlockAndTintGetter_, arg1: BlockPos_, arg2: Internal.FluidState_): boolean;
        getLightLevel(arg0: Internal.FluidState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_): number;
        notify(): void;
        getSound(arg0: Internal.Entity_, arg1: Internal.SoundAction_): Internal.SoundEvent;
        getDensity(arg0: Internal.FluidState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_): number;
        canExtinguish(arg0: Internal.Entity_): boolean;
        canConvertToSource(arg0: Internal.FluidStack_): boolean;
        getDensity(): number;
        "canBePlacedInLevel(net.minecraft.world.level.BlockAndTintGetter,net.minecraft.core.BlockPos,net.minecraftforge.fluids.FluidStack)"(arg0: Internal.BlockAndTintGetter_, arg1: BlockPos_, arg2: Internal.FluidStack_): boolean;
        getTemperature(arg0: Internal.FluidStack_): number;
        getDescriptionId(): string;
        getRarity(): Internal.Rarity;
        getFallDistanceModifier(arg0: Internal.Entity_): number;
        getBlockForFluidState(arg0: Internal.BlockAndTintGetter_, arg1: BlockPos_, arg2: Internal.FluidState_): Internal.BlockState;
        getBucket(arg0: Internal.FluidStack_): Internal.ItemStack;
        "getSound(net.minecraftforge.fluids.FluidStack,net.minecraftforge.common.SoundAction)"(arg0: Internal.FluidStack_, arg1: Internal.SoundAction_): Internal.SoundEvent;
        getRarity(arg0: Internal.FluidStack_): Internal.Rarity;
        "canHydrate(net.minecraft.world.entity.Entity)"(arg0: Internal.Entity_): boolean;
        canBePlacedInLevel(arg0: Internal.BlockAndTintGetter_, arg1: BlockPos_, arg2: Internal.FluidStack_): boolean;
        "getSound(net.minecraft.world.entity.Entity,net.minecraftforge.common.SoundAction)"(arg0: Internal.Entity_, arg1: Internal.SoundAction_): Internal.SoundEvent;
        getAdjacentBlockPathType(arg0: Internal.FluidState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_, arg4: Internal.BlockPathTypes_): Internal.BlockPathTypes;
        onVaporize(arg0: Internal.Player_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.FluidStack_): void;
        "canHydrate(net.minecraftforge.fluids.FluidStack)"(arg0: Internal.FluidStack_): boolean;
        canHydrate(arg0: Internal.FluidState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: BlockPos_): boolean;
        wait(): void;
        getTemperature(): number;
        supportsBoating(arg0: Internal.FluidState_, arg1: Internal.Boat_): boolean;
        getDescription(): net.minecraft.network.chat.Component;
        getSound(arg0: Internal.FluidStack_, arg1: Internal.SoundAction_): Internal.SoundEvent;
        getViscosity(): number;
        getClass(): typeof any;
        isVanilla(): boolean;
        motionScale(arg0: Internal.Entity_): number;
        getRenderPropertiesInternal(): any;
        isAir(): boolean;
        getLightLevel(arg0: Internal.FluidStack_): number;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientFluidTypeExtensions>): void;
        canDrownIn(arg0: Internal.LivingEntity_): boolean;
        wait(arg0: number, arg1: number): void;
        getSound(arg0: Internal.SoundAction_): Internal.SoundEvent;
        getDensity(arg0: Internal.FluidStack_): number;
        canPushEntity(arg0: Internal.Entity_): boolean;
        isLighterThanAir(): boolean;
        toString(): string;
        canRideVehicleUnder(arg0: Internal.Entity_, arg1: Internal.Entity_): boolean;
        canHydrate(arg0: Internal.Entity_): boolean;
        supportsBoating(arg0: Internal.Boat_): boolean;
        getLightLevel(): number;
        notifyAll(): void;
        getDescription(arg0: Internal.FluidStack_): net.minecraft.network.chat.Component;
        getViscosity(arg0: Internal.FluidStack_): number;
        getBlockPathType(arg0: Internal.FluidState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_, arg4: boolean): Internal.BlockPathTypes;
        getStateForPlacement(arg0: Internal.BlockAndTintGetter_, arg1: BlockPos_, arg2: Internal.FluidStack_): Internal.FluidState;
        setItemMovement(arg0: Internal.ItemEntity_): void;
        move(arg0: Internal.FluidState_, arg1: Internal.LivingEntity_, arg2: Vec3d_, arg3: number): boolean;
        canExtinguish(arg0: Internal.FluidState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        shouldUpdateWhileBoating(arg0: Internal.FluidState_, arg1: Internal.Boat_, arg2: Internal.Entity_): boolean;
        getSound(arg0: Internal.Player_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.SoundAction_): Internal.SoundEvent;
        canConvertToSource(arg0: Internal.FluidState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        canHydrate(arg0: Internal.FluidStack_): boolean;
        hashCode(): number;
        wait(arg0: number): void;
        getTemperature(arg0: Internal.FluidState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_): number;
        getViscosity(arg0: Internal.FluidState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_): number;
        equals(arg0: any): boolean;
        get density(): number
        get descriptionId(): string
        get rarity(): Internal.Rarity
        get temperature(): number
        get description(): net.minecraft.network.chat.Component
        get viscosity(): number
        get class(): typeof any
        get vanilla(): boolean
        get renderPropertiesInternal(): any
        get air(): boolean
        get lighterThanAir(): boolean
        get lightLevel(): number
        set itemMovement(arg0: Internal.ItemEntity_)
        static readonly FLUID_FLOWING: (ResourceLocation) & (ResourceLocation);
        static readonly OVERLAY: (ResourceLocation) & (ResourceLocation);
        static readonly FLUID_STILL: (ResourceLocation) & (ResourceLocation);
    }
    type AcidFluidType_ = AcidFluidType;
    abstract class Axis extends Internal.Enum<Internal.Axis> {
        abstract "get(org.joml.Vector3f)"(arg0: Vec3f_): number;
        describeConstable(): Internal.Optional<Internal.Enum$EnumDesc<Internal.Axis>>;
        notify(): void;
        compareTo(arg0: any): number;
        abstract set(arg0: Internal.SectionPos_, arg1: number): Internal.SectionPos;
        abstract get(arg0: Internal.ChunkPos_): number;
        abstract set(arg0: Vec3d_, arg1: number): Vec3d;
        abstract "get(net.minecraft.world.level.ChunkPos)"(arg0: Internal.ChunkPos_): number;
        static get(arg0: Internal.Direction$Axis_): Internal.Axis;
        abstract get(arg0: Vec3d_): number;
        static third(arg0: Internal.Axis_, arg1: Internal.Axis_): Internal.Axis;
        abstract set(arg0: BlockPos_, arg1: number): BlockPos;
        compareTo(arg0: Internal.Axis_): number;
        "mirror(net.minecraft.core.Direction)"(arg0: Internal.Direction_): Internal.Direction;
        name(): string;
        mirror(arg0: team.creative.creativecore.common.util.math.vec.Vec3f_): void;
        wait(): void;
        abstract get(arg0: Vec3f_): number;
        abstract get(arg0: number, arg1: number, arg2: number): number;
        abstract get<T>(arg0: T, arg1: T, arg2: T): T;
        "compareTo(java.lang.Object)"(arg0: any): number;
        abstract get(arg0: number, arg1: number, arg2: number): number;
        abstract facing(arg0: boolean): Internal.Facing;
        abstract set(arg0: Internal.ChunkPos_, arg1: number): Internal.ChunkPos;
        getClass(): typeof any;
        abstract mirror(arg0: BlockPos_): BlockPos;
        abstract "set(net.minecraft.core.BlockPos,int)"(arg0: BlockPos_, arg1: number): BlockPos;
        getDeclaringClass(): typeof Internal.Axis;
        "mirror(team.creative.creativecore.common.util.math.base.Facing)"(arg0: Internal.Facing_): Internal.Facing;
        abstract "get(double,double,double)"(arg0: number, arg1: number, arg2: number): number;
        abstract two(): this;
        wait(arg0: number, arg1: number): void;
        abstract "get(net.minecraft.world.phys.Vec3)"(arg0: Vec3d_): number;
        static valueOf(arg0: string): Internal.Axis;
        abstract set(arg0: Internal.BlockPos$MutableBlockPos_, arg1: number): void;
        abstract set(arg0: Vec3i_, arg1: number): Vec3i;
        abstract get(arg0: Internal.Vector3d_): number;
        abstract set(arg0: Internal.Vector3d_, arg1: number): void;
        abstract "set(net.minecraft.core.SectionPos,int)"(arg0: Internal.SectionPos_, arg1: number): Internal.SectionPos;
        abstract mirror(arg0: Vec3i_): Vec3i;
        abstract "set(net.minecraft.core.BlockPos$MutableBlockPos,int)"(arg0: Internal.BlockPos$MutableBlockPos_, arg1: number): void;
        static getMirrorAxis(arg0: Internal.Mirror_): Internal.Axis;
        abstract "set(org.joml.Vector3d,double)"(arg0: Internal.Vector3d_, arg1: number): void;
        static valueOf<T extends Internal.Enum<T>>(arg0: T, arg1: string): T;
        abstract "get(int,int,int)"(arg0: number, arg1: number, arg2: number): number;
        toString(): string;
        mirror(arg0: Internal.Direction_): Internal.Direction;
        abstract set(arg0: Vec3f_, arg1: number): void;
        notifyAll(): void;
        static "get(net.minecraft.core.Direction$Axis)"(arg0: Internal.Direction$Axis_): Internal.Axis;
        mirror(arg0: Internal.Facing_): Internal.Facing;
        "mirror(team.creative.creativecore.common.util.math.vec.Vec3f)"(arg0: team.creative.creativecore.common.util.math.vec.Vec3f_): void;
        abstract "set(net.minecraft.core.Vec3i,int)"(arg0: Vec3i_, arg1: number): Vec3i;
        abstract "set(org.joml.Vector3f,float)"(arg0: Vec3f_, arg1: number): void;
        abstract "get(java.lang.Object,java.lang.Object,java.lang.Object)"<T>(arg0: T, arg1: T, arg2: T): T;
        "mirror(team.creative.creativecore.common.util.math.vec.Vec3d)"(arg0: team.creative.creativecore.common.util.math.vec.Vec3d_): void;
        abstract get(arg0: Vec3i_): number;
        mirror(arg0: team.creative.creativecore.common.util.math.vec.Vec3d_): void;
        abstract "get(org.joml.Vector3d)"(arg0: Internal.Vector3d_): number;
        hashCode(): number;
        abstract get(arg0: number, arg1: number, arg2: number): number;
        abstract one(): this;
        ordinal(): number;
        abstract "get(float,float,float)"(arg0: number, arg1: number, arg2: number): number;
        abstract toVanilla(): Internal.Direction$Axis;
        static values(): Internal.Axis[];
        wait(arg0: number): void;
        abstract "set(net.minecraft.world.level.ChunkPos,int)"(arg0: Internal.ChunkPos_, arg1: number): Internal.ChunkPos;
        abstract "mirror(net.minecraft.core.BlockPos)"(arg0: BlockPos_): BlockPos;
        abstract "set(net.minecraft.world.phys.Vec3,double)"(arg0: Vec3d_, arg1: number): Vec3d;
        equals(arg0: any): boolean;
        abstract "get(net.minecraft.core.Vec3i)"(arg0: Vec3i_): number;
        abstract "mirror(net.minecraft.core.Vec3i)"(arg0: Vec3i_): Vec3i;
        "compareTo(team.creative.creativecore.common.util.math.base.Axis)"(arg0: Internal.Axis_): number;
        get class(): typeof any
        get declaringClass(): typeof Internal.Axis
        static readonly Z: Internal.Axis;
        static readonly X: Internal.Axis;
        static readonly Y: Internal.Axis;
    }
    type Axis_ = "z" | "y" | "x" | Axis;
    class PBRSpriteHolder {
        constructor()
        getClass(): typeof any;
        getNormalSprite(): Internal.TextureAtlasSprite;
        toString(): string;
        notifyAll(): void;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        hashCode(): number;
        wait(): void;
        close(): void;
        wait(arg0: number): void;
        setNormalSprite(sprite: Internal.TextureAtlasSprite_): void;
        setSpecularSprite(sprite: Internal.TextureAtlasSprite_): void;
        equals(arg0: any): boolean;
        getSpecularSprite(): Internal.TextureAtlasSprite;
        get class(): typeof any
        get normalSprite(): Internal.TextureAtlasSprite
        set normalSprite(sprite: Internal.TextureAtlasSprite_)
        set specularSprite(sprite: Internal.TextureAtlasSprite_)
        get specularSprite(): Internal.TextureAtlasSprite
    }
    type PBRSpriteHolder_ = PBRSpriteHolder;
    interface IComponentProcessor {
        refresh(arg0: Internal.Screen_, arg1: number, arg2: number): void;
        allowRender(arg0: string): boolean;
        abstract process(arg0: Internal.Level_, arg1: string): Internal.IVariable;
        abstract setup(arg0: Internal.Level_, arg1: Internal.IVariableProvider_): void;
    }
    type IComponentProcessor_ = IComponentProcessor;
    class ContextUtils$ItemUseContext {
        constructor(level: Internal.Level_, player: Internal.Player_, hand: Internal.InteractionHand_)
        getClass(): typeof any;
        hashCode(): number;
        toString(): string;
        wait(): void;
        notifyAll(): void;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        get class(): typeof any
        /**
         * The player interacting with the item
        */
        readonly player: Internal.Player;
        /**
         * The hand used for interaction
        */
        readonly hand: Internal.InteractionHand;
        /**
         * The level of the entity using the item
        */
        readonly level: Internal.Level;
    }
    type ContextUtils$ItemUseContext_ = ContextUtils$ItemUseContext;
    class Chapter extends Internal.QuestObject {
        constructor(id: number, file: Internal.BaseQuestFile_, group: Internal.ChapterGroup_)
        constructor(id: number, file: Internal.BaseQuestFile_, group: Internal.ChapterGroup_, filename: string)
        getMutableTitle(): Internal.MutableComponent;
        getRawSubtitle(): Internal.List<string>;
        isAlwaysInvisible(): boolean;
        readData(nbt: Internal.CompoundTag_): void;
        getIndex(): number;
        isAutofocus(id: number): boolean;
        clearCachedData(): void;
        getRawTitle(): string;
        getDefaultQuestShape(): string;
        getProgressColor(data: Internal.TeamData_): Internal.Color4I;
        cacheProgress(): boolean;
        deleteSelf(): void;
        isDefaultRepeatable(): boolean;
        getProgressionMode(): Internal.ProgressionMode;
        hasUnclaimedRewardsRaw(teamData: Internal.TeamData_, player: Internal.UUID_): boolean;
        isValid(): boolean;
        onCompleted(data: Internal.QuestProgressEventData_<any>): void;
        static parseCodeString(id: string): number;
        deleteChildren(): void;
        getTags(): Internal.Set<string>;
        getChildren(): Internal.Collection<Internal.QuestObject>;
        setRawIcon(rawIcon: Internal.ItemStack_): void;
        static shouldSendNotifications(): boolean;
        getAutofocus(): Internal.Optional<Internal.Movable>;
        "compareTo(java.lang.Object)"(arg0: any): number;
        getAltIcon(): Internal.Icon;
        getClass(): typeof any;
        getProgressColor(data: Internal.TeamData_, dim: boolean): Internal.Color4I;
        static copy<T extends Internal.QuestObjectBase>(orig: T, factory: Internal.Supplier_<T>): T;
        hideQuestDetailsUntilStartable(): boolean;
        hasAnyVisibleChildren(): boolean;
        isOptionalForProgression(): boolean;
        fillConfigGroup(config: Internal.ConfigGroup_): void;
        setDefaultQuestShape(defaultQuestShape: string): void;
        addQuest(quest: Internal.Quest_): void;
        "compareTo(dev.ftb.mods.ftbquests.quest.QuestObjectBase)"(other: Internal.QuestObjectBase_): number;
        setRawTitle(rawTitle: string): void;
        toString(): string;
        onStarted(data: Internal.QuestProgressEventData_<any>): void;
        getDefaultQuestSize(): number;
        notifyAll(): void;
        getObjectType(): Internal.QuestObjectType;
        forceProgressRaw(teamData: Internal.TeamData_, progressChange: Internal.ProgressChange_): void;
        addQuestLink(link: Internal.QuestLink_): void;
        getImages(): Internal.List<Internal.ChapterImage>;
        removeQuestLink(link: Internal.QuestLink_): void;
        editedFromGUIOnServer(): void;
        wait(arg0: number): void;
        getGroup(): Internal.ChapterGroup;
        getRelativeProgressFromChildren(data: Internal.TeamData_): number;
        consumeItems(): boolean;
        isCompletedRaw(data: Internal.TeamData_): boolean;
        writeData(nbt: Internal.CompoundTag_): void;
        editedFromGUI(): void;
        notify(): void;
        addImage(image: Internal.ChapterImage_): void;
        compareTo(arg0: any): number;
        getQuests(): Internal.List<Internal.Quest>;
        static isNull(object: Internal.QuestObjectBase_): boolean;
        removeQuest(quest: Internal.Quest_): void;
        isRequireSequentialTasks(): boolean;
        getDefaultMinWidth(): number;
        static getID(object: Internal.QuestObjectBase_): number;
        componentsToRefresh(): Internal.Set<Internal.RecipeModHelper$Components>;
        setAutofocus(id: number): void;
        static getRelativeProgressFromChildren(progressSum: number, count: number): number;
        forceProgress(teamData: Internal.TeamData_, progressChange: Internal.ProgressChange_): void;
        static "getCodeString(dev.ftb.mods.ftbquests.quest.QuestObjectBase)"(object: Internal.QuestObjectBase_): string;
        wait(): void;
        getTitle(): net.minecraft.network.chat.Component;
        static titleToID(s: string): Internal.Optional<string>;
        onEditButtonClicked(gui: Internal.Runnable_): void;
        static getCodeString(object: Internal.QuestObjectBase_): string;
        getCodeString(): string;
        static getCodeString(id: number): string;
        createSubGroup(group: Internal.ConfigGroup_): Internal.ConfigGroup;
        getParentID(): number;
        wait(arg0: number, arg1: number): void;
        getIcon(): Internal.Icon;
        getFilename(): string;
        getAltTitle(): net.minecraft.network.chat.Component;
        static "getCodeString(long)"(id: number): string;
        readNetData(buffer: Internal.FriendlyByteBuf_): void;
        hasTag(tag: string): boolean;
        getQuestLinks(): Internal.List<Internal.QuestLink>;
        compareTo(other: Internal.QuestObjectBase_): number;
        getQuestChapter(): this;
        getQuestFile(): Internal.BaseQuestFile;
        removeImage(image: Internal.ChapterImage_): void;
        static parseHexId(id: string): Internal.Optional<number>;
        hashCode(): number;
        getPath(): Internal.Optional<string>;
        isVisible(data: Internal.TeamData_): boolean;
        writeNetData(buffer: Internal.FriendlyByteBuf_): void;
        onCreated(): void;
        hasGroup(): boolean;
        equals(object: any): boolean;
        hideQuestUntilDepsVisible(): boolean;
        get mutableTitle(): Internal.MutableComponent
        get rawSubtitle(): Internal.List<string>
        get alwaysInvisible(): boolean
        get index(): number
        get rawTitle(): string
        get defaultQuestShape(): string
        get defaultRepeatable(): boolean
        get progressionMode(): Internal.ProgressionMode
        get valid(): boolean
        get tags(): Internal.Set<string>
        get children(): Internal.Collection<Internal.QuestObject>
        set rawIcon(rawIcon: Internal.ItemStack_)
        get autofocus(): Internal.Optional<Internal.Movable>
        get altIcon(): Internal.Icon
        get class(): typeof any
        get optionalForProgression(): boolean
        set defaultQuestShape(defaultQuestShape: string)
        set rawTitle(rawTitle: string)
        get defaultQuestSize(): number
        get objectType(): Internal.QuestObjectType
        get images(): Internal.List<Internal.ChapterImage>
        get group(): Internal.ChapterGroup
        get quests(): Internal.List<Internal.Quest>
        get requireSequentialTasks(): boolean
        get defaultMinWidth(): number
        set autofocus(id: number)
        get title(): net.minecraft.network.chat.Component
        get codeString(): string
        get parentID(): number
        get icon(): Internal.Icon
        get filename(): string
        get altTitle(): net.minecraft.network.chat.Component
        get questLinks(): Internal.List<Internal.QuestLink>
        get questChapter(): Internal.Chapter
        get questFile(): Internal.BaseQuestFile
        get path(): Internal.Optional<string>
        readonly file: Internal.BaseQuestFile;
    }
    type Chapter_ = Chapter;
    abstract class CustomRecipe implements Internal.CraftingRecipe {
        constructor(arg0: ResourceLocation_, arg1: Internal.CraftingBookCategory_)
        getClass(): typeof any;
        getGroup(): string;
        getToastSymbol(): Internal.ItemStack;
        abstract matches(arg0: Internal.CraftingContainer_, arg1: Internal.Level_): boolean;
        getSchema(): Internal.RecipeSchema;
        notify(): void;
        getRemainingItems(arg0: Internal.CraftingContainer_): Internal.NonNullList<Internal.ItemStack>;
        wait(arg0: number, arg1: number): void;
        abstract assemble(arg0: Internal.CraftingContainer_, arg1: Internal.RegistryAccess_): Internal.ItemStack;
        category(): Internal.CraftingBookCategory;
        abstract getSerializer(): Internal.RecipeSerializer<any>;
        getId(): ResourceLocation;
        getMod(): string;
        getIngredients(): Internal.NonNullList<Internal.Ingredient>;
        isSpecial(): boolean;
        hasOutput(match: Internal.ReplacementMatch_): boolean;
        getResultItem(arg0: Internal.RegistryAccess_): Internal.ItemStack;
        toString(): string;
        notifyAll(): void;
        abstract canCraftInDimensions(arg0: number, arg1: number): boolean;
        showNotification(): boolean;
        replaceInput(match: Internal.ReplacementMatch_, with_: Internal.InputReplacement_): boolean;
        getType(): ResourceLocation;
        setGroup(group: string): void;
        hashCode(): number;
        getOrCreateId(): ResourceLocation;
        hasInput(match: Internal.ReplacementMatch_): boolean;
        wait(): void;
        isIncomplete(): boolean;
        wait(arg0: number): void;
        replaceOutput(match: Internal.ReplacementMatch_, with_: Internal.OutputReplacement_): boolean;
        equals(arg0: any): boolean;
        get class(): typeof any
        get group(): string
        get toastSymbol(): Internal.ItemStack
        get schema(): Internal.RecipeSchema
        get serializer(): Internal.RecipeSerializer<any>
        get id(): ResourceLocation
        get mod(): string
        get ingredients(): Internal.NonNullList<Internal.Ingredient>
        get special(): boolean
        get type(): ResourceLocation
        set group(group: string)
        get orCreateId(): ResourceLocation
        get incomplete(): boolean
    }
    type CustomRecipe_ = CustomRecipe;
    class DensityFunctions$Clamp extends Internal.Record implements Internal.DensityFunctions$PureTransformer {
        getClass(): typeof any;
        halfNegative(): Internal.DensityFunction;
        abs(): Internal.DensityFunction;
        toString(): string;
        maxValue(): number;
        notifyAll(): void;
        codec(): Internal.KeyDispatchDataCodec<Internal.DensityFunction>;
        compute(arg0: Internal.DensityFunction$FunctionContext_): number;
        squeeze(): Internal.DensityFunction;
        transform(arg0: number): number;
        square(): Internal.DensityFunction;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        mapAll(arg0: Internal.DensityFunction$Visitor_): Internal.DensityFunction;
        clamp(arg0: number, arg1: number): Internal.DensityFunction;
        hashCode(): number;
        quarterNegative(): Internal.DensityFunction;
        wait(): void;
        cube(): Internal.DensityFunction;
        wait(arg0: number): void;
        fillArray(arg0: number[], arg1: Internal.DensityFunction$ContextProvider_): void;
        minValue(): number;
        input(): Internal.DensityFunction;
        equals(arg0: any): boolean;
        get class(): typeof any
        static readonly CODEC: Internal.KeyDispatchDataCodec<Internal.DensityFunctions$Clamp>;
    }
    type DensityFunctions$Clamp_ = DensityFunctions$Clamp;
    class InscriptionTableBlock extends Internal.WizardLabBlock implements Internal.EntityBlock, Internal.ICutoutBlock {
        constructor()
        /**
         * @deprecated
        */
        getSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        /**
         * @deprecated
        */
        getVisualShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number, arg5: number): void;
        static popResource(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.ItemStack_): void;
        setRandomTickCallback(callback: Internal.Consumer_<any>): void;
        getBeaconColorMultiplier(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): number[];
        stepOn(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Entity_): void;
        getPistonPushReaction(arg0: Internal.BlockState_): Internal.PushReaction;
        getExpDrop(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.RandomSource_, arg3: BlockPos_, arg4: number, arg5: number): number;
        /**
         * @deprecated
        */
        getExplosionResistance(): number;
        asItem(): Internal.Item;
        shouldDisplayFluidOverlay(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        triggerEvent(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: number, arg4: number): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_, arg6: boolean): void;
        getTypeData(): Internal.CompoundTag;
        setFriction(arg0: number): void;
        rotate(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.Rotation_): Internal.BlockState;
        getRenderShape(arg0: Internal.BlockState_): Internal.RenderShape;
        getSpeedFactor(): number;
        /**
         * @deprecated
        */
        getLightBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        isPossibleToRespawnInThis(arg0: Internal.BlockState_): boolean;
        playerDestroy(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.BlockEntity_, arg5: Internal.ItemStack_): void;
        playerWillDestroy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Player_): void;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        getCloneItemStack(arg0: Internal.BlockState_, arg1: Internal.HitResult_, arg2: Internal.BlockGetter_, arg3: BlockPos_, arg4: Internal.Player_): Internal.ItemStack;
        getClass(): typeof any;
        getMaxVerticalOffset(): number;
        newBlockEntity(arg0: BlockPos_, arg1: Internal.BlockState_): Internal.BlockEntity;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        getRenderPropertiesInternal(): any;
        onCaughtFire(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.LivingEntity_): void;
        /**
         * @deprecated
        */
        getDrops(arg0: Internal.BlockState_, arg1: Internal.LootParams$Builder_): Internal.List<Internal.ItemStack>;
        getStateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>;
        setBlockBuilder(b: Internal.BlockBuilder_): void;
        /**
         * @deprecated
        */
        entityInside(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): void;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientBlockExtensions>): void;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        getBlockStates(): Internal.List<Internal.BlockState>;
        setRequiresTool(v: boolean): void;
        addLandingEffects(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.LivingEntity_, arg5: number): boolean;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Block>;
        static popResourceFromFace(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Direction_, arg3: Internal.ItemStack_): void;
        handlePrecipitation(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Biome$Precipitation_): void;
        wait(arg0: number): void;
        getFluidState(arg0: Internal.BlockState_): Internal.FluidState;
        getRespawnPosition(arg0: Internal.BlockState_, arg1: Internal.EntityType_<any>, arg2: Internal.LevelReader_, arg3: BlockPos_, arg4: number, arg5: Internal.LivingEntity_): Internal.Optional<Vec3d>;
        /**
         * @deprecated
        */
        tick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        isFertile(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        canBeHydrated(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.FluidState_, arg4: BlockPos_): boolean;
        getWeakChanges(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        neighborChanged(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Block_, arg4: BlockPos_, arg5: boolean): void;
        /**
         * @deprecated
        */
        getBlockSupportShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        /**
         * @deprecated
        */
        isCollisionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        getTicker<T extends Internal.BlockEntity>(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockEntityType_<T>): Internal.BlockEntityTicker<T>;
        /**
         * @deprecated
        */
        getMenuProvider(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): Internal.MenuProvider;
        static byItem(arg0: Internal.Item_): Internal.Block;
        static updateFromNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_): Internal.BlockState;
        /**
         * @deprecated
        */
        updateIndirectNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: number, arg4: number): void;
        destroy(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): void;
        getFriction(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): number;
        canConnectRedstone(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        use(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: Internal.InteractionHand_, arg5: Internal.BlockHitResult_): Internal.InteractionResult;
        setLightEmission(v: number): void;
        setJumpFactor(arg0: number): void;
        isSlimeBlock(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getShadeBrightness(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        /**
         * @deprecated
        */
        getCollisionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        defaultBlockState(): Internal.BlockState;
        getStateForPlacement(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        getToolModifiedState(arg0: Internal.BlockState_, arg1: Internal.UseOnContext_, arg2: Internal.ToolAction_, arg3: boolean): Internal.BlockState;
        placeLiquid(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.FluidState_): boolean;
        wait(): void;
        getMaxHorizontalOffset(): number;
        /**
         * @deprecated
        */
        getDestroyProgress(arg0: Internal.BlockState_, arg1: Internal.Player_, arg2: Internal.BlockGetter_, arg3: BlockPos_): number;
        makesOpenTrapdoorAboveClimbable(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.BlockState_): boolean;
        updateShape(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.BlockState_, arg3: Internal.LevelAccessor_, arg4: BlockPos_, arg5: BlockPos_): Internal.BlockState;
        isRandomlyTicking(arg0: Internal.BlockState_): boolean;
        static isShapeFullBlock(arg0: Internal.VoxelShape_): boolean;
        withPropertiesOf(arg0: Internal.BlockState_): Internal.BlockState;
        getPickupSound(arg0: Internal.BlockState_): Internal.Optional<Internal.SoundEvent>;
        setIsRandomlyTicking(arg0: boolean): void;
        rotate(arg0: Internal.BlockState_, arg1: Internal.Rotation_): Internal.BlockState;
        isScaffolding(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        hidesNeighborFace(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_, arg4: Internal.Direction_): boolean;
        defaultMapColor(): Internal.MapColor;
        getStateAtViewpoint(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Vec3d_): Internal.BlockState;
        setNameKey(arg0: string): void;
        static box(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.VoxelShape;
        getExplosionResistance(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): number;
        updateEntityAfterFallOn(arg0: Internal.BlockGetter_, arg1: Internal.Entity_): void;
        setBedOccupied(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.LivingEntity_, arg4: boolean): void;
        getLightEmission(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        arch$registryName(): ResourceLocation;
        getBlockBuilder(): Internal.BlockBuilder;
        getIdLocation(): ResourceLocation;
        canDropFromExplosion(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): boolean;
        addRunningEffects(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        isSignalSource(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        onProjectileHit(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockHitResult_, arg3: Internal.Projectile_): void;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): Internal.List<Internal.ItemStack>;
        /**
         * @deprecated
        */
        isOcclusionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        static getId(arg0: Internal.BlockState_): number;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.level.material.Fluid)"(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        canSustainPlant(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.IPlantable_): boolean;
        isPathfindable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.PathComputationType_): boolean;
        setSoundType(arg0: SoundType_): void;
        onRemove(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        equals(arg0: any): boolean;
        /**
         * @deprecated
        */
        getOcclusionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        isFlammable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        collisionExtendsVertically(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        getPickupSound(): Internal.Optional<Internal.SoundEvent>;
        /**
         * @deprecated
        */
        getSoundType(arg0: Internal.BlockState_): SoundType;
        /**
         * @deprecated
        */
        randomTick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.BlockEntity_): void;
        static canSupportRigidBlock(arg0: Internal.BlockGetter_, arg1: BlockPos_): boolean;
        isStickyBlock(arg0: Internal.BlockState_): boolean;
        getDescriptionId(): string;
        handler$zmd000$onUse(state: Internal.BlockState_, world: Internal.Level_, pos: BlockPos_, player: Internal.Player_, hand: Internal.InteractionHand_, hit: Internal.BlockHitResult_, cir: Internal.CallbackInfoReturnable_<any>): void;
        onBlockExploded(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Explosion_): void;
        fallOn(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: BlockPos_, arg3: Internal.Entity_, arg4: number): void;
        canEntityDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        getJumpFactor(): number;
        isValidSpawn(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.SpawnPlacements$Type_, arg4: Internal.EntityType_<any>): boolean;
        getFlammability(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        static canSupportCenter(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        skipRendering(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        getDirectSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isLadder(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        onDestroyedByPlayer(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: boolean, arg5: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.item.context.BlockPlaceContext)"(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        getMapColor(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.MapColor_): Internal.MapColor;
        isPortalFrame(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        useShapeForLightOcclusion(arg0: Internal.BlockState_): boolean;
        pickupBlock(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        getBedDirection(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): Internal.Direction;
        setSpeedFactor(arg0: number): void;
        setExplosionResistance(arg0: number): void;
        getEnchantPowerBonus(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): number;
        toString(): string;
        notifyAll(): void;
        getId(): string;
        getLootTable(): ResourceLocation;
        /**
         * @deprecated
        */
        getInteractionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        propagatesSkylightDown(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setPlacedBy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.LivingEntity_, arg4: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        onPlace(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        getFriction(): number;
        hasAnalogOutputSignal(arg0: Internal.BlockState_): boolean;
        getSoundType(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): SoundType;
        getAnalogOutputSignal(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): number;
        supportsExternalFaceHiding(arg0: Internal.BlockState_): boolean;
        notify(): void;
        onBlockStateChange(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_): void;
        static isFaceFull(arg0: Internal.VoxelShape_, arg1: Internal.Direction_): boolean;
        isFireSource(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        canSurvive(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): void;
        getAppearance(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.BlockState_, arg5: BlockPos_): Internal.BlockState;
        setDestroySpeed(v: number): void;
        canHarvestBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        shouldCheckWeakPower(arg0: Internal.BlockState_, arg1: Internal.SignalGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        getListener<T extends Internal.BlockEntity>(arg0: Internal.ServerLevel_, arg1: T): Internal.GameEventListener;
        arch$holder(): Internal.Holder<Internal.Block>;
        /**
         * @deprecated
        */
        getCloneItemStack(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        hasDynamicShape(): boolean;
        /**
         * @deprecated
        */
        getSeed(arg0: Internal.BlockState_, arg1: BlockPos_): number;
        defaultDestroyTime(): number;
        getBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        dropFromExplosion(arg0: Internal.Explosion_): boolean;
        onNeighborChange(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): void;
        static isExceptionForConnection(arg0: Internal.BlockState_): boolean;
        canPlaceLiquid(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Fluid_): boolean;
        onTreeGrow(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.BiConsumer_<BlockPos, Internal.BlockState>, arg3: Internal.RandomSource_, arg4: BlockPos_, arg5: Internal.TreeConfiguration_): boolean;
        wait(arg0: number, arg1: number): void;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.BlockGetter_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        mirror(arg0: Internal.BlockState_, arg1: Internal.Mirror_): Internal.BlockState;
        isBed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        wasExploded(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Explosion_): void;
        getName(): Internal.MutableComponent;
        canStickTo(arg0: Internal.BlockState_, arg1: Internal.BlockState_): boolean;
        animateTick(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        getFireSpreadSpeed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        getMod(): string;
        getAdjacentBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_, arg4: Internal.BlockPathTypes_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        isConduitFrame(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): boolean;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number): void;
        /**
         * @deprecated
        */
        attack(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): void;
        /**
         * @deprecated
        */
        getShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static stateById(arg0: number): Internal.BlockState;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        popExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: number): void;
        static pushEntitiesUp(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_): Internal.BlockState;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_): Internal.List<Internal.ItemStack>;
        isBurning(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setHasCollision(arg0: boolean): void;
        static shouldRenderFace(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: BlockPos_): boolean;
        /**
         * @deprecated
        */
        spawnAfterBreak(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.ItemStack_, arg4: boolean): void;
        set randomTickCallback(callback: Internal.Consumer_<any>)
        /**
         * @deprecated
        */
        get explosionResistance(): number
        get typeData(): Internal.CompoundTag
        set friction(arg0: number)
        get speedFactor(): number
        get class(): typeof any
        get maxVerticalOffset(): number
        get renderPropertiesInternal(): any
        get stateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>
        set blockBuilder(b: Internal.BlockBuilder_)
        get blockStates(): Internal.List<Internal.BlockState>
        set requiresTool(v: boolean)
        set lightEmission(v: number)
        set jumpFactor(arg0: number)
        get maxHorizontalOffset(): number
        set isRandomlyTicking(arg0: boolean)
        set nameKey(arg0: string)
        get blockBuilder(): Internal.BlockBuilder
        get idLocation(): ResourceLocation
        set soundType(arg0: SoundType_)
        get pickupSound(): Internal.Optional<Internal.SoundEvent>
        get descriptionId(): string
        get jumpFactor(): number
        set speedFactor(arg0: number)
        set explosionResistance(arg0: number)
        get id(): string
        get lootTable(): ResourceLocation
        get friction(): number
        set destroySpeed(v: number)
        get name(): Internal.MutableComponent
        get mod(): string
        set hasCollision(arg0: boolean)
        static readonly CONTAINED_RESOURCES: (Internal.IntegerProperty) & (Internal.IntegerProperty);
    }
    type InscriptionTableBlock_ = InscriptionTableBlock;
    abstract class IntProvider {
        constructor()
        abstract getMinValue(): number;
        getClass(): typeof any;
        abstract sample(arg0: Internal.RandomSource_): number;
        toString(): string;
        abstract getMaxValue(): number;
        notifyAll(): void;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        abstract getType(): Internal.IntProviderType<any>;
        hashCode(): number;
        wait(): void;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        static codec(arg0: number, arg1: number): Internal.Codec<Internal.IntProvider>;
        static codec<T extends Internal.IntProvider>(arg0: number, arg1: number, arg2: Internal.Codec_<T>): Internal.Codec<T>;
        get minValue(): number
        get class(): typeof any
        get maxValue(): number
        get type(): Internal.IntProviderType<any>
        static readonly CODEC: Internal.Codec<Internal.IntProvider>;
        static readonly NON_NEGATIVE_CODEC: Internal.Codec<Internal.IntProvider>;
        static readonly POSITIVE_CODEC: Internal.Codec<Internal.IntProvider>;
    }
    type IntProvider_ = {max_inclusive: number, clamped_normal: Internal.IntProvider_, mean: number, deviation: number, min_inclusive: number} | number | {clamped_normal: Internal.IntProvider_, mean: number, deviation: number, value: number} | {max_inclusive: number, clamped: Internal.IntProvider_, min_inclusive: number} | {clamped_normal: Internal.IntProvider_, mean: number, deviation: number, min: number, max: number} | IntProvider | {clamped: Internal.IntProvider_, bounds: [number, number]} | {clamped: Internal.IntProvider_, min: number, max: number} | {value: number, clamped: Internal.IntProvider_} | [number, number] | {clamped_normal: Internal.IntProvider_, mean: number, deviation: number, bounds: [number, number]};
    class BrainDebugRenderer$PoiInfo {
        constructor(arg0: BlockPos_, arg1: string, arg2: number)
        getClass(): typeof any;
        hashCode(): number;
        toString(): string;
        wait(): void;
        notifyAll(): void;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        get class(): typeof any
        type: string;
        readonly pos: BlockPos;
        freeTicketCount: number;
    }
    type BrainDebugRenderer$PoiInfo_ = BrainDebugRenderer$PoiInfo;
    class IModFileInfo$LanguageSpec extends Internal.Record {
        constructor(languageName: string, acceptedVersions: Internal.VersionRange_)
        getClass(): typeof any;
        hashCode(): number;
        toString(): string;
        wait(): void;
        notifyAll(): void;
        acceptedVersions(): Internal.VersionRange;
        wait(arg0: number): void;
        languageName(): string;
        equals(arg0: any): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        get class(): typeof any
    }
    type IModFileInfo$LanguageSpec_ = IModFileInfo$LanguageSpec;
    class Method extends Internal.Executable {
        getClass(): typeof any;
        isVarArgs(): boolean;
        getAnnotatedParameterTypes(): Internal.AnnotatedType[];
        getGenericExceptionTypes(): Internal.Type[];
        getModifiers(): number;
        getDeclaredAnnotationsByType<T extends Internal.Annotation>(arg0: T): T[];
        notify(): void;
        static setAccessible(arg0: Internal.AccessibleObject_[], arg1: boolean): void;
        wait(arg0: number, arg1: number): void;
        getAnnotatedReturnType(): Internal.AnnotatedType;
        getDefaultValue(): any;
        getParameterTypes(): typeof any[];
        getParameterAnnotations(): Internal.Annotation[][];
        getParameters(): any[];
        getName(): string;
        trySetAccessible(): boolean;
        getParameterCount(): number;
        invoke(arg0: any, ...arg1: any[]): any;
        getDeclaredAnnotations(): Internal.Annotation[];
        getAnnotatedReceiverType(): Internal.AnnotatedType;
        isAnnotationPresent(arg0: typeof Internal.Annotation): boolean;
        getAnnotatedExceptionTypes(): Internal.AnnotatedType[];
        setAccessible(arg0: boolean): void;
        getAnnotationsByType<T extends Internal.Annotation>(arg0: T): T[];
        getDeclaredAnnotation<T extends Internal.Annotation>(arg0: T): T;
        toString(): string;
        getGenericParameterTypes(): Internal.Type[];
        notifyAll(): void;
        isSynthetic(): boolean;
        getAnnotation<T extends Internal.Annotation>(arg0: T): T;
        getTypeParameters(): any[];
        isDefault(): boolean;
        getDeclaringClass(): typeof any;
        getExceptionTypes(): typeof any[];
        hashCode(): number;
        getReturnType(): typeof any;
        canAccess(arg0: any): boolean;
        isBridge(): boolean;
        toGenericString(): string;
        wait(): void;
        getGenericReturnType(): Internal.Type;
        wait(arg0: number): void;
        getAnnotations(): Internal.Annotation[];
        equals(arg0: any): boolean;
        /**
         * @deprecated
        */
        isAccessible(): boolean;
        get class(): typeof any
        get varArgs(): boolean
        get annotatedParameterTypes(): Internal.AnnotatedType[]
        get genericExceptionTypes(): Internal.Type[]
        get modifiers(): number
        get annotatedReturnType(): Internal.AnnotatedType
        get defaultValue(): any
        get parameterTypes(): typeof any[]
        get parameterAnnotations(): Internal.Annotation[][]
        get parameters(): any[]
        get name(): string
        get parameterCount(): number
        get declaredAnnotations(): Internal.Annotation[]
        get annotatedReceiverType(): Internal.AnnotatedType
        get annotatedExceptionTypes(): Internal.AnnotatedType[]
        set accessible(arg0: boolean)
        get genericParameterTypes(): Internal.Type[]
        get synthetic(): boolean
        get typeParameters(): any[]
        get "default"(): boolean
        get declaringClass(): typeof any
        get exceptionTypes(): typeof any[]
        get returnType(): typeof any
        get bridge(): boolean
        get genericReturnType(): Internal.Type
        get annotations(): Internal.Annotation[]
        /**
         * @deprecated
        */
        get accessible(): boolean
    }
    type Method_ = Method;
    abstract class CharmBaseItem extends com.mna.api.items.TieredItem {
        constructor()
        constructor(arg0: Internal.Item$Properties_)
        getDrinkingSound(): Internal.SoundEvent;
        getShareTag(arg0: Internal.ItemStack_): Internal.CompoundTag;
        setRarity(arg0: Internal.Rarity_): void;
        isEnderMask(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.EnderMan_): boolean;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        getDestroySpeed(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): number;
        getBurnTime(arg0: Internal.ItemStack_, arg1: Internal.RecipeType_<any>): number;
        moonlight$addAdditionalBehavior(placementOverride: Internal.AdditionalItemPlacement_): void;
        /**
         * @deprecated
        */
        onDestroyed(arg0: Internal.ItemEntity_): void;
        isFireResistant(): boolean;
        onItemUseFirst(arg0: Internal.ItemStack_, arg1: Internal.UseOnContext_): Internal.InteractionResult;
        onCraftedBy(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        isComplex(): boolean;
        isCorrectToolForDrops(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): boolean;
        isPiglinCurrency(arg0: Internal.ItemStack_): boolean;
        getEnchantmentValue(arg0: Internal.ItemStack_): number;
        consume(arg0: Internal.ServerPlayer_, arg1: Internal.InteractionHand_): boolean;
        canDisableShield(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.LivingEntity_, arg3: Internal.LivingEntity_): boolean;
        onUseTick(arg0: Internal.Level_, arg1: Internal.LivingEntity_, arg2: Internal.ItemStack_, arg3: number): void;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        canBeHurtBy(arg0: Internal.DamageSource_): boolean;
        /**
         * @deprecated
        */
        getFoodProperties(): Internal.FoodProperties;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): boolean;
        getDescriptionId(): string;
        getUseAnimation(arg0: Internal.ItemStack_): Internal.UseAnim;
        isValidRepairItem(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        moonlight$getClientAnimationExtension(): any;
        getXpRepairRatio(arg0: Internal.ItemStack_): number;
        isBookEnchantable(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getCreativeTab(): string;
        initCapabilities(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): Internal.ICapabilityProvider;
        asItem(): Internal.Item;
        onDroppedByPlayer(arg0: Internal.ItemStack_, arg1: Internal.Player_): boolean;
        getTypeData(): Internal.CompoundTag;
        getDefaultInstance(): Internal.ItemStack;
        getDefaultTooltipHideFlags(arg0: Internal.ItemStack_): number;
        getCreatorModId(arg0: Internal.ItemStack_): string;
        canContinueUsing(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        setMaxStackSize(arg0: number): void;
        setBurnTime(i: number): void;
        getFoodProperties(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): Internal.FoodProperties;
        getBarWidth(arg0: Internal.ItemStack_): number;
        setMaxDamage(arg0: number): void;
        getItem(): Internal.Item;
        getBarColor(arg0: Internal.ItemStack_): number;
        onDestroyed(arg0: Internal.ItemEntity_, arg1: Internal.DamageSource_): void;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        onLeftClickEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): boolean;
        getItemBuilder(): Internal.ItemBuilder;
        makesPiglinsNeutral(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxDamage(): number;
        removeAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_): void;
        asIngredient(): Internal.Ingredient;
        getDescription(): net.minecraft.network.chat.Component;
        /**
         * @deprecated
        */
        hasCraftingRemainingItem(): boolean;
        canPerformAction(arg0: Internal.ItemStack_, arg1: Internal.ToolAction_): boolean;
        getClass(): typeof any;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        static byId(arg0: number): Internal.Item;
        getRenderPropertiesInternal(): any;
        onEntityItemUpdate(arg0: Internal.ItemStack_, arg1: Internal.ItemEntity_): boolean;
        interactLivingEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.LivingEntity_, arg3: Internal.InteractionHand_): Internal.InteractionResult;
        moonlight$getAdditionalBehavior(): Internal.AdditionalItemPlacement;
        moonlight$setClientAnimationExtension(obj: any): void;
        getCraftingRemainingItem(arg0: Internal.ItemStack_): Internal.ItemStack;
        useOn(arg0: Internal.UseOnContext_): Internal.InteractionResult;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        onArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        getRarity(arg0: Internal.ItemStack_): Internal.Rarity;
        setItemBuilder(b: Internal.ItemBuilder_): void;
        shouldCauseBlockBreakReset(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        damageItem<T extends Internal.LivingEntity>(arg0: Internal.ItemStack_, arg1: number, arg2: T, arg3: Internal.Consumer_<T>): number;
        setCraftingRemainingItemFTBL(arg0: Internal.Item_): void;
        attachCapability(capabilityBuilder: Internal.CapabilityBuilder_<any, any, any>): void;
        setAttackDamage(attackDamage: number): void;
        isEdible(): boolean;
        getTooltipImage(arg0: Internal.ItemStack_): Internal.Optional<Internal.TooltipComponent>;
        arch$holder(): Internal.Holder<Internal.Item>;
        getArmorTexture(arg0: Internal.ItemStack_, arg1: Internal.Entity_, arg2: Internal.EquipmentSlot_, arg3: string): string;
        getAttributes(attribute: Internal.Attribute_): Internal.List<Internal.AttributeModifier>;
        use(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.InteractionHand_): Internal.InteractionResultHolder<Internal.ItemStack>;
        toString(): string;
        /**
         * @deprecated
        */
        getEnchantmentValue(): number;
        setArmorToughness(armorToughness: number): void;
        notifyAll(): void;
        getId(): string;
        getTier(arg0: Internal.Level_, arg1: Internal.ItemStack_): number;
        isEnchantable(arg0: Internal.ItemStack_): boolean;
        getSweepHitBox(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): Internal.AABB;
        getEnchantmentLevel(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): number;
        getAllEnchantments(arg0: Internal.ItemStack_): Internal.Map<Internal.Enchantment, number>;
        wait(arg0: number): void;
        getDigSpeed(): number;
        setTier(c: Internal.Consumer_<Internal.MutableToolTier>): void;
        overrideStackedOnOther(arg0: Internal.ItemStack_, arg1: Internal.Slot_, arg2: Internal.ClickAction_, arg3: Internal.Player_): boolean;
        setFoodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        onBlockStartBreak(arg0: Internal.ItemStack_, arg1: BlockPos_, arg2: Internal.Player_): boolean;
        elytraFlightTick(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): boolean;
        getMaxDamage(arg0: Internal.ItemStack_): number;
        isFoil(arg0: Internal.ItemStack_): boolean;
        "setFoodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_): void;
        isRepairable(arg0: Internal.ItemStack_): boolean;
        isDamageable(arg0: Internal.ItemStack_): boolean;
        useOnRelease(arg0: Internal.ItemStack_): boolean;
        canAttackBlock(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        canGrindstoneRepair(arg0: Internal.ItemStack_): boolean;
        notify(): void;
        setDigSpeed(speed: number): void;
        getDescriptionId(arg0: Internal.ItemStack_): string;
        releaseUsing(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_, arg3: number): void;
        setAttackSpeed(attackSpeed: number): void;
        isBarVisible(arg0: Internal.ItemStack_): boolean;
        canWalkOnPowderedSnow(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        getUseDuration(arg0: Internal.ItemStack_): number;
        onStopUsing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): void;
        isNotReplaceableByPickAction(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: number): boolean;
        /**
         * @deprecated
        */
        getMaxStackSize(): number;
        resolveTier(arg0: Internal.Level_, arg1: Internal.ItemStack_): number;
        /**
         * @deprecated
        */
        static byBlock(arg0: Internal.Block_): Internal.Item;
        setCachedTier(arg0: number): void;
        isDamaged(arg0: Internal.ItemStack_): boolean;
        getCachedTier(): number;
        handler$dpg000$initializeClient(consumer: Internal.Consumer_<any>, ci: Internal.CallbackInfo_): void;
        setSneakBypass(): com.mna.api.items.TieredItem;
        canFitInsideContainerItems(): boolean;
        wait(): void;
        getHighlightTip(arg0: Internal.ItemStack_, arg1: net.minecraft.network.chat.Component_): net.minecraft.network.chat.Component;
        isCorrectToolForDrops(arg0: Internal.BlockState_): boolean;
        verifyTagAfterLoad(arg0: Internal.CompoundTag_): void;
        canEquip(arg0: Internal.ItemStack_, arg1: Internal.EquipmentSlot_, arg2: Internal.Entity_): boolean;
        "setFoodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        finishUsingItem(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_): Internal.ItemStack;
        setArmorKnockbackResistance(knockbackResistance: number): void;
        setFireResistant(arg0: boolean): void;
        onInventoryTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_, arg3: number, arg4: number): void;
        getEatingSound(): Internal.SoundEvent;
        hasCustomEntity(arg0: Internal.ItemStack_): boolean;
        canBeDepleted(): boolean;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientItemExtensions>): void;
        getDamage(arg0: Internal.ItemStack_): number;
        mineBlock(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.BlockState_, arg3: BlockPos_, arg4: Internal.LivingEntity_): boolean;
        wait(arg0: number, arg1: number): void;
        setNameKey(arg0: string): void;
        readShareTag(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): void;
        getEquipmentSlot(arg0: Internal.ItemStack_): Internal.EquipmentSlot;
        getLightColor(player: Internal.Player_, stack: Internal.ItemStack_): Vec3f;
        getName(arg0: Internal.ItemStack_): net.minecraft.network.chat.Component;
        /**
         * @deprecated
        */
        getDefaultAttributeModifiers(arg0: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        arch$registryName(): ResourceLocation;
        getIdLocation(): ResourceLocation;
        getAttributeModifiers(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getMod(): string;
        canElytraFly(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Item>;
        createEntity(arg0: Internal.Level_, arg1: Internal.Entity_, arg2: Internal.ItemStack_): Internal.Entity;
        setArmorProtection(armorProtection: number): void;
        getLightEmission(player: Internal.Player_, stack: Internal.ItemStack_): number;
        onEntitySwing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        getEntityLifespan(arg0: Internal.ItemStack_, arg1: Internal.Level_): number;
        inventoryTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Entity_, arg3: number, arg4: boolean): void;
        hurtEnemy(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: Internal.LivingEntity_): boolean;
        setDamage(arg0: Internal.ItemStack_, arg1: number): void;
        /**
         * @deprecated
        */
        getCraftingRemainingItem(): Internal.Item;
        getTypeItemStackKey(): Internal.ItemStackKey;
        hasCraftingRemainingItem(arg0: Internal.ItemStack_): boolean;
        shouldOverrideMultiplayerNbt(): boolean;
        getMaxStackSize(arg0: Internal.ItemStack_): number;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        static getId(arg0: Internal.Item_): number;
        overrideOtherStackedOnMe(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_, arg5: Internal.SlotAccess_): boolean;
        setFoodProperties(arg0: Internal.FoodProperties_): void;
        doesSneakBypassUse(arg0: Internal.ItemStack_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        setCraftingRemainder(arg0: Internal.Item_): void;
        consume(arg0: Internal.ServerPlayer_): boolean;
        shouldCauseReequipAnimation(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: boolean): boolean;
        onHorseArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Mob_): void;
        addAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_, name: string, d: number, operation: Internal.AttributeModifier$Operation_): void;
        equals(arg0: any): boolean;
        get drinkingSound(): Internal.SoundEvent
        set rarity(arg0: Internal.Rarity_)
        get fireResistant(): boolean
        get complex(): boolean
        /**
         * @deprecated
        */
        get foodProperties(): Internal.FoodProperties
        get descriptionId(): string
        get creativeTab(): string
        get typeData(): Internal.CompoundTag
        get defaultInstance(): Internal.ItemStack
        set maxStackSize(arg0: number)
        set burnTime(i: number)
        set maxDamage(arg0: number)
        get item(): Internal.Item
        get itemBuilder(): Internal.ItemBuilder
        /**
         * @deprecated
        */
        get maxDamage(): number
        get description(): net.minecraft.network.chat.Component
        get class(): typeof any
        get renderPropertiesInternal(): any
        set itemBuilder(b: Internal.ItemBuilder_)
        set craftingRemainingItemFTBL(arg0: Internal.Item_)
        set attackDamage(attackDamage: number)
        get edible(): boolean
        /**
         * @deprecated
        */
        get enchantmentValue(): number
        set armorToughness(armorToughness: number)
        get id(): string
        get digSpeed(): number
        set tier(c: Internal.Consumer_<Internal.MutableToolTier>)
        set foodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set "foodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_)
        set digSpeed(speed: number)
        set attackSpeed(attackSpeed: number)
        /**
         * @deprecated
        */
        get maxStackSize(): number
        set cachedTier(arg0: number)
        get cachedTier(): number
        set "foodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set armorKnockbackResistance(knockbackResistance: number)
        set fireResistant(arg0: boolean)
        get eatingSound(): Internal.SoundEvent
        set nameKey(arg0: string)
        get idLocation(): ResourceLocation
        get mod(): string
        set armorProtection(armorProtection: number)
        /**
         * @deprecated
        */
        get craftingRemainingItem(): Internal.Item
        get typeItemStackKey(): Internal.ItemStackKey
        set foodProperties(arg0: Internal.FoodProperties_)
        set craftingRemainder(arg0: Internal.Item_)
    }
    type CharmBaseItem_ = CharmBaseItem;
    interface EnergyRequirementJS extends Internal.RecipeJSBuilder {
        produceEnergy(amount: number): Internal.RecipeJSBuilder;
        abstract error(arg0: string, ...arg1: any[]): Internal.RecipeJSBuilder;
        abstract addRequirement(arg0: Internal.IRequirement_<any>): Internal.RecipeJSBuilder;
        requireEnergy(amount: number): Internal.RecipeJSBuilder;
    }
    type EnergyRequirementJS_ = EnergyRequirementJS;
    class ImmutableCollections$SetN <E> extends Internal.ImmutableCollections$AbstractImmutableSet<E> implements Internal.Serializable {
        getClass(): typeof any;
        abstract add(arg0: E): boolean;
        parallelStream(): Internal.Stream<E>;
        isEmpty(): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        static of<E>(arg0: E, arg1: E, arg2: E, arg3: E, arg4: E, arg5: E, arg6: E, arg7: E, arg8: E, arg9: E): Internal.Set<E>;
        abstract retainAll(arg0: Internal.Collection_<any>): boolean;
        abstract containsAll(arg0: Internal.Collection_<any>): boolean;
        toArray<T>(arg0: Internal.IntFunction_<T[]>): T[];
        static of<E>(arg0: E, arg1: E): Internal.Set<E>;
        static of<E>(arg0: E, arg1: E, arg2: E, arg3: E, arg4: E): Internal.Set<E>;
        static of<E>(arg0: E, arg1: E, arg2: E): Internal.Set<E>;
        static of<E>(arg0: E, arg1: E, arg2: E, arg3: E): Internal.Set<E>;
        static of<E>(arg0: E, arg1: E, arg2: E, arg3: E, arg4: E, arg5: E, arg6: E): Internal.Set<E>;
        contains(arg0: any): boolean;
        abstract addAll(arg0: Internal.Collection_<E>): boolean;
        static "of(java.lang.Object[])"<E>(...arg0: E[]): Internal.Set<E>;
        static of<E>(arg0: E, arg1: E, arg2: E, arg3: E, arg4: E, arg5: E, arg6: E, arg7: E): Internal.Set<E>;
        static of<E>(arg0: E, arg1: E, arg2: E, arg3: E, arg4: E, arg5: E): Internal.Set<E>;
        toString(): string;
        forEach(arg0: Internal.Consumer_<E>): void;
        notifyAll(): void;
        toArray<T>(arg0: T[]): T[];
        "toArray(java.lang.Object[])"<T>(arg0: T[]): T[];
        abstract remove(arg0: any): boolean;
        "toArray(java.util.function.IntFunction)"<T>(arg0: Internal.IntFunction_<T[]>): T[];
        toArray(): any[];
        iterator(): Internal.Iterator<E>;
        hashCode(): number;
        size(): number;
        static of<E>(arg0: E): Internal.Set<E>;
        static of<E>(arg0: E, arg1: E, arg2: E, arg3: E, arg4: E, arg5: E, arg6: E, arg7: E, arg8: E): Internal.Set<E>;
        static of<E>(...arg0: E[]): Internal.Set<E>;
        static of<E>(): Internal.Set<E>;
        stream(): Internal.Stream<E>;
        abstract removeAll(arg0: Internal.Collection_<any>): boolean;
        wait(): void;
        abstract clear(): void;
        removeIf(arg0: Internal.Predicate_<E>): boolean;
        wait(arg0: number): void;
        spliterator(): Internal.Spliterator<E>;
        equals(arg0: any): boolean;
        static copyOf<E>(arg0: Internal.Collection_<E>): Internal.Set<E>;
        static "of(java.lang.Object)"<E>(arg0: E): Internal.Set<E>;
        get class(): typeof any
        get empty(): boolean
    }
    type ImmutableCollections$SetN_<E> = ImmutableCollections$SetN<E>;
    interface CustomIngredientActionCallback {
        abstract transform(arg0: Internal.ItemStack_, arg1: number, arg2: Internal.InventoryKJS_): Internal.ItemStack;
        (arg0: Internal.ItemStack, arg1: number, arg2: Internal.InventoryKJS): Internal.ItemStack_;
    }
    type CustomIngredientActionCallback_ = ((arg0: Internal.ItemStack, arg1: number, arg2: Internal.InventoryKJS)=> Internal.ItemStack_) | CustomIngredientActionCallback;
    class ContextUtils$EThunderHitContext {
        constructor(level: Internal.ServerLevel_, lightningBolt: Internal.LightningBolt_, entity: Internal.Entity_)
        getClass(): typeof any;
        hashCode(): number;
        toString(): string;
        wait(): void;
        notifyAll(): void;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        get class(): typeof any
        /**
         * The lightning bolt that struck
        */
        readonly lightningBolt: Internal.LightningBolt;
        /**
         * The entity affected by the lightning strike
        */
        readonly entity: Internal.Entity;
        /**
         * The server level where the lightning strike occurred
        */
        readonly level: Internal.ServerLevel;
    }
    type ContextUtils$EThunderHitContext_ = ContextUtils$EThunderHitContext;
    class SpellReagent {
        constructor(arg0: Internal.SpellEffect_, arg1: Internal.ItemStack_, arg2: boolean, arg3: boolean, arg4: boolean, arg5: boolean, ...arg6: Internal.IFaction_[])
        constructor(arg0: Internal.SpellEffect_, arg1: Internal.ItemStack_, arg2: boolean, arg3: boolean, arg4: boolean, ...arg5: Internal.IFaction_[])
        constructor(arg0: Internal.SpellEffect_, arg1: Internal.ItemStack_, arg2: boolean, arg3: boolean, arg4: boolean)
        getClass(): typeof any;
        toString(): string;
        notifyAll(): void;
        getCompareNBT(): boolean;
        getReagentStack(): Internal.ItemStack;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        getAddedBy(): Internal.SpellEffect;
        hashCode(): number;
        wait(): void;
        wait(arg0: number): void;
        getIgnoreDurability(): boolean;
        getConsume(): boolean;
        getOptional(): boolean;
        equals(arg0: any): boolean;
        isIgnoredBy(arg0: Internal.Player_): boolean;
        get class(): typeof any
        get compareNBT(): boolean
        get reagentStack(): Internal.ItemStack
        get addedBy(): Internal.SpellEffect
        get ignoreDurability(): boolean
        get consume(): boolean
        get optional(): boolean
    }
    type SpellReagent_ = SpellReagent;
    interface ArtifactVersion extends Internal.Comparable<Internal.ArtifactVersion> {
        abstract compareTo(arg0: Internal.ArtifactVersion_): number;
        abstract getBuildNumber(): number;
        abstract parseVersion(arg0: string): void;
        abstract getMinorVersion(): number;
        abstract getMajorVersion(): number;
        abstract getIncrementalVersion(): number;
        abstract getQualifier(): string;
        get buildNumber(): number
        get minorVersion(): number
        get majorVersion(): number
        get incrementalVersion(): number
        get qualifier(): string
    }
    type ArtifactVersion_ = ArtifactVersion;
    class Locale$LanguageRange {
        constructor(arg0: string, arg1: number)
        constructor(arg0: string)
        getWeight(): number;
        getClass(): typeof any;
        toString(): string;
        static parse(arg0: string): Internal.List<Internal.Locale$LanguageRange>;
        notifyAll(): void;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        hashCode(): number;
        wait(): void;
        static parse(arg0: string, arg1: Internal.Map_<string, Internal.List<string>>): Internal.List<Internal.Locale$LanguageRange>;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        static mapEquivalents(arg0: Internal.List_<Internal.Locale$LanguageRange>, arg1: Internal.Map_<string, Internal.List<string>>): Internal.List<Internal.Locale$LanguageRange>;
        getRange(): string;
        get weight(): number
        get class(): typeof any
        get range(): string
        static readonly MAX_WEIGHT: (1.0) & (number);
        static readonly MIN_WEIGHT: (0.0) & (number);
    }
    type Locale$LanguageRange_ = Locale$LanguageRange;
    class PickupConfig extends Internal.Record {
        constructor(pickup: Internal.PickupMode_, destroy: Internal.DestroyMode_)
        getClass(): typeof any;
        static iterateDestroy(arg0: Internal.PickupConfig_): Internal.PickupConfig;
        destroy(): Internal.DestroyMode;
        static "setConfig(net.minecraft.world.item.ItemStack,net.minecraft.nbt.CompoundTag)"(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): void;
        pickup(): Internal.PickupMode;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        static "iterateMode(net.minecraft.world.item.ItemStack)"(arg0: Internal.ItemStack_): void;
        static addText(arg0: Internal.ItemStack_, arg1: Internal.List_<net.minecraft.network.chat.Component>): void;
        static getPickupMode(arg0: Internal.ItemStack_): Internal.PickupConfig;
        static "iterateDestroy(net.minecraft.world.item.ItemStack)"(arg0: Internal.ItemStack_): void;
        static iterateMode(arg0: Internal.PickupConfig_): Internal.PickupConfig;
        static iterateMode(arg0: Internal.ItemStack_): void;
        static "iterateMode(dev.xkmc.l2backpack.content.capability.PickupConfig)"(arg0: Internal.PickupConfig_): Internal.PickupConfig;
        toString(): string;
        static iterateDestroy(arg0: Internal.ItemStack_): void;
        notifyAll(): void;
        static "setConfig(net.minecraft.world.item.ItemStack,dev.xkmc.l2backpack.content.capability.PickupConfig)"(arg0: Internal.ItemStack_, arg1: Internal.PickupConfig_): void;
        static "iterateDestroy(dev.xkmc.l2backpack.content.capability.PickupConfig)"(arg0: Internal.PickupConfig_): Internal.PickupConfig;
        hashCode(): number;
        static setConfig(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): void;
        static setConfig(arg0: Internal.ItemStack_, arg1: Internal.PickupConfig_): void;
        static getConfig(arg0: Internal.ItemStack_): Internal.CompoundTag;
        wait(): void;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        get class(): typeof any
    }
    type PickupConfig_ = PickupConfig;
    interface ArgumentType <T> {
        abstract parse(arg0: Internal.StringReader_): T;
        getExamples(): Internal.Collection<string>;
        listSuggestions<S>(arg0: Internal.CommandContext_<S>, arg1: Internal.SuggestionsBuilder_): Internal.CompletableFuture<Internal.Suggestions>;
        get examples(): Internal.Collection<string>
        (arg0: Internal.StringReader): T;
    }
    type ArgumentType_<T> = ((arg0: Internal.StringReader)=> T) | ArgumentType<T>;
    class Capability <T> {
        addListener(arg0: Internal.Consumer_<Internal.Capability<T>>): this;
        getClass(): typeof any;
        toString(): string;
        orEmpty<R>(arg0: Internal.Capability_<R>, arg1: Internal.LazyOptional_<T>): Internal.LazyOptional<R>;
        notifyAll(): void;
        isRegistered(): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        hashCode(): number;
        wait(): void;
        getName(): string;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        get class(): typeof any
        get registered(): boolean
        get name(): string
    }
    type Capability_<T> = Capability<T>;
    class ItemCooldowns {
        constructor()
        getClass(): typeof any;
        toString(): string;
        notifyAll(): void;
        isOnCooldown(arg0: Internal.Item_): boolean;
        notify(): void;
        removeCooldown(arg0: Internal.Item_): void;
        wait(arg0: number, arg1: number): void;
        tick(): void;
        hashCode(): number;
        addCooldown(arg0: Internal.Item_, arg1: number): void;
        wait(): void;
        getCooldownPercent(arg0: Internal.Item_, arg1: number): number;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        get class(): typeof any
    }
    type ItemCooldowns_ = ItemCooldowns;
    class StonecutterRecipe extends Internal.SingleItemRecipe {
        constructor(arg0: ResourceLocation_, arg1: string, arg2: Internal.Ingredient_, arg3: Internal.ItemStack_)
        getClass(): typeof any;
        getGroup(): string;
        getToastSymbol(): Internal.ItemStack;
        getSchema(): Internal.RecipeSchema;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        assemble(arg0: net.minecraft.world.Container_, arg1: Internal.RegistryAccess_): Internal.ItemStack;
        getSerializer(): Internal.RecipeSerializer<any>;
        getId(): ResourceLocation;
        matches(arg0: net.minecraft.world.Container_, arg1: Internal.Level_): boolean;
        getMod(): string;
        getRemainingItems(arg0: net.minecraft.world.Container_): Internal.NonNullList<Internal.ItemStack>;
        getIngredients(): Internal.NonNullList<Internal.Ingredient>;
        isSpecial(): boolean;
        hasOutput(match: Internal.ReplacementMatch_): boolean;
        getResultItem(arg0: Internal.RegistryAccess_): Internal.ItemStack;
        toString(): string;
        notifyAll(): void;
        canCraftInDimensions(arg0: number, arg1: number): boolean;
        showNotification(): boolean;
        replaceInput(match: Internal.ReplacementMatch_, with_: Internal.InputReplacement_): boolean;
        getType(): ResourceLocation;
        setGroup(group: string): void;
        hashCode(): number;
        getOrCreateId(): ResourceLocation;
        hasInput(match: Internal.ReplacementMatch_): boolean;
        wait(): void;
        isIncomplete(): boolean;
        wait(arg0: number): void;
        replaceOutput(match: Internal.ReplacementMatch_, with_: Internal.OutputReplacement_): boolean;
        equals(arg0: any): boolean;
        get class(): typeof any
        get group(): string
        get toastSymbol(): Internal.ItemStack
        get schema(): Internal.RecipeSchema
        get serializer(): Internal.RecipeSerializer<any>
        get id(): ResourceLocation
        get mod(): string
        get ingredients(): Internal.NonNullList<Internal.Ingredient>
        get special(): boolean
        get type(): ResourceLocation
        set group(group: string)
        get orCreateId(): ResourceLocation
        get incomplete(): boolean
    }
    type StonecutterRecipe_ = StonecutterRecipe;
    interface ISpellDefinition {
        abstract getComplexity(): number;
        abstract canFactionCraft(arg0: Internal.IPlayerProgression_): boolean;
        abstract clearComponents(): void;
        abstract getAffinity(): Internal.HashMap<Internal.Affinity, number>;
        abstract addItemTooltip(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.Player_): void;
        abstract setManaCost(arg0: number): void;
        abstract getManaCost(): number;
        abstract writeToNBT(arg0: Internal.CompoundTag_): void;
        abstract getReagents(arg0: Internal.Player_, arg1: Internal.InteractionHand_, arg2: Internal.SpellCastingResult_): Internal.List<Internal.SpellReagent>;
        abstract containsPart(arg0: ResourceLocation_): boolean;
        abstract getShape(): Internal.IModifiedSpellPart<com.mna.api.spells.parts.Shape>;
        abstract isHarmful(): boolean;
        abstract setParticleColorOverride(arg0: number): void;
        abstract getTier(arg0: Internal.Level_): number;
        abstract isFactionSpell(arg0: Internal.IFaction_): boolean;
        abstract getParticleColorOverride(): number;
        abstract getComponents(): Internal.List<Internal.IModifiedSpellPart<Internal.SpellEffect>>;
        abstract isMysterious(): boolean;
        abstract colorParticle(arg0: Internal.MAParticleType_, arg1: Internal.Entity_): Internal.MAParticleType;
        abstract findComponent(arg0: Internal.SpellEffect_): number;
        abstract getCooldown(arg0: Internal.LivingEntity_): number;
        abstract countComponents(): number;
        abstract getComponent(arg0: number): Internal.IModifiedSpellPart<Internal.SpellEffect>;
        abstract isValid(): boolean;
        isSame(arg0: Internal.ISpellDefinition_, arg1: boolean, arg2: boolean, arg3: boolean): boolean;
        abstract getHighestAffinity(): Internal.Affinity;
        abstract iterateComponents(arg0: Internal.Consumer_<Internal.IModifiedSpellPart<Internal.SpellEffect>>): void;
        abstract isChargedSpell(arg0: Internal.ItemStack_): boolean;
        abstract countModifiers(): number;
        abstract isChanneled(): boolean;
        abstract setOverrideAffinity(arg0: Internal.Affinity_): void;
        abstract getModifiers(): Internal.List<Internal.Modifier>;
        abstract getModifier(arg0: number): Internal.Modifier;
        get complexity(): number
        get affinity(): Internal.HashMap<Internal.Affinity, number>
        set manaCost(arg0: number)
        get manaCost(): number
        get shape(): Internal.IModifiedSpellPart<com.mna.api.spells.parts.Shape>
        get harmful(): boolean
        set particleColorOverride(arg0: number)
        get particleColorOverride(): number
        get components(): Internal.List<Internal.IModifiedSpellPart<Internal.SpellEffect>>
        get mysterious(): boolean
        get valid(): boolean
        get highestAffinity(): Internal.Affinity
        get channeled(): boolean
        set overrideAffinity(arg0: Internal.Affinity_)
        get modifiers(): Internal.List<Internal.Modifier>
        readonly EMPTY: Internal.ISpellDefinition;
    }
    type ISpellDefinition_ = ISpellDefinition;
    class DataPackEventJS extends Internal.EventJS {
        constructor(d: any_, rm: any_)
        getClass(): typeof any;
        /**
         * Stops the event with default exit value. Execution will be stopped **immediately**.
         * 
         * `exit` denotes a `default` outcome.
        */
        exit(): any;
        /**
         * Cancels the event with the given exit value. Execution will be stopped **immediately**.
         * 
         * `cancel` denotes a `false` outcome.
        */
        cancel(value: any): any;
        toString(): string;
        notifyAll(): void;
        /**
         * Stops the event with the given exit value. Execution will be stopped **immediately**.
         * 
         * `exit` denotes a `default` outcome.
        */
        exit(value: any): any;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        /**
         * Stops the event with the given exit value. Execution will be stopped **immediately**.
         * 
         * `success` denotes a `true` outcome.
        */
        success(value: any): any;
        hashCode(): number;
        wait(): void;
        add(id: ResourceLocation_, content: string): void;
        /**
         * Cancels the event with default exit value. Execution will be stopped **immediately**.
         * 
         * `cancel` denotes a `false` outcome.
        */
        cancel(): any;
        wait(arg0: number): void;
        /**
         * Stops the event with default exit value. Execution will be stopped **immediately**.
         * 
         * `success` denotes a `true` outcome.
        */
        success(): any;
        equals(arg0: any): boolean;
        addJson(id: ResourceLocation_, json: Internal.JsonElement_): void;
        get class(): typeof any
    }
    type DataPackEventJS_ = DataPackEventJS;
    class LanternBlock extends Internal.Block implements Internal.SimpleWaterloggedBlock {
        constructor(arg0: Internal.BlockBehaviour$Properties_)
        /**
         * @deprecated
        */
        getSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        /**
         * @deprecated
        */
        getVisualShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number, arg5: number): void;
        static popResource(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.ItemStack_): void;
        setRandomTickCallback(callback: Internal.Consumer_<any>): void;
        getBeaconColorMultiplier(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): number[];
        stepOn(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Entity_): void;
        getPistonPushReaction(arg0: Internal.BlockState_): Internal.PushReaction;
        getExpDrop(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.RandomSource_, arg3: BlockPos_, arg4: number, arg5: number): number;
        /**
         * @deprecated
        */
        getExplosionResistance(): number;
        asItem(): Internal.Item;
        shouldDisplayFluidOverlay(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        triggerEvent(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: number, arg4: number): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_, arg6: boolean): void;
        getTypeData(): Internal.CompoundTag;
        setFriction(arg0: number): void;
        rotate(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.Rotation_): Internal.BlockState;
        /**
         * @deprecated
        */
        getRenderShape(arg0: Internal.BlockState_): Internal.RenderShape;
        getSpeedFactor(): number;
        /**
         * @deprecated
        */
        getLightBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        isPossibleToRespawnInThis(arg0: Internal.BlockState_): boolean;
        playerDestroy(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.BlockEntity_, arg5: Internal.ItemStack_): void;
        playerWillDestroy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Player_): void;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        getCloneItemStack(arg0: Internal.BlockState_, arg1: Internal.HitResult_, arg2: Internal.BlockGetter_, arg3: BlockPos_, arg4: Internal.Player_): Internal.ItemStack;
        getClass(): typeof any;
        getMaxVerticalOffset(): number;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        getRenderPropertiesInternal(): any;
        onCaughtFire(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.LivingEntity_): void;
        /**
         * @deprecated
        */
        getDrops(arg0: Internal.BlockState_, arg1: Internal.LootParams$Builder_): Internal.List<Internal.ItemStack>;
        getStateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>;
        setBlockBuilder(b: Internal.BlockBuilder_): void;
        /**
         * @deprecated
        */
        entityInside(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): void;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientBlockExtensions>): void;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        getBlockStates(): Internal.List<Internal.BlockState>;
        setRequiresTool(v: boolean): void;
        addLandingEffects(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.LivingEntity_, arg5: number): boolean;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Block>;
        static popResourceFromFace(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Direction_, arg3: Internal.ItemStack_): void;
        handlePrecipitation(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Biome$Precipitation_): void;
        wait(arg0: number): void;
        getFluidState(arg0: Internal.BlockState_): Internal.FluidState;
        getRespawnPosition(arg0: Internal.BlockState_, arg1: Internal.EntityType_<any>, arg2: Internal.LevelReader_, arg3: BlockPos_, arg4: number, arg5: Internal.LivingEntity_): Internal.Optional<Vec3d>;
        /**
         * @deprecated
        */
        tick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        isFertile(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        canBeHydrated(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.FluidState_, arg4: BlockPos_): boolean;
        getWeakChanges(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        neighborChanged(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Block_, arg4: BlockPos_, arg5: boolean): void;
        /**
         * @deprecated
        */
        getBlockSupportShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        /**
         * @deprecated
        */
        isCollisionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        getMenuProvider(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): Internal.MenuProvider;
        static byItem(arg0: Internal.Item_): Internal.Block;
        static updateFromNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_): Internal.BlockState;
        /**
         * @deprecated
        */
        updateIndirectNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: number, arg4: number): void;
        destroy(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): void;
        getFriction(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): number;
        canConnectRedstone(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        use(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: Internal.InteractionHand_, arg5: Internal.BlockHitResult_): Internal.InteractionResult;
        setLightEmission(v: number): void;
        setJumpFactor(arg0: number): void;
        isSlimeBlock(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getShadeBrightness(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        /**
         * @deprecated
        */
        getCollisionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        defaultBlockState(): Internal.BlockState;
        getStateForPlacement(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        getToolModifiedState(arg0: Internal.BlockState_, arg1: Internal.UseOnContext_, arg2: Internal.ToolAction_, arg3: boolean): Internal.BlockState;
        placeLiquid(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.FluidState_): boolean;
        wait(): void;
        getMaxHorizontalOffset(): number;
        /**
         * @deprecated
        */
        getDestroyProgress(arg0: Internal.BlockState_, arg1: Internal.Player_, arg2: Internal.BlockGetter_, arg3: BlockPos_): number;
        makesOpenTrapdoorAboveClimbable(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.BlockState_): boolean;
        updateShape(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.BlockState_, arg3: Internal.LevelAccessor_, arg4: BlockPos_, arg5: BlockPos_): Internal.BlockState;
        isRandomlyTicking(arg0: Internal.BlockState_): boolean;
        static isShapeFullBlock(arg0: Internal.VoxelShape_): boolean;
        withPropertiesOf(arg0: Internal.BlockState_): Internal.BlockState;
        setIsRandomlyTicking(arg0: boolean): void;
        getPickupSound(arg0: Internal.BlockState_): Internal.Optional<Internal.SoundEvent>;
        isScaffolding(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        hidesNeighborFace(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_, arg4: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        rotate(arg0: Internal.BlockState_, arg1: Internal.Rotation_): Internal.BlockState;
        defaultMapColor(): Internal.MapColor;
        getStateAtViewpoint(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Vec3d_): Internal.BlockState;
        setNameKey(arg0: string): void;
        static box(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.VoxelShape;
        getExplosionResistance(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): number;
        updateEntityAfterFallOn(arg0: Internal.BlockGetter_, arg1: Internal.Entity_): void;
        setBedOccupied(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.LivingEntity_, arg4: boolean): void;
        getLightEmission(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        arch$registryName(): ResourceLocation;
        getBlockBuilder(): Internal.BlockBuilder;
        getIdLocation(): ResourceLocation;
        canDropFromExplosion(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): boolean;
        addRunningEffects(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        isSignalSource(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        onProjectileHit(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockHitResult_, arg3: Internal.Projectile_): void;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): Internal.List<Internal.ItemStack>;
        /**
         * @deprecated
        */
        isOcclusionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        static getId(arg0: Internal.BlockState_): number;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.level.material.Fluid)"(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        canSustainPlant(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.IPlantable_): boolean;
        isPathfindable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.PathComputationType_): boolean;
        setSoundType(arg0: SoundType_): void;
        /**
         * @deprecated
        */
        onRemove(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        equals(arg0: any): boolean;
        /**
         * @deprecated
        */
        getOcclusionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        isFlammable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        collisionExtendsVertically(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        getPickupSound(): Internal.Optional<Internal.SoundEvent>;
        /**
         * @deprecated
        */
        getSoundType(arg0: Internal.BlockState_): SoundType;
        /**
         * @deprecated
        */
        randomTick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.BlockEntity_): void;
        static canSupportRigidBlock(arg0: Internal.BlockGetter_, arg1: BlockPos_): boolean;
        isStickyBlock(arg0: Internal.BlockState_): boolean;
        getDescriptionId(): string;
        handler$zmd000$onUse(state: Internal.BlockState_, world: Internal.Level_, pos: BlockPos_, player: Internal.Player_, hand: Internal.InteractionHand_, hit: Internal.BlockHitResult_, cir: Internal.CallbackInfoReturnable_<any>): void;
        onBlockExploded(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Explosion_): void;
        fallOn(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: BlockPos_, arg3: Internal.Entity_, arg4: number): void;
        canEntityDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        getJumpFactor(): number;
        isValidSpawn(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.SpawnPlacements$Type_, arg4: Internal.EntityType_<any>): boolean;
        getFlammability(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        static canSupportCenter(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        skipRendering(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        getDirectSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isLadder(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        onDestroyedByPlayer(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: boolean, arg5: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.item.context.BlockPlaceContext)"(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        getMapColor(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.MapColor_): Internal.MapColor;
        isPortalFrame(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        useShapeForLightOcclusion(arg0: Internal.BlockState_): boolean;
        pickupBlock(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        getBedDirection(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): Internal.Direction;
        setSpeedFactor(arg0: number): void;
        setExplosionResistance(arg0: number): void;
        getEnchantPowerBonus(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): number;
        toString(): string;
        notifyAll(): void;
        getId(): string;
        getLootTable(): ResourceLocation;
        /**
         * @deprecated
        */
        getInteractionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        setPlacedBy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.LivingEntity_, arg4: Internal.ItemStack_): void;
        propagatesSkylightDown(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        onPlace(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        getFriction(): number;
        /**
         * @deprecated
        */
        hasAnalogOutputSignal(arg0: Internal.BlockState_): boolean;
        getSoundType(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): SoundType;
        /**
         * @deprecated
        */
        getAnalogOutputSignal(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): number;
        supportsExternalFaceHiding(arg0: Internal.BlockState_): boolean;
        notify(): void;
        onBlockStateChange(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_): void;
        static isFaceFull(arg0: Internal.VoxelShape_, arg1: Internal.Direction_): boolean;
        isFireSource(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        canSurvive(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): void;
        getAppearance(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.BlockState_, arg5: BlockPos_): Internal.BlockState;
        setDestroySpeed(v: number): void;
        canHarvestBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        shouldCheckWeakPower(arg0: Internal.BlockState_, arg1: Internal.SignalGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        arch$holder(): Internal.Holder<Internal.Block>;
        /**
         * @deprecated
        */
        getCloneItemStack(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        hasDynamicShape(): boolean;
        /**
         * @deprecated
        */
        getSeed(arg0: Internal.BlockState_, arg1: BlockPos_): number;
        defaultDestroyTime(): number;
        getBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        dropFromExplosion(arg0: Internal.Explosion_): boolean;
        onNeighborChange(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): void;
        static isExceptionForConnection(arg0: Internal.BlockState_): boolean;
        canPlaceLiquid(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Fluid_): boolean;
        onTreeGrow(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.BiConsumer_<BlockPos, Internal.BlockState>, arg3: Internal.RandomSource_, arg4: BlockPos_, arg5: Internal.TreeConfiguration_): boolean;
        wait(arg0: number, arg1: number): void;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.BlockGetter_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        mirror(arg0: Internal.BlockState_, arg1: Internal.Mirror_): Internal.BlockState;
        isBed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        wasExploded(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Explosion_): void;
        getName(): Internal.MutableComponent;
        canStickTo(arg0: Internal.BlockState_, arg1: Internal.BlockState_): boolean;
        animateTick(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        getFireSpreadSpeed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        getMod(): string;
        getAdjacentBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_, arg4: Internal.BlockPathTypes_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        isConduitFrame(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): boolean;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number): void;
        /**
         * @deprecated
        */
        attack(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): void;
        getShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static stateById(arg0: number): Internal.BlockState;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        popExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: number): void;
        static pushEntitiesUp(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_): Internal.BlockState;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_): Internal.List<Internal.ItemStack>;
        isBurning(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setHasCollision(arg0: boolean): void;
        static shouldRenderFace(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: BlockPos_): boolean;
        /**
         * @deprecated
        */
        spawnAfterBreak(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.ItemStack_, arg4: boolean): void;
        set randomTickCallback(callback: Internal.Consumer_<any>)
        /**
         * @deprecated
        */
        get explosionResistance(): number
        get typeData(): Internal.CompoundTag
        set friction(arg0: number)
        get speedFactor(): number
        get class(): typeof any
        get maxVerticalOffset(): number
        get renderPropertiesInternal(): any
        get stateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>
        set blockBuilder(b: Internal.BlockBuilder_)
        get blockStates(): Internal.List<Internal.BlockState>
        set requiresTool(v: boolean)
        set lightEmission(v: number)
        set jumpFactor(arg0: number)
        get maxHorizontalOffset(): number
        set isRandomlyTicking(arg0: boolean)
        set nameKey(arg0: string)
        get blockBuilder(): Internal.BlockBuilder
        get idLocation(): ResourceLocation
        set soundType(arg0: SoundType_)
        get pickupSound(): Internal.Optional<Internal.SoundEvent>
        get descriptionId(): string
        get jumpFactor(): number
        set speedFactor(arg0: number)
        set explosionResistance(arg0: number)
        get id(): string
        get lootTable(): ResourceLocation
        get friction(): number
        set destroySpeed(v: number)
        get name(): Internal.MutableComponent
        get mod(): string
        set hasCollision(arg0: boolean)
        static readonly WATERLOGGED: (Internal.BooleanProperty) & (Internal.BooleanProperty);
        static readonly HANGING: (Internal.BooleanProperty) & (Internal.BooleanProperty);
    }
    type LanternBlock_ = LanternBlock;
    class SlingshotItem extends Internal.ProjectileWeaponItem implements Internal.IThirdPersonAnimationProvider, Internal.Vanishable, Internal.IFirstPersonAnimationProvider {
        constructor(properties: Internal.Item$Properties_)
        getDrinkingSound(): Internal.SoundEvent;
        getShareTag(arg0: Internal.ItemStack_): Internal.CompoundTag;
        setRarity(arg0: Internal.Rarity_): void;
        isEnderMask(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.EnderMan_): boolean;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        getDestroySpeed(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): number;
        getBurnTime(arg0: Internal.ItemStack_, arg1: Internal.RecipeType_<any>): number;
        moonlight$addAdditionalBehavior(placementOverride: Internal.AdditionalItemPlacement_): void;
        static "attachToItem(net.minecraft.world.item.Item,net.mehvahdjukaar.moonlight.api.item.IThirdPersonAnimationProvider)"(target: Internal.Item_, object: Internal.IThirdPersonAnimationProvider_): void;
        /**
         * @deprecated
        */
        onDestroyed(arg0: Internal.ItemEntity_): void;
        isFireResistant(): boolean;
        onItemUseFirst(arg0: Internal.ItemStack_, arg1: Internal.UseOnContext_): Internal.InteractionResult;
        onCraftedBy(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        isComplex(): boolean;
        isCorrectToolForDrops(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): boolean;
        isPiglinCurrency(arg0: Internal.ItemStack_): boolean;
        getEnchantmentValue(arg0: Internal.ItemStack_): number;
        canDisableShield(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.LivingEntity_, arg3: Internal.LivingEntity_): boolean;
        onUseTick(arg0: Internal.Level_, arg1: Internal.LivingEntity_, arg2: Internal.ItemStack_, arg3: number): void;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        canBeHurtBy(arg0: Internal.DamageSource_): boolean;
        /**
         * @deprecated
        */
        getFoodProperties(): Internal.FoodProperties;
        canApplyAtEnchantingTable(stack: Internal.ItemStack_, enchantment: Internal.Enchantment_): boolean;
        poseLeftArm<T extends Internal.LivingEntity>(stack: Internal.ItemStack_, model: Internal.HumanoidModel_<T>, entity: T, mainHand: Internal.HumanoidArm_): boolean;
        getUseAnimation(stack: Internal.ItemStack_): Internal.UseAnim;
        getDescriptionId(): string;
        isValidRepairItem(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        moonlight$getClientAnimationExtension(): any;
        getXpRepairRatio(arg0: Internal.ItemStack_): number;
        getAllSupportedProjectiles(): Internal.Predicate<Internal.ItemStack>;
        isBookEnchantable(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getCreativeTab(): string;
        initCapabilities(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): Internal.ICapabilityProvider;
        asItem(): Internal.Item;
        onDroppedByPlayer(arg0: Internal.ItemStack_, arg1: Internal.Player_): boolean;
        static attachToItem(target: Internal.Item_, object: Internal.IThirdPersonAnimationProvider_): void;
        getTypeData(): Internal.CompoundTag;
        getDefaultInstance(): Internal.ItemStack;
        static getHeldProjectile(arg0: Internal.LivingEntity_, arg1: Internal.Predicate_<Internal.ItemStack>): Internal.ItemStack;
        getSupportedHeldProjectiles(): Internal.Predicate<Internal.ItemStack>;
        getDefaultTooltipHideFlags(arg0: Internal.ItemStack_): number;
        getCreatorModId(arg0: Internal.ItemStack_): string;
        canContinueUsing(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        setMaxStackSize(arg0: number): void;
        setBurnTime(i: number): void;
        getFoodProperties(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): Internal.FoodProperties;
        getBarWidth(arg0: Internal.ItemStack_): number;
        setMaxDamage(arg0: number): void;
        getItem(): Internal.Item;
        getBarColor(arg0: Internal.ItemStack_): number;
        animateItemFirstPerson(entity: Internal.Player_, stack: Internal.ItemStack_, hand: Internal.InteractionHand_, arm: Internal.HumanoidArm_, poseStack: Internal.PoseStack_, partialTicks: number, pitch: number, attackAnim: number, handHeight: number): void;
        onDestroyed(arg0: Internal.ItemEntity_, arg1: Internal.DamageSource_): void;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        onLeftClickEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): boolean;
        getItemBuilder(): Internal.ItemBuilder;
        makesPiglinsNeutral(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxDamage(): number;
        removeAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_): void;
        asIngredient(): Internal.Ingredient;
        getDescription(): net.minecraft.network.chat.Component;
        /**
         * @deprecated
        */
        hasCraftingRemainingItem(): boolean;
        canPerformAction(arg0: Internal.ItemStack_, arg1: Internal.ToolAction_): boolean;
        getClass(): typeof any;
        isTwoHanded(): boolean;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        static byId(arg0: number): Internal.Item;
        getRenderPropertiesInternal(): any;
        onEntityItemUpdate(arg0: Internal.ItemStack_, arg1: Internal.ItemEntity_): boolean;
        interactLivingEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.LivingEntity_, arg3: Internal.InteractionHand_): Internal.InteractionResult;
        moonlight$getAdditionalBehavior(): Internal.AdditionalItemPlacement;
        moonlight$setClientAnimationExtension(obj: any): void;
        getCraftingRemainingItem(arg0: Internal.ItemStack_): Internal.ItemStack;
        useOn(arg0: Internal.UseOnContext_): Internal.InteractionResult;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        onArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        getRarity(arg0: Internal.ItemStack_): Internal.Rarity;
        setItemBuilder(b: Internal.ItemBuilder_): void;
        shouldCauseBlockBreakReset(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getDefaultProjectileRange(): number;
        damageItem<T extends Internal.LivingEntity>(arg0: Internal.ItemStack_, arg1: number, arg2: T, arg3: Internal.Consumer_<T>): number;
        setCraftingRemainingItemFTBL(arg0: Internal.Item_): void;
        attachCapability(capabilityBuilder: Internal.CapabilityBuilder_<any, any, any>): void;
        setAttackDamage(attackDamage: number): void;
        isEdible(): boolean;
        getTooltipImage(arg0: Internal.ItemStack_): Internal.Optional<Internal.TooltipComponent>;
        arch$holder(): Internal.Holder<Internal.Item>;
        getArmorTexture(arg0: Internal.ItemStack_, arg1: Internal.Entity_, arg2: Internal.EquipmentSlot_, arg3: string): string;
        getAttributes(attribute: Internal.Attribute_): Internal.List<Internal.AttributeModifier>;
        use(world: Internal.Level_, player: Internal.Player_, hand: Internal.InteractionHand_): Internal.InteractionResultHolder<Internal.ItemStack>;
        toString(): string;
        getEnchantmentValue(): number;
        setArmorToughness(armorToughness: number): void;
        notifyAll(): void;
        getId(): string;
        getPowerForTime(stack: Internal.ItemStack_, timeLeft: number): number;
        isEnchantable(arg0: Internal.ItemStack_): boolean;
        animateItemFirstPerson(entity: Internal.LivingEntity_, stack: Internal.ItemStack_, hand: Internal.InteractionHand_, matrixStack: Internal.PoseStack_, partialTicks: number, pitch: number, attackAnim: number, handHeight: number): void;
        getSweepHitBox(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): Internal.AABB;
        getEnchantmentLevel(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): number;
        getAllEnchantments(arg0: Internal.ItemStack_): Internal.Map<Internal.Enchantment, number>;
        wait(arg0: number): void;
        getDigSpeed(): number;
        setTier(c: Internal.Consumer_<Internal.MutableToolTier>): void;
        overrideStackedOnOther(arg0: Internal.ItemStack_, arg1: Internal.Slot_, arg2: Internal.ClickAction_, arg3: Internal.Player_): boolean;
        setFoodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        onBlockStartBreak(arg0: Internal.ItemStack_, arg1: BlockPos_, arg2: Internal.Player_): boolean;
        elytraFlightTick(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): boolean;
        getMaxDamage(arg0: Internal.ItemStack_): number;
        isFoil(arg0: Internal.ItemStack_): boolean;
        "setFoodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_): void;
        poseRightArm<T extends Internal.LivingEntity>(stack: Internal.ItemStack_, model: Internal.HumanoidModel_<T>, entity: T, mainHand: Internal.HumanoidArm_): boolean;
        static "attachToItem(net.minecraft.world.item.Item,net.mehvahdjukaar.moonlight.api.item.IFirstPersonAnimationProvider)"(target: Internal.Item_, object: Internal.IFirstPersonAnimationProvider_): void;
        isRepairable(arg0: Internal.ItemStack_): boolean;
        isDamageable(arg0: Internal.ItemStack_): boolean;
        useOnRelease(arg0: Internal.ItemStack_): boolean;
        canAttackBlock(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        canGrindstoneRepair(arg0: Internal.ItemStack_): boolean;
        notify(): void;
        setDigSpeed(speed: number): void;
        getDescriptionId(arg0: Internal.ItemStack_): string;
        releaseUsing(stack: Internal.ItemStack_, world: Internal.Level_, entity: Internal.LivingEntity_, timeLeft: number): void;
        static animateCrossbowCharge(offHand: Internal.ModelPart_, mainHand: Internal.ModelPart_, entity: Internal.LivingEntity_, right: boolean): void;
        setAttackSpeed(attackSpeed: number): void;
        isBarVisible(arg0: Internal.ItemStack_): boolean;
        canWalkOnPowderedSnow(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        getUseDuration(stack: Internal.ItemStack_): number;
        onStopUsing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): void;
        isNotReplaceableByPickAction(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: number): boolean;
        static get(target: Internal.Item_): Internal.IFirstPersonAnimationProvider;
        /**
         * @deprecated
        */
        getMaxStackSize(): number;
        /**
         * @deprecated
        */
        static byBlock(arg0: Internal.Block_): Internal.Item;
        isDamaged(arg0: Internal.ItemStack_): boolean;
        handler$dpg000$initializeClient(consumer: Internal.Consumer_<any>, ci: Internal.CallbackInfo_): void;
        canFitInsideContainerItems(): boolean;
        wait(): void;
        getHighlightTip(arg0: Internal.ItemStack_, arg1: net.minecraft.network.chat.Component_): net.minecraft.network.chat.Component;
        isCorrectToolForDrops(arg0: Internal.BlockState_): boolean;
        static attachToItem(target: Internal.Item_, object: Internal.IFirstPersonAnimationProvider_): void;
        verifyTagAfterLoad(arg0: Internal.CompoundTag_): void;
        canEquip(arg0: Internal.ItemStack_, arg1: Internal.EquipmentSlot_, arg2: Internal.Entity_): boolean;
        "setFoodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        finishUsingItem(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_): Internal.ItemStack;
        setArmorKnockbackResistance(knockbackResistance: number): void;
        setFireResistant(arg0: boolean): void;
        onInventoryTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_, arg3: number, arg4: number): void;
        getEatingSound(): Internal.SoundEvent;
        hasCustomEntity(arg0: Internal.ItemStack_): boolean;
        canBeDepleted(): boolean;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientItemExtensions>): void;
        getDamage(arg0: Internal.ItemStack_): number;
        getChargeSound(stack: Internal.ItemStack_): Internal.SoundEvent;
        mineBlock(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.BlockState_, arg3: BlockPos_, arg4: Internal.LivingEntity_): boolean;
        wait(arg0: number, arg1: number): void;
        setNameKey(arg0: string): void;
        readShareTag(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): void;
        getEquipmentSlot(arg0: Internal.ItemStack_): Internal.EquipmentSlot;
        getLightColor(player: Internal.Player_, stack: Internal.ItemStack_): Vec3f;
        getName(arg0: Internal.ItemStack_): net.minecraft.network.chat.Component;
        /**
         * @deprecated
        */
        getDefaultAttributeModifiers(arg0: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        arch$registryName(): ResourceLocation;
        getIdLocation(): ResourceLocation;
        getAttributeModifiers(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getMod(): string;
        canElytraFly(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Item>;
        createEntity(arg0: Internal.Level_, arg1: Internal.Entity_, arg2: Internal.ItemStack_): Internal.Entity;
        static getChargeDuration(stack: Internal.ItemStack_): number;
        setArmorProtection(armorProtection: number): void;
        getLightEmission(player: Internal.Player_, stack: Internal.ItemStack_): number;
        onEntitySwing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        getEntityLifespan(arg0: Internal.ItemStack_, arg1: Internal.Level_): number;
        inventoryTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Entity_, arg3: number, arg4: boolean): void;
        hurtEnemy(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: Internal.LivingEntity_): boolean;
        setDamage(arg0: Internal.ItemStack_, arg1: number): void;
        /**
         * @deprecated
        */
        getCraftingRemainingItem(): Internal.Item;
        getTypeItemStackKey(): Internal.ItemStackKey;
        hasCraftingRemainingItem(arg0: Internal.ItemStack_): boolean;
        shouldOverrideMultiplayerNbt(): boolean;
        getMaxStackSize(arg0: Internal.ItemStack_): number;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        static getId(arg0: Internal.Item_): number;
        overrideOtherStackedOnMe(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_, arg5: Internal.SlotAccess_): boolean;
        setFoodProperties(arg0: Internal.FoodProperties_): void;
        setCraftingRemainder(arg0: Internal.Item_): void;
        doesSneakBypassUse(arg0: Internal.ItemStack_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        shouldCauseReequipAnimation(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: boolean): boolean;
        onHorseArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Mob_): void;
        addAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_, name: string, d: number, operation: Internal.AttributeModifier$Operation_): void;
        equals(arg0: any): boolean;
        get drinkingSound(): Internal.SoundEvent
        set rarity(arg0: Internal.Rarity_)
        get fireResistant(): boolean
        get complex(): boolean
        /**
         * @deprecated
        */
        get foodProperties(): Internal.FoodProperties
        get descriptionId(): string
        get allSupportedProjectiles(): Internal.Predicate<Internal.ItemStack>
        get creativeTab(): string
        get typeData(): Internal.CompoundTag
        get defaultInstance(): Internal.ItemStack
        get supportedHeldProjectiles(): Internal.Predicate<Internal.ItemStack>
        set maxStackSize(arg0: number)
        set burnTime(i: number)
        set maxDamage(arg0: number)
        get item(): Internal.Item
        get itemBuilder(): Internal.ItemBuilder
        /**
         * @deprecated
        */
        get maxDamage(): number
        get description(): net.minecraft.network.chat.Component
        get class(): typeof any
        get twoHanded(): boolean
        get renderPropertiesInternal(): any
        set itemBuilder(b: Internal.ItemBuilder_)
        get defaultProjectileRange(): number
        set craftingRemainingItemFTBL(arg0: Internal.Item_)
        set attackDamage(attackDamage: number)
        get edible(): boolean
        get enchantmentValue(): number
        set armorToughness(armorToughness: number)
        get id(): string
        get digSpeed(): number
        set tier(c: Internal.Consumer_<Internal.MutableToolTier>)
        set foodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set "foodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_)
        set digSpeed(speed: number)
        set attackSpeed(attackSpeed: number)
        /**
         * @deprecated
        */
        get maxStackSize(): number
        set "foodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set armorKnockbackResistance(knockbackResistance: number)
        set fireResistant(arg0: boolean)
        get eatingSound(): Internal.SoundEvent
        set nameKey(arg0: string)
        get idLocation(): ResourceLocation
        get mod(): string
        set armorProtection(armorProtection: number)
        /**
         * @deprecated
        */
        get craftingRemainingItem(): Internal.Item
        get typeItemStackKey(): Internal.ItemStackKey
        set foodProperties(arg0: Internal.FoodProperties_)
        set craftingRemainder(arg0: Internal.Item_)
    }
    type SlingshotItem_ = SlingshotItem;
    interface Tier {
        /**
         * @deprecated
        */
        abstract getLevel(): number;
        abstract getRepairIngredient(): Internal.Ingredient;
        abstract getAttackDamageBonus(): number;
        abstract getEnchantmentValue(): number;
        abstract getUses(): number;
        abstract getSpeed(): number;
        getTag(): Internal.TagKey<Internal.Block>;
        /**
         * @deprecated
        */
        get level(): number
        get repairIngredient(): Internal.Ingredient
        get attackDamageBonus(): number
        get enchantmentValue(): number
        get uses(): number
        get speed(): number
        get tag(): Internal.TagKey<Internal.Block>
    }
    type Tier_ = string | Tier;
    class SporeBlossomBlock extends Internal.Block {
        constructor(arg0: Internal.BlockBehaviour$Properties_)
        /**
         * @deprecated
        */
        getSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        /**
         * @deprecated
        */
        getVisualShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number, arg5: number): void;
        static popResource(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.ItemStack_): void;
        setRandomTickCallback(callback: Internal.Consumer_<any>): void;
        getBeaconColorMultiplier(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): number[];
        stepOn(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Entity_): void;
        getPistonPushReaction(arg0: Internal.BlockState_): Internal.PushReaction;
        getExpDrop(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.RandomSource_, arg3: BlockPos_, arg4: number, arg5: number): number;
        /**
         * @deprecated
        */
        getExplosionResistance(): number;
        asItem(): Internal.Item;
        shouldDisplayFluidOverlay(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        triggerEvent(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: number, arg4: number): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_, arg6: boolean): void;
        getTypeData(): Internal.CompoundTag;
        setFriction(arg0: number): void;
        rotate(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.Rotation_): Internal.BlockState;
        /**
         * @deprecated
        */
        getRenderShape(arg0: Internal.BlockState_): Internal.RenderShape;
        getSpeedFactor(): number;
        /**
         * @deprecated
        */
        getLightBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        isPossibleToRespawnInThis(arg0: Internal.BlockState_): boolean;
        playerDestroy(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.BlockEntity_, arg5: Internal.ItemStack_): void;
        playerWillDestroy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Player_): void;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        getCloneItemStack(arg0: Internal.BlockState_, arg1: Internal.HitResult_, arg2: Internal.BlockGetter_, arg3: BlockPos_, arg4: Internal.Player_): Internal.ItemStack;
        getClass(): typeof any;
        getMaxVerticalOffset(): number;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        getRenderPropertiesInternal(): any;
        onCaughtFire(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.LivingEntity_): void;
        /**
         * @deprecated
        */
        getDrops(arg0: Internal.BlockState_, arg1: Internal.LootParams$Builder_): Internal.List<Internal.ItemStack>;
        getStateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>;
        setBlockBuilder(b: Internal.BlockBuilder_): void;
        /**
         * @deprecated
        */
        entityInside(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): void;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientBlockExtensions>): void;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        getBlockStates(): Internal.List<Internal.BlockState>;
        setRequiresTool(v: boolean): void;
        addLandingEffects(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.LivingEntity_, arg5: number): boolean;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Block>;
        static popResourceFromFace(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Direction_, arg3: Internal.ItemStack_): void;
        handlePrecipitation(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Biome$Precipitation_): void;
        wait(arg0: number): void;
        /**
         * @deprecated
        */
        getFluidState(arg0: Internal.BlockState_): Internal.FluidState;
        getRespawnPosition(arg0: Internal.BlockState_, arg1: Internal.EntityType_<any>, arg2: Internal.LevelReader_, arg3: BlockPos_, arg4: number, arg5: Internal.LivingEntity_): Internal.Optional<Vec3d>;
        /**
         * @deprecated
        */
        tick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        isFertile(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        canBeHydrated(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.FluidState_, arg4: BlockPos_): boolean;
        getWeakChanges(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        neighborChanged(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Block_, arg4: BlockPos_, arg5: boolean): void;
        /**
         * @deprecated
        */
        getBlockSupportShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        /**
         * @deprecated
        */
        isCollisionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        getMenuProvider(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): Internal.MenuProvider;
        static byItem(arg0: Internal.Item_): Internal.Block;
        static updateFromNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_): Internal.BlockState;
        /**
         * @deprecated
        */
        updateIndirectNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: number, arg4: number): void;
        destroy(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): void;
        getFriction(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): number;
        canConnectRedstone(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        use(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: Internal.InteractionHand_, arg5: Internal.BlockHitResult_): Internal.InteractionResult;
        setLightEmission(v: number): void;
        setJumpFactor(arg0: number): void;
        isSlimeBlock(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getShadeBrightness(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        /**
         * @deprecated
        */
        getCollisionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        defaultBlockState(): Internal.BlockState;
        getStateForPlacement(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        getToolModifiedState(arg0: Internal.BlockState_, arg1: Internal.UseOnContext_, arg2: Internal.ToolAction_, arg3: boolean): Internal.BlockState;
        wait(): void;
        getMaxHorizontalOffset(): number;
        /**
         * @deprecated
        */
        getDestroyProgress(arg0: Internal.BlockState_, arg1: Internal.Player_, arg2: Internal.BlockGetter_, arg3: BlockPos_): number;
        makesOpenTrapdoorAboveClimbable(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.BlockState_): boolean;
        updateShape(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.BlockState_, arg3: Internal.LevelAccessor_, arg4: BlockPos_, arg5: BlockPos_): Internal.BlockState;
        isRandomlyTicking(arg0: Internal.BlockState_): boolean;
        static isShapeFullBlock(arg0: Internal.VoxelShape_): boolean;
        withPropertiesOf(arg0: Internal.BlockState_): Internal.BlockState;
        setIsRandomlyTicking(arg0: boolean): void;
        isScaffolding(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        hidesNeighborFace(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_, arg4: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        rotate(arg0: Internal.BlockState_, arg1: Internal.Rotation_): Internal.BlockState;
        defaultMapColor(): Internal.MapColor;
        getStateAtViewpoint(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Vec3d_): Internal.BlockState;
        setNameKey(arg0: string): void;
        static box(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.VoxelShape;
        getExplosionResistance(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): number;
        updateEntityAfterFallOn(arg0: Internal.BlockGetter_, arg1: Internal.Entity_): void;
        setBedOccupied(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.LivingEntity_, arg4: boolean): void;
        getLightEmission(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        arch$registryName(): ResourceLocation;
        getBlockBuilder(): Internal.BlockBuilder;
        getIdLocation(): ResourceLocation;
        canDropFromExplosion(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): boolean;
        addRunningEffects(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        isSignalSource(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        onProjectileHit(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockHitResult_, arg3: Internal.Projectile_): void;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): Internal.List<Internal.ItemStack>;
        /**
         * @deprecated
        */
        isOcclusionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        static getId(arg0: Internal.BlockState_): number;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.level.material.Fluid)"(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        canSustainPlant(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.IPlantable_): boolean;
        /**
         * @deprecated
        */
        isPathfindable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.PathComputationType_): boolean;
        setSoundType(arg0: SoundType_): void;
        /**
         * @deprecated
        */
        onRemove(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        equals(arg0: any): boolean;
        /**
         * @deprecated
        */
        getOcclusionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        isFlammable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        collisionExtendsVertically(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        getSoundType(arg0: Internal.BlockState_): SoundType;
        /**
         * @deprecated
        */
        randomTick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.BlockEntity_): void;
        static canSupportRigidBlock(arg0: Internal.BlockGetter_, arg1: BlockPos_): boolean;
        isStickyBlock(arg0: Internal.BlockState_): boolean;
        getDescriptionId(): string;
        handler$zmd000$onUse(state: Internal.BlockState_, world: Internal.Level_, pos: BlockPos_, player: Internal.Player_, hand: Internal.InteractionHand_, hit: Internal.BlockHitResult_, cir: Internal.CallbackInfoReturnable_<any>): void;
        onBlockExploded(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Explosion_): void;
        fallOn(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: BlockPos_, arg3: Internal.Entity_, arg4: number): void;
        canEntityDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        getJumpFactor(): number;
        isValidSpawn(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.SpawnPlacements$Type_, arg4: Internal.EntityType_<any>): boolean;
        getFlammability(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        static canSupportCenter(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        skipRendering(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        getDirectSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isLadder(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        onDestroyedByPlayer(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: boolean, arg5: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.item.context.BlockPlaceContext)"(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        getMapColor(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.MapColor_): Internal.MapColor;
        isPortalFrame(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        useShapeForLightOcclusion(arg0: Internal.BlockState_): boolean;
        getBedDirection(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): Internal.Direction;
        setSpeedFactor(arg0: number): void;
        setExplosionResistance(arg0: number): void;
        getEnchantPowerBonus(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): number;
        toString(): string;
        notifyAll(): void;
        getId(): string;
        getLootTable(): ResourceLocation;
        /**
         * @deprecated
        */
        getInteractionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        setPlacedBy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.LivingEntity_, arg4: Internal.ItemStack_): void;
        propagatesSkylightDown(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        onPlace(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        getFriction(): number;
        /**
         * @deprecated
        */
        hasAnalogOutputSignal(arg0: Internal.BlockState_): boolean;
        getSoundType(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): SoundType;
        /**
         * @deprecated
        */
        getAnalogOutputSignal(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): number;
        supportsExternalFaceHiding(arg0: Internal.BlockState_): boolean;
        notify(): void;
        onBlockStateChange(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_): void;
        static isFaceFull(arg0: Internal.VoxelShape_, arg1: Internal.Direction_): boolean;
        isFireSource(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        canSurvive(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): void;
        getAppearance(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.BlockState_, arg5: BlockPos_): Internal.BlockState;
        setDestroySpeed(v: number): void;
        canHarvestBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        shouldCheckWeakPower(arg0: Internal.BlockState_, arg1: Internal.SignalGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        arch$holder(): Internal.Holder<Internal.Block>;
        /**
         * @deprecated
        */
        getCloneItemStack(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        hasDynamicShape(): boolean;
        /**
         * @deprecated
        */
        getSeed(arg0: Internal.BlockState_, arg1: BlockPos_): number;
        defaultDestroyTime(): number;
        getBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        dropFromExplosion(arg0: Internal.Explosion_): boolean;
        onNeighborChange(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): void;
        static isExceptionForConnection(arg0: Internal.BlockState_): boolean;
        onTreeGrow(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.BiConsumer_<BlockPos, Internal.BlockState>, arg3: Internal.RandomSource_, arg4: BlockPos_, arg5: Internal.TreeConfiguration_): boolean;
        wait(arg0: number, arg1: number): void;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.BlockGetter_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        mirror(arg0: Internal.BlockState_, arg1: Internal.Mirror_): Internal.BlockState;
        isBed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        wasExploded(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Explosion_): void;
        getName(): Internal.MutableComponent;
        canStickTo(arg0: Internal.BlockState_, arg1: Internal.BlockState_): boolean;
        animateTick(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        getFireSpreadSpeed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        getMod(): string;
        getAdjacentBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_, arg4: Internal.BlockPathTypes_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        isConduitFrame(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): boolean;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number): void;
        /**
         * @deprecated
        */
        attack(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): void;
        getShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static stateById(arg0: number): Internal.BlockState;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        popExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: number): void;
        static pushEntitiesUp(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_): Internal.BlockState;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_): Internal.List<Internal.ItemStack>;
        isBurning(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setHasCollision(arg0: boolean): void;
        static shouldRenderFace(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: BlockPos_): boolean;
        /**
         * @deprecated
        */
        spawnAfterBreak(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.ItemStack_, arg4: boolean): void;
        set randomTickCallback(callback: Internal.Consumer_<any>)
        /**
         * @deprecated
        */
        get explosionResistance(): number
        get typeData(): Internal.CompoundTag
        set friction(arg0: number)
        get speedFactor(): number
        get class(): typeof any
        get maxVerticalOffset(): number
        get renderPropertiesInternal(): any
        get stateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>
        set blockBuilder(b: Internal.BlockBuilder_)
        get blockStates(): Internal.List<Internal.BlockState>
        set requiresTool(v: boolean)
        set lightEmission(v: number)
        set jumpFactor(arg0: number)
        get maxHorizontalOffset(): number
        set isRandomlyTicking(arg0: boolean)
        set nameKey(arg0: string)
        get blockBuilder(): Internal.BlockBuilder
        get idLocation(): ResourceLocation
        set soundType(arg0: SoundType_)
        get descriptionId(): string
        get jumpFactor(): number
        set speedFactor(arg0: number)
        set explosionResistance(arg0: number)
        get id(): string
        get lootTable(): ResourceLocation
        get friction(): number
        set destroySpeed(v: number)
        get name(): Internal.MutableComponent
        get mod(): string
        set hasCollision(arg0: boolean)
    }
    type SporeBlossomBlock_ = SporeBlossomBlock;
    class PostPass implements Internal.AutoCloseable {
        constructor(arg0: Internal.ResourceManager_, arg1: string, arg2: Internal.RenderTarget_, arg3: Internal.RenderTarget_)
        getClass(): typeof any;
        setOrthoMatrix(arg0: Matrix4f_): void;
        process(arg0: number): void;
        toString(): string;
        notifyAll(): void;
        addAuxAsset(arg0: string, arg1: Internal.IntSupplier_, arg2: number, arg3: number): void;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        hashCode(): number;
        wait(): void;
        close(): void;
        getName(): string;
        getEffect(): Internal.EffectInstance;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        get class(): typeof any
        set orthoMatrix(arg0: Matrix4f_)
        get name(): string
        get effect(): Internal.EffectInstance
        readonly outTarget: Internal.RenderTarget;
        readonly inTarget: Internal.RenderTarget;
    }
    type PostPass_ = PostPass;
    class TimeZoneFormat extends Internal.UFormat implements Internal.Freezable<Internal.TimeZoneFormat>, Internal.Serializable {
        format(arg0: any, arg1: Internal.StringBuffer_, arg2: Internal.FieldPosition_): Internal.StringBuffer;
        setGMTZeroFormat(arg0: string): this;
        parseOffsetShortLocalizedGMT(arg0: string, arg1: Internal.ParsePosition_): number;
        parse(arg0: Internal.TimeZoneFormat$Style_, arg1: string, arg2: Internal.ParsePosition_, arg3: Internal.EnumSet_<Internal.TimeZoneFormat$ParseOption>, arg4: Internal.Output_<Internal.TimeZoneFormat$TimeType>): com.ibm.icu.util.TimeZone;
        setTimeZoneNames(arg0: Internal.TimeZoneNames_): this;
        notify(): void;
        isFrozen(): boolean;
        cloneAsThawed(): any;
        setGMTOffsetPattern(arg0: Internal.TimeZoneFormat$GMTOffsetPatternType_, arg1: string): this;
        "format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)"(arg0: any, arg1: Internal.StringBuffer_, arg2: Internal.FieldPosition_): Internal.StringBuffer;
        getGMTOffsetPattern(arg0: Internal.TimeZoneFormat$GMTOffsetPatternType_): string;
        format(arg0: Internal.TimeZoneFormat$Style_, arg1: com.ibm.icu.util.TimeZone_, arg2: number): string;
        formatToCharacterIterator(arg0: any): Internal.AttributedCharacterIterator;
        getGMTPattern(): string;
        static getInstance(arg0: Internal.Locale_): Internal.TimeZoneFormat;
        getGMTOffsetDigits(): string;
        static "getInstance(com.ibm.icu.util.ULocale)"(arg0: Internal.ULocale_): Internal.TimeZoneFormat;
        format(arg0: Internal.TimeZoneFormat$Style_, arg1: com.ibm.icu.util.TimeZone_, arg2: number, arg3: Internal.Output_<Internal.TimeZoneFormat$TimeType>): string;
        getDefaultParseOptions(): Internal.EnumSet<Internal.TimeZoneFormat$ParseOption>;
        parse(arg0: string): com.ibm.icu.util.TimeZone;
        parse(arg0: string, arg1: Internal.ParsePosition_): com.ibm.icu.util.TimeZone;
        parseOffsetLocalizedGMT(arg0: string, arg1: Internal.ParsePosition_): number;
        "format(com.ibm.icu.text.TimeZoneFormat$Style,com.ibm.icu.util.TimeZone,long)"(arg0: Internal.TimeZoneFormat$Style_, arg1: com.ibm.icu.util.TimeZone_, arg2: number): string;
        formatOffsetShortLocalizedGMT(arg0: number): string;
        formatOffsetISO8601Extended(arg0: number, arg1: boolean, arg2: boolean, arg3: boolean): string;
        wait(): void;
        parse(arg0: Internal.TimeZoneFormat$Style_, arg1: string, arg2: Internal.ParsePosition_, arg3: Internal.Output_<Internal.TimeZoneFormat$TimeType>): com.ibm.icu.util.TimeZone;
        setDefaultParseOptions(arg0: Internal.EnumSet_<Internal.TimeZoneFormat$ParseOption>): this;
        clone(): any;
        getClass(): typeof any;
        setGMTPattern(arg0: string): this;
        parseObject(arg0: string): any;
        static "getInstance(java.util.Locale)"(arg0: Internal.Locale_): Internal.TimeZoneFormat;
        parseObject(arg0: string, arg1: Internal.ParsePosition_): any;
        wait(arg0: number, arg1: number): void;
        freeze(): any;
        formatOffsetLocalizedGMT(arg0: number): string;
        setGMTOffsetDigits(arg0: string): this;
        toString(): string;
        notifyAll(): void;
        parseOffsetISO8601(arg0: string, arg1: Internal.ParsePosition_): number;
        format(arg0: any): string;
        getTimeZoneNames(): Internal.TimeZoneNames;
        hashCode(): number;
        static getInstance(arg0: Internal.ULocale_): Internal.TimeZoneFormat;
        getLocale(arg0: Internal.ULocale$Type_): Internal.ULocale;
        wait(arg0: number): void;
        formatOffsetISO8601Basic(arg0: number, arg1: boolean, arg2: boolean, arg3: boolean): string;
        equals(arg0: any): boolean;
        getGMTZeroFormat(): string;
        set GMTZeroFormat(arg0: string)
        set timeZoneNames(arg0: Internal.TimeZoneNames_)
        get frozen(): boolean
        get GMTPattern(): string
        get GMTOffsetDigits(): string
        get defaultParseOptions(): Internal.EnumSet<Internal.TimeZoneFormat$ParseOption>
        set defaultParseOptions(arg0: Internal.EnumSet_<Internal.TimeZoneFormat$ParseOption>)
        get class(): typeof any
        set GMTPattern(arg0: string)
        set GMTOffsetDigits(arg0: string)
        get timeZoneNames(): Internal.TimeZoneNames
        get GMTZeroFormat(): string
    }
    type TimeZoneFormat_ = TimeZoneFormat;
    interface AnimationController$SoundKeyframeHandler <A extends Internal.GeoAnimatable> {
        abstract handle(arg0: Internal.SoundKeyframeEvent_<A>): void;
        (arg0: Internal.SoundKeyframeEvent<A>): void;
    }
    type AnimationController$SoundKeyframeHandler_<A extends Internal.GeoAnimatable> = AnimationController$SoundKeyframeHandler<A> | ((arg0: Internal.SoundKeyframeEvent<A>)=> void);
    class ClientboundTagQueryPacket implements Internal.Packet<Internal.ClientGamePacketListener> {
        constructor(arg0: Internal.FriendlyByteBuf_)
        constructor(arg0: number, arg1: Internal.CompoundTag_)
        handle(arg0: Internal.PacketListener_): void;
        getClass(): typeof any;
        write(arg0: Internal.FriendlyByteBuf_): void;
        toString(): string;
        notifyAll(): void;
        getTransactionId(): number;
        notify(): void;
        isSkippable(): boolean;
        wait(arg0: number, arg1: number): void;
        hashCode(): number;
        wait(): void;
        handle(arg0: Internal.ClientGamePacketListener_): void;
        wait(arg0: number): void;
        "handle(net.minecraft.network.protocol.game.ClientGamePacketListener)"(arg0: Internal.ClientGamePacketListener_): void;
        getTag(): Internal.CompoundTag;
        equals(arg0: any): boolean;
        "handle(net.minecraft.network.PacketListener)"(arg0: Internal.PacketListener_): void;
        get class(): typeof any
        get transactionId(): number
        get skippable(): boolean
        get tag(): Internal.CompoundTag
    }
    type ClientboundTagQueryPacket_ = ClientboundTagQueryPacket;
    interface BufferedImageOp {
        abstract createCompatibleDestImage(arg0: Internal.BufferedImage_, arg1: Internal.ColorModel_): Internal.BufferedImage;
        abstract filter(arg0: Internal.BufferedImage_, arg1: Internal.BufferedImage_): Internal.BufferedImage;
        abstract getBounds2D(arg0: Internal.BufferedImage_): Internal.Rectangle2D;
        abstract getRenderingHints(): Internal.RenderingHints;
        abstract getPoint2D(arg0: Internal.Point2D_, arg1: Internal.Point2D_): Internal.Point2D;
        get renderingHints(): Internal.RenderingHints
    }
    type BufferedImageOp_ = BufferedImageOp;
    class ContextUtils$EntityBlockPosLevelContext {
        constructor(pos: BlockPos_, levelReader: Internal.LevelReader_, entity: Internal.LivingEntity_)
        getClass(): typeof any;
        hashCode(): number;
        toString(): string;
        wait(): void;
        notifyAll(): void;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        get class(): typeof any
        /**
         * The block position
        */
        readonly pos: BlockPos;
        /**
         * The living entity
        */
        readonly entity: Internal.LivingEntity;
        /**
         * The level reader
        */
        readonly levelReader: Internal.LevelReader;
    }
    type ContextUtils$EntityBlockPosLevelContext_ = ContextUtils$EntityBlockPosLevelContext;
    class HitResult$Type extends Internal.Enum<Internal.HitResult$Type> {
        static valueOf<T extends Internal.Enum<T>>(arg0: T, arg1: string): T;
        getDeclaringClass(): typeof Internal.HitResult$Type;
        getClass(): typeof any;
        toString(): string;
        "compareTo(net.minecraft.world.phys.HitResult$Type)"(arg0: Internal.HitResult$Type_): number;
        notifyAll(): void;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        compareTo(arg0: any): number;
        name(): string;
        hashCode(): number;
        static valueOf(arg0: string): Internal.HitResult$Type;
        describeConstable(): Internal.Optional<Internal.Enum$EnumDesc<Internal.HitResult$Type>>;
        ordinal(): number;
        wait(): void;
        wait(arg0: number): void;
        static values(): Internal.HitResult$Type[];
        compareTo(arg0: Internal.HitResult$Type_): number;
        "compareTo(java.lang.Object)"(arg0: any): number;
        equals(arg0: any): boolean;
        get declaringClass(): typeof Internal.HitResult$Type
        get class(): typeof any
        static readonly MISS: (Internal.HitResult$Type) & (Internal.HitResult$Type);
        static readonly ENTITY: (Internal.HitResult$Type) & (Internal.HitResult$Type);
        static readonly BLOCK: (Internal.HitResult$Type) & (Internal.HitResult$Type);
    }
    type HitResult$Type_ = "miss" | "block" | HitResult$Type | "entity";
    class SynchedEntityData$DataValue <T> extends Internal.Record {
        constructor(id: number, serializer: Internal.EntityDataSerializer_<T>, value: T)
        getClass(): typeof any;
        write(arg0: Internal.FriendlyByteBuf_): void;
        toString(): string;
        notifyAll(): void;
        value(): T;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        hashCode(): number;
        id(): number;
        wait(): void;
        serializer(): Internal.EntityDataSerializer<T>;
        wait(arg0: number): void;
        static create<T>(arg0: Internal.EntityDataAccessor_<T>, arg1: T): Internal.SynchedEntityData$DataValue<T>;
        static read(arg0: Internal.FriendlyByteBuf_, arg1: number): Internal.SynchedEntityData$DataValue<any>;
        equals(arg0: any): boolean;
        get class(): typeof any
    }
    type SynchedEntityData$DataValue_<T> = SynchedEntityData$DataValue<T>;
    class DemonArmorItem extends Internal.ArmorItem implements Internal.ITieredItem<Internal.DemonArmorItem>, Internal.IFactionSpecific, Internal.IBrokenArmorReplaceable<Internal.DemonArmorItem>, Internal.GeoItem, Internal.ISetItem {
        constructor(arg0: Internal.ArmorMaterial_, arg1: Internal.ArmorItem$Type_, arg2: Internal.Item$Properties_)
        getMaxIre(): number;
        getDrinkingSound(): Internal.SoundEvent;
        getShareTag(arg0: Internal.ItemStack_): Internal.CompoundTag;
        isEnderMask(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.EnderMan_): boolean;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        itemsForSetBonus(): number;
        getDestroySpeed(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): number;
        moonlight$addAdditionalBehavior(placementOverride: Internal.AdditionalItemPlacement_): void;
        getTick(arg0: any): number;
        isFireResistant(): boolean;
        getEnchantmentValue(arg0: Internal.ItemStack_): number;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        getFoodProperties(): Internal.FoodProperties;
        isPerspectiveAware(): boolean;
        moonlight$getClientAnimationExtension(): any;
        isBookEnchantable(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        asItem(): Internal.Item;
        onDroppedByPlayer(arg0: Internal.ItemStack_, arg1: Internal.Player_): boolean;
        getTypeData(): Internal.CompoundTag;
        getDefaultInstance(): Internal.ItemStack;
        canContinueUsing(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        setMaxStackSize(arg0: number): void;
        getBarWidth(arg0: Internal.ItemStack_): number;
        setMaxDamage(arg0: number): void;
        getItem(): Internal.Item;
        getBarColor(arg0: Internal.ItemStack_): number;
        setAnimData<D>(arg0: Internal.Entity_, arg1: number, arg2: Internal.SerializableDataTicket_<D>, arg3: D): void;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        onLeftClickEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): boolean;
        "triggerAnim(net.minecraft.world.entity.Entity,long,java.lang.String,java.lang.String)"<D>(arg0: Internal.Entity_, arg1: number, arg2: string, arg3: string): void;
        removeAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_): void;
        asIngredient(): Internal.Ingredient;
        /**
         * @deprecated
        */
        hasCraftingRemainingItem(): boolean;
        getClass(): typeof any;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        static byId(arg0: number): Internal.Item;
        getRenderPropertiesInternal(): any;
        static get(arg0: Internal.ItemStack_): Internal.Equipable;
        interactLivingEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.LivingEntity_, arg3: Internal.InteractionHand_): Internal.InteractionResult;
        kjs$getAttributeMap(): Internal.Multimap<any, any>;
        moonlight$getAdditionalBehavior(): Internal.AdditionalItemPlacement;
        moonlight$setClientAnimationExtension(obj: any): void;
        getDefense(): number;
        getCraftingRemainingItem(arg0: Internal.ItemStack_): Internal.ItemStack;
        onArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        damageItem<T extends Internal.LivingEntity>(arg0: Internal.ItemStack_, arg1: number, arg2: T, arg3: Internal.Consumer_<T>): number;
        setCraftingRemainingItemFTBL(arg0: Internal.Item_): void;
        attachCapability(capabilityBuilder: Internal.CapabilityBuilder_<any, any, any>): void;
        isEdible(): boolean;
        getTooltipImage(arg0: Internal.ItemStack_): Internal.Optional<Internal.TooltipComponent>;
        getAttributes(attribute: Internal.Attribute_): Internal.List<Internal.AttributeModifier>;
        use(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.InteractionHand_): Internal.InteractionResultHolder<Internal.ItemStack>;
        getTier(arg0: Internal.Level_, arg1: Internal.ItemStack_): number;
        getMinIre(): number;
        getAllEnchantments(arg0: Internal.ItemStack_): Internal.Map<Internal.Enchantment, number>;
        wait(arg0: number): void;
        getValidSetSlots(): Internal.EquipmentSlot[];
        isFoil(arg0: Internal.ItemStack_): boolean;
        isDamageable(arg0: Internal.ItemStack_): boolean;
        useOnRelease(arg0: Internal.ItemStack_): boolean;
        canAttackBlock(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        static dispenseArmor(arg0: Internal.BlockSource_, arg1: Internal.ItemStack_): boolean;
        getMaterial(): Internal.ArmorMaterial;
        canGrindstoneRepair(arg0: Internal.ItemStack_): boolean;
        setDigSpeed(speed: number): void;
        getDescriptionId(arg0: Internal.ItemStack_): string;
        releaseUsing(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_, arg3: number): void;
        setAttackSpeed(attackSpeed: number): void;
        triggerAnim<D>(arg0: Internal.Entity_, arg1: number, arg2: string, arg3: string): void;
        getUseDuration(arg0: Internal.ItemStack_): number;
        onStopUsing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): void;
        isNotReplaceableByPickAction(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: number): boolean;
        triggerAnim<D>(arg0: number, arg1: string, arg2: string, arg3: Internal.PacketDistributor$PacketTarget_): void;
        animatableCacheOverride(): Internal.AnimatableInstanceCache;
        resolveTier(arg0: Internal.Level_, arg1: Internal.ItemStack_): number;
        setCachedTier(arg0: number): void;
        isDamaged(arg0: Internal.ItemStack_): boolean;
        getFaction(): Internal.IFaction;
        getCachedTier(): number;
        handler$dpg000$initializeClient(consumer: Internal.Consumer_<any>, ci: Internal.CallbackInfo_): void;
        canFitInsideContainerItems(): boolean;
        wait(): void;
        "setFoodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        setArmorKnockbackResistance(knockbackResistance: number): void;
        static registerSyncedAnimatable(arg0: Internal.GeoAnimatable_): void;
        setFireResistant(arg0: boolean): void;
        hasCustomEntity(arg0: Internal.ItemStack_): boolean;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientItemExtensions>): void;
        getBoneResetTime(): number;
        mineBlock(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.BlockState_, arg3: BlockPos_, arg4: Internal.LivingEntity_): boolean;
        setNameKey(arg0: string): void;
        readShareTag(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): void;
        getEquipmentSlot(arg0: Internal.ItemStack_): Internal.EquipmentSlot;
        getLightColor(player: Internal.Player_, stack: Internal.ItemStack_): Vec3f;
        getName(arg0: Internal.ItemStack_): net.minecraft.network.chat.Component;
        getToughness(): number;
        getDefaultAttributeModifiers(arg0: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        arch$registryName(): ResourceLocation;
        getIdLocation(): ResourceLocation;
        getAttributeModifiers(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        canElytraFly(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        createEntity(arg0: Internal.Level_, arg1: Internal.Entity_, arg2: Internal.ItemStack_): Internal.Entity;
        handlePlayerMeteorJumpImpact(arg0: Internal.Player_, arg1: number): boolean;
        getEntityLifespan(arg0: Internal.ItemStack_, arg1: Internal.Level_): number;
        syncAnimData<D>(arg0: number, arg1: Internal.SerializableDataTicket_<D>, arg2: D, arg3: Internal.PacketDistributor$PacketTarget_): void;
        inventoryTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Entity_, arg3: number, arg4: boolean): void;
        setDamage(arg0: Internal.ItemStack_, arg1: number): void;
        static getOrAssignId(arg0: Internal.ItemStack_, arg1: Internal.ServerLevel_): number;
        hasCraftingRemainingItem(arg0: Internal.ItemStack_): boolean;
        shouldOverrideMultiplayerNbt(): boolean;
        static getId(arg0: Internal.Item_): number;
        overrideOtherStackedOnMe(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_, arg5: Internal.SlotAccess_): boolean;
        setFoodProperties(arg0: Internal.FoodProperties_): void;
        setCraftingRemainder(arg0: Internal.Item_): void;
        swapWithEquipmentSlot(arg0: Internal.Item_, arg1: Internal.Level_, arg2: Internal.Player_, arg3: Internal.InteractionHand_): Internal.InteractionResultHolder<Internal.ItemStack>;
        addAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_, name: string, d: number, operation: Internal.AttributeModifier$Operation_): void;
        static "getId(net.minecraft.world.item.Item)"(arg0: Internal.Item_): number;
        registerControllers(arg0: Internal.AnimatableManager$ControllerRegistrar_): void;
        getSetIdentifier(): ResourceLocation;
        equals(arg0: any): boolean;
        "triggerAnim(long,java.lang.String,java.lang.String,net.minecraftforge.network.PacketDistributor$PacketTarget)"<D>(arg0: number, arg1: string, arg2: string, arg3: Internal.PacketDistributor$PacketTarget_): void;
        setRarity(arg0: Internal.Rarity_): void;
        getType(): Internal.ArmorItem$Type;
        getBurnTime(arg0: Internal.ItemStack_, arg1: Internal.RecipeType_<any>): number;
        usedByPlayer(arg0: Internal.Player_): void;
        /**
         * @deprecated
        */
        onDestroyed(arg0: Internal.ItemEntity_): void;
        onItemUseFirst(arg0: Internal.ItemStack_, arg1: Internal.UseOnContext_): Internal.InteractionResult;
        onCraftedBy(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        isComplex(): boolean;
        isCorrectToolForDrops(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): boolean;
        isPiglinCurrency(arg0: Internal.ItemStack_): boolean;
        canDisableShield(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.LivingEntity_, arg3: Internal.LivingEntity_): boolean;
        onUseTick(arg0: Internal.Level_, arg1: Internal.LivingEntity_, arg2: Internal.ItemStack_, arg3: number): void;
        canBeHurtBy(arg0: Internal.DamageSource_): boolean;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): boolean;
        getDescriptionId(): string;
        getUseAnimation(arg0: Internal.ItemStack_): Internal.UseAnim;
        isSetEquipped(arg0: Internal.LivingEntity_): boolean;
        applySetBonus(arg0: Internal.LivingEntity_, ...arg1: Internal.EquipmentSlot_[]): void;
        isValidRepairItem(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        removeSetBonus(arg0: Internal.LivingEntity_, ...arg1: Internal.EquipmentSlot_[]): void;
        getXpRepairRatio(arg0: Internal.ItemStack_): number;
        getCreativeTab(): string;
        initCapabilities(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): Internal.ICapabilityProvider;
        getDefaultTooltipHideFlags(arg0: Internal.ItemStack_): number;
        getCreatorModId(arg0: Internal.ItemStack_): string;
        setBurnTime(i: number): void;
        getFoodProperties(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): Internal.FoodProperties;
        onDestroyed(arg0: Internal.ItemEntity_, arg1: Internal.DamageSource_): void;
        getItemBuilder(): Internal.ItemBuilder;
        makesPiglinsNeutral(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxDamage(): number;
        getDescription(): net.minecraft.network.chat.Component;
        canPerformAction(arg0: Internal.ItemStack_, arg1: Internal.ToolAction_): boolean;
        onEntityItemUpdate(arg0: Internal.ItemStack_, arg1: Internal.ItemEntity_): boolean;
        kjs$getMutableAttributeMap(): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        useOn(arg0: Internal.UseOnContext_): Internal.InteractionResult;
        getRarity(arg0: Internal.ItemStack_): Internal.Rarity;
        setItemBuilder(b: Internal.ItemBuilder_): void;
        getAnimatableInstanceCache(): Internal.AnimatableInstanceCache;
        shouldCauseBlockBreakReset(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getAnimData<D>(arg0: number, arg1: Internal.SerializableDataTicket_<D>): D;
        shouldPlayAnimsWhileGamePaused(): boolean;
        setAttackDamage(attackDamage: number): void;
        arch$holder(): Internal.Holder<Internal.Item>;
        getArmorTexture(arg0: Internal.ItemStack_, arg1: Internal.Entity_, arg2: Internal.EquipmentSlot_, arg3: string): string;
        getEquipmentSlot(): Internal.EquipmentSlot;
        static getId(arg0: Internal.ItemStack_): number;
        toString(): string;
        getEnchantmentValue(): number;
        setArmorToughness(armorToughness: number): void;
        notifyAll(): void;
        getId(): string;
        isEnchantable(arg0: Internal.ItemStack_): boolean;
        static "getId(net.minecraft.world.item.ItemStack)"(arg0: Internal.ItemStack_): number;
        getSweepHitBox(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): Internal.AABB;
        getEnchantmentLevel(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): number;
        addSetTooltip(arg0: Internal.List_<net.minecraft.network.chat.Component>): void;
        getDigSpeed(): number;
        setTier(c: Internal.Consumer_<Internal.MutableToolTier>): void;
        overrideStackedOnOther(arg0: Internal.ItemStack_, arg1: Internal.Slot_, arg2: Internal.ClickAction_, arg3: Internal.Player_): boolean;
        setFoodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        onBlockStartBreak(arg0: Internal.ItemStack_, arg1: BlockPos_, arg2: Internal.Player_): boolean;
        elytraFlightTick(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): boolean;
        getMaxDamage(arg0: Internal.ItemStack_): number;
        "setFoodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_): void;
        isRepairable(arg0: Internal.ItemStack_): boolean;
        handlePlayerJump(arg0: Internal.Player_): boolean;
        notify(): void;
        isBarVisible(arg0: Internal.ItemStack_): boolean;
        canWalkOnPowderedSnow(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        getEquipSound(): Internal.SoundEvent;
        addDelayedRunSpeed(arg0: string, arg1: Internal.Player_): void;
        /**
         * @deprecated
        */
        getMaxStackSize(): number;
        /**
         * @deprecated
        */
        static byBlock(arg0: Internal.Block_): Internal.Item;
        getHighlightTip(arg0: Internal.ItemStack_, arg1: net.minecraft.network.chat.Component_): net.minecraft.network.chat.Component;
        isCorrectToolForDrops(arg0: Internal.BlockState_): boolean;
        verifyTagAfterLoad(arg0: Internal.CompoundTag_): void;
        canEquip(arg0: Internal.ItemStack_, arg1: Internal.EquipmentSlot_, arg2: Internal.Entity_): boolean;
        finishUsingItem(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_): Internal.ItemStack;
        onInventoryTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_, arg3: number, arg4: number): void;
        getEatingSound(): Internal.SoundEvent;
        canBeDepleted(): boolean;
        getDamage(arg0: Internal.ItemStack_): number;
        wait(arg0: number, arg1: number): void;
        getMod(): string;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Item>;
        setArmorProtection(armorProtection: number): void;
        getLightEmission(player: Internal.Player_, stack: Internal.ItemStack_): number;
        onEntitySwing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        hurtEnemy(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getCraftingRemainingItem(): Internal.Item;
        getTypeItemStackKey(): Internal.ItemStackKey;
        getMaxStackSize(arg0: Internal.ItemStack_): number;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        doesSneakBypassUse(arg0: Internal.ItemStack_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        kjs$setAttributeMap(arg0: Internal.Multimap_<any, any>): void;
        shouldCauseReequipAnimation(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: boolean): boolean;
        onHorseArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Mob_): void;
        get maxIre(): number
        get drinkingSound(): Internal.SoundEvent
        get fireResistant(): boolean
        /**
         * @deprecated
        */
        get foodProperties(): Internal.FoodProperties
        get perspectiveAware(): boolean
        get typeData(): Internal.CompoundTag
        get defaultInstance(): Internal.ItemStack
        set maxStackSize(arg0: number)
        set maxDamage(arg0: number)
        get item(): Internal.Item
        get class(): typeof any
        get renderPropertiesInternal(): any
        get defense(): number
        set craftingRemainingItemFTBL(arg0: Internal.Item_)
        get edible(): boolean
        get minIre(): number
        get validSetSlots(): Internal.EquipmentSlot[]
        get material(): Internal.ArmorMaterial
        set digSpeed(speed: number)
        set attackSpeed(attackSpeed: number)
        set cachedTier(arg0: number)
        get faction(): Internal.IFaction
        get cachedTier(): number
        set "foodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set armorKnockbackResistance(knockbackResistance: number)
        set fireResistant(arg0: boolean)
        get boneResetTime(): number
        set nameKey(arg0: string)
        get toughness(): number
        get idLocation(): ResourceLocation
        set foodProperties(arg0: Internal.FoodProperties_)
        set craftingRemainder(arg0: Internal.Item_)
        get setIdentifier(): ResourceLocation
        set rarity(arg0: Internal.Rarity_)
        get type(): Internal.ArmorItem$Type
        get complex(): boolean
        get descriptionId(): string
        get creativeTab(): string
        set burnTime(i: number)
        get itemBuilder(): Internal.ItemBuilder
        /**
         * @deprecated
        */
        get maxDamage(): number
        get description(): net.minecraft.network.chat.Component
        set itemBuilder(b: Internal.ItemBuilder_)
        get animatableInstanceCache(): Internal.AnimatableInstanceCache
        set attackDamage(attackDamage: number)
        get equipmentSlot(): Internal.EquipmentSlot
        get enchantmentValue(): number
        set armorToughness(armorToughness: number)
        get id(): string
        get digSpeed(): number
        set tier(c: Internal.Consumer_<Internal.MutableToolTier>)
        set foodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set "foodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_)
        get equipSound(): Internal.SoundEvent
        /**
         * @deprecated
        */
        get maxStackSize(): number
        get eatingSound(): Internal.SoundEvent
        get mod(): string
        set armorProtection(armorProtection: number)
        /**
         * @deprecated
        */
        get craftingRemainingItem(): Internal.Item
        get typeItemStackKey(): Internal.ItemStackKey
        static readonly runSpeed_1: (Internal.AttributeModifier) & (Internal.AttributeModifier);
        static readonly runSpeed_2: (Internal.AttributeModifier) & (Internal.AttributeModifier);
        static readonly runSpeed_3: (Internal.AttributeModifier) & (Internal.AttributeModifier);
        static readonly demon_armor_run_speed_1: ("demon_armor_set_bonus_1") & (string);
        static readonly demon_armor_meteor_jumping_key: ("demon_armor_meteor_jumping") & (string);
        static readonly demon_armor_set_bonus_key: ("demon_armor_set_bonus") & (string);
        static readonly demon_armor_run_speed_2: ("demon_armor_set_bonus_2") & (string);
        static readonly demon_armor_run_speed_3: ("demon_armor_set_bonus_3") & (string);
    }
    type DemonArmorItem_ = DemonArmorItem;
    class BaseLivingEntityBuilder$SoundKeyFrameEventJS <E extends Internal.LivingEntity & Internal.IAnimatableJS> {
        constructor(parent: Internal.SoundKeyframeEvent_<E>)
        getClass(): typeof any;
        hashCode(): number;
        toString(): string;
        wait(): void;
        notifyAll(): void;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        get class(): typeof any
        /**
         * The name of the sound to play
        */
        readonly sound: string;
    }
    type BaseLivingEntityBuilder$SoundKeyFrameEventJS_<E extends Internal.LivingEntity & Internal.IAnimatableJS> = BaseLivingEntityBuilder$SoundKeyFrameEventJS<E>;
    abstract class ImmutableList <E> extends Internal.ImmutableCollection<E> implements Internal.RandomAccess, Internal.List<E> {
        static builder<E>(): Internal.ImmutableList$Builder<E>;
        static copyOf<E>(arg0: E[]): Internal.ImmutableList<E>;
        reverse(): this;
        static sortedCopyOf<E>(arg0: Internal.Comparator_<E>, arg1: Internal.Iterable_<E>): Internal.ImmutableList<E>;
        static copyOf<E>(arg0: Internal.Iterable_<E>): Internal.ImmutableList<E>;
        /**
         * @deprecated
        */
        sort(arg0: Internal.Comparator_<E>): void;
        notify(): void;
        abstract retainAll(arg0: Internal.Collection_<any>): boolean;
        /**
         * @deprecated
        */
        "remove(int)"(arg0: number): E;
        toArray<T>(arg0: Internal.IntFunction_<T[]>): T[];
        /**
         * @deprecated
        */
        addAll(arg0: number, arg1: Internal.Collection_<E>): boolean;
        listIterator(): Internal.ListIterator<any>;
        abstract addAll(arg0: Internal.Collection_<E>): boolean;
        subList(arg0: number, arg1: number): this;
        static of<E>(arg0: E, arg1: E, arg2: E, arg3: E): Internal.ImmutableList<E>;
        indexOf(arg0: any): number;
        /**
         * @deprecated
        */
        add(arg0: number, arg1: E): void;
        forEach(arg0: Internal.Consumer_<E>): void;
        static of<E>(arg0: E, arg1: E, arg2: E): Internal.ImmutableList<E>;
        abstract toArray<T>(arg0: T[]): T[];
        static "of(java.lang.Object)"<E>(arg0: E): Internal.ImmutableList<E>;
        abstract remove(arg0: any): boolean;
        abstract "remove(java.lang.Object)"(arg0: any): boolean;
        static of<E>(arg0: E, arg1: E, arg2: E, arg3: E, arg4: E, arg5: E, arg6: E, arg7: E): Internal.ImmutableList<E>;
        stream(): Internal.Stream<E>;
        abstract removeAll(arg0: Internal.Collection_<any>): boolean;
        wait(): void;
        /**
         * @deprecated
        */
        removeIf(arg0: Internal.Predicate_<E>): boolean;
        static "copyOf(java.lang.Iterable)"<E>(arg0: Internal.Iterable_<E>): Internal.ImmutableList<E>;
        static "of(java.lang.Object[])"<E>(...arg0: E[]): Internal.List<E>;
        iterator(): Internal.UnmodifiableIterator<E>;
        lastIndexOf(arg0: any): number;
        static of<E>(arg0: E, arg1: E): Internal.ImmutableList<E>;
        getClass(): typeof any;
        abstract get(arg0: number): E;
        static of<E>(arg0: E, arg1: E, arg2: E, arg3: E, arg4: E, arg5: E, arg6: E, arg7: E, arg8: E): Internal.ImmutableList<E>;
        static "copyOf(java.util.Collection)"<E>(arg0: Internal.Collection_<E>): Internal.ImmutableList<E>;
        abstract add(arg0: E): boolean;
        static copyOf<E>(arg0: Internal.Collection_<E>): Internal.ImmutableList<E>;
        static of<E>(arg0: E, arg1: E, arg2: E, arg3: E, arg4: E, arg5: E): Internal.ImmutableList<E>;
        parallelStream(): Internal.Stream<E>;
        abstract isEmpty(): boolean;
        wait(arg0: number, arg1: number): void;
        /**
         * @deprecated
        */
        set(arg0: number, arg1: E): E;
        static of<E>(...arg0: E[]): Internal.List<E>;
        listIterator(arg0: number): Internal.ListIterator<any>;
        static of<E>(arg0: E, arg1: E, arg2: E, arg3: E, arg4: E, arg5: E, arg6: E, arg7: E, arg8: E, arg9: E, arg10: E, arg11: E, ...arg12: E[]): Internal.ImmutableList<E>;
        abstract containsAll(arg0: Internal.Collection_<any>): boolean;
        static of<E>(arg0: E, arg1: E, arg2: E, arg3: E, arg4: E, arg5: E, arg6: E, arg7: E, arg8: E, arg9: E): Internal.ImmutableList<E>;
        static builderWithExpectedSize<E>(arg0: number): Internal.ImmutableList$Builder<E>;
        static of<E>(): Internal.ImmutableList<E>;
        /**
         * @deprecated
        */
        remove(arg0: number): E;
        static of<E>(arg0: E): Internal.ImmutableList<E>;
        contains(arg0: any): boolean;
        static "copyOf(java.util.Iterator)"<E>(arg0: Internal.Iterator_<E>): Internal.ImmutableList<E>;
        /**
         * @deprecated
        */
        replaceAll(arg0: Internal.UnaryOperator_<E>): void;
        static of<E>(arg0: E, arg1: E, arg2: E, arg3: E, arg4: E, arg5: E, arg6: E): Internal.ImmutableList<E>;
        toString(): string;
        notifyAll(): void;
        static sortedCopyOf<E extends Internal.Comparable<any>>(arg0: Internal.Iterable_<E>): Internal.ImmutableList<E>;
        static "copyOf(java.lang.Object[])"<E>(arg0: E[]): Internal.ImmutableList<E>;
        abstract "toArray(java.lang.Object[])"<T>(arg0: T[]): T[];
        "toArray(java.util.function.IntFunction)"<T>(arg0: Internal.IntFunction_<T[]>): T[];
        static of<E>(arg0: E, arg1: E, arg2: E, arg3: E, arg4: E, arg5: E, arg6: E, arg7: E, arg8: E, arg9: E, arg10: E): Internal.ImmutableList<E>;
        abstract toArray(): any[];
        /**
         * @deprecated
        */
        asList(): this;
        hashCode(): number;
        abstract size(): number;
        static toImmutableList<E>(): Internal.Collector<E, any, Internal.ImmutableList<E>>;
        abstract clear(): void;
        wait(arg0: number): void;
        spliterator(): Internal.Spliterator<E>;
        equals(arg0: any): boolean;
        static copyOf<E>(arg0: Internal.Iterator_<E>): Internal.ImmutableList<E>;
        static of<E>(arg0: E, arg1: E, arg2: E, arg3: E, arg4: E): Internal.ImmutableList<E>;
        get class(): typeof any
        get empty(): boolean
    }
    type ImmutableList_<E> = ImmutableList<E>;
    /**
     * Methods for working with Java classes. Reflection my beloved ♥
    */
    class JavaWrapper {
        constructor(manager: any_)
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.treedecorators.AlterGroundDecorator"): typeof Internal.AlterGroundDecorator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "javax.accessibility.AccessibleContext"): typeof Internal.AccessibleContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.extensions.IForgeItem"): Internal.IForgeItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.datatransfer.FlavorMap"): Internal.FlavorMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.texture.AbstractTexture"): typeof Internal.AbstractTexture;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.function.Consumer"): Internal.Consumer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.DataVersion"): typeof Internal.DataVersion;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "kotlin.reflect.KFunction"): Internal.KFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.Timer"): typeof Internal.Timer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.item.DesolateDaggerItem"): typeof Internal.DesolateDaggerItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.dimension.DimensionType$MonsterSettings"): typeof Internal.DimensionType$MonsterSettings;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.trunkplacers.BendingTrunkPlacer"): typeof Internal.BendingTrunkPlacer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.TieredItem"): typeof Internal.TieredItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.block.entity.TaskScreenBlockEntity"): typeof Internal.TaskScreenBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.SurfaceRules$RuleSource"): Internal.SurfaceRules$RuleSource;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.spi.LoggerContextShutdownEnabled"): Internal.LoggerContextShutdownEnabled;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2backpack.content.bag.EquipmentBag"): typeof Internal.EquipmentBag;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.beneficial.EffectEldrinFlight"): typeof Internal.EffectEldrinFlight;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundBossEventPacket$OperationType"): typeof Internal.ClientboundBossEventPacket$OperationType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.enchantment.ProtectionEnchantment"): typeof Internal.ProtectionEnchantment;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.gui.drawable.IDrawable"): Internal.IDrawable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.lookup.StrSubstitutor"): typeof Internal.StrSubstitutor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.network.ServerStatusPing$ChannelData"): typeof Internal.ServerStatusPing$ChannelData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.ingredients.IIngredientTypeWithSubtypes"): Internal.IIngredientTypeWithSubtypes;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.InputReplacement"): Internal.InputReplacement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.NavigableSet"): Internal.NavigableSet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.artifice.ArcanaAltarBlock"): typeof Internal.ArcanaAltarBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.RenderTaskManager"): typeof Internal.RenderTaskManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.dmnr.api.item.DragonMageArmorItem"): typeof Internal.DragonMageArmorItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.registries.RegistryBuilder"): typeof Internal.RegistryBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.serialization.codecs.BaseMapCodec"): Internal.BaseMapCodec;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.entities.construct.materials.ConstructMaterialWickerwood"): typeof Internal.ConstructMaterialWickerwood;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.ModBlockProperties$Winding"): typeof Internal.ModBlockProperties$Winding;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.longs.Long2FloatFunction"): Internal.Long2FloatFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "javax.accessibility.AccessibleStateSet"): typeof Internal.AccessibleStateSet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.sorcery.ItemSpell"): typeof Internal.ItemSpell;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.lifecycle.ViewModelStoreOwner"): Internal.ViewModelStoreOwner;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.level.ExplosionEventJS$After"): typeof Internal.ExplosionEventJS$After;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.JobAttributes$SidesType"): typeof Internal.JobAttributes$SidesType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.NoiseColumn"): typeof Internal.NoiseColumn;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.server.item.ItemIceCrystal"): typeof Internal.ItemIceCrystal;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.set.BlockType"): typeof Internal.BlockType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.function.BiPredicate"): Internal.BiPredicate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "io.ejekta.bountiful.content.board.BoardBlock"): typeof Internal.BoardBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.util.NonNullSupplier"): Internal.NonNullSupplier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.api.crafting.IProcessor"): Internal.IProcessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.doubles.Double2LongFunction"): Internal.Double2LongFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.blaze3d.vertex.PoseStack$Pose"): typeof Internal.PoseStack$Pose;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.blaze3d.vertex.VertexFormatElement$Usage"): typeof Internal.VertexFormatElement$Usage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.security.KeyPair"): typeof Internal.KeyPair;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.phys.EntityHitResult"): typeof Internal.EntityHitResult;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.packs.resources.ResourceManagerReloadListener"): Internal.ResourceManagerReloadListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.server.ServerAboutToStartEvent"): typeof Internal.ServerAboutToStartEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.projectile.ShulkerBullet"): typeof Internal.ShulkerBullet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2backpack.content.remote.worldchest.WorldChestItem"): typeof Internal.WorldChestItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.sorcery.ItemScythe"): typeof Internal.ItemScythe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.filter.AbstractFilterable"): typeof Internal.AbstractFilterable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.HangingRootsBlock"): typeof Internal.HangingRootsBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.configurations.GeodeConfiguration"): typeof Internal.GeodeConfiguration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.item.WoodBasedItem"): typeof Internal.WoodBasedItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.animation.LayoutTransition"): typeof Internal.LayoutTransition;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.abdelaziz.canary.common.shapes.VoxelShapeCaster"): Internal.VoxelShapeCaster;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.players.UserBanList"): typeof Internal.UserBanList;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundOpenScreenPacket"): typeof Internal.ClientboundOpenScreenPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.Pufferfish"): typeof Internal.Pufferfish;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.blocks.Sandstone_Falling_Trap"): typeof Internal.Sandstone_Falling_Trap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.world.ModifiableStructureInfo$StructureInfo"): typeof Internal.ModifiableStructureInfo$StructureInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.bytes.ByteConsumer"): Internal.ByteConsumer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jozufozu.flywheel.mixin.PausedPartialTickAccessor"): Internal.PausedPartialTickAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.serialization.MapDecoder"): Internal.MapDecoder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.starfish_studios.bbb.block.properties.FrameStickDirection"): typeof Internal.FrameStickDirection;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.block.custom.WallBlockBuilder"): typeof Internal.WallBlockBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.texture.TextureAtlas"): typeof Internal.TextureAtlas;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.behavior.JumpOnBed"): typeof Internal.JumpOnBed;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.carver.CanyonCarverConfiguration$CanyonShapeConfiguration"): typeof Internal.CanyonCarverConfiguration$CanyonShapeConfiguration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.level.LevelEvent$Save"): typeof Internal.LevelEvent$Save;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.lionfishapi.server.event.StandOnFluidEvent"): typeof Internal.StandOnFluidEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.FenceGateBlock"): typeof Internal.FenceGateBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.lodestar.lodestone.systems.easing.Easing$BackIn"): typeof Internal.Easing$BackIn;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.boss.enderdragon.phases.DragonChargePlayerPhase"): typeof Internal.DragonChargePlayerPhase;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.ServerLevelAccessor"): Internal.ServerLevelAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.TagsUpdatedEvent"): typeof Internal.TagsUpdatedEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.ingredientaction.IngredientAction"): typeof Internal.IngredientAction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.ShaderCompiler"): typeof Internal.ShaderCompiler;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.neutral.EffectChoosingWellspring"): typeof Internal.EffectChoosingWellspring;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.mixin.MouseHandlerAccessor"): team.creative.creativecore.mixin.MouseHandlerAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.biome.Biome"): typeof Internal.Biome;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.blockentity.BlockEntityRenderDispatcher"): typeof Internal.BlockEntityRenderDispatcher;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.entity.player.PlayerRenderer"): typeof Internal.PlayerRenderer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.config.NumberConfig"): typeof Internal.NumberConfig;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.irisshaders.iris.texture.pbr.PBRSpriteHolder"): typeof Internal.PBRSpriteHolder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.harmful.EffectDeath"): typeof Internal.EffectDeath;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$CollidingEntityContext"): typeof Internal.ContextUtils$CollidingEntityContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.map.type.JsonDecorationType"): typeof Internal.JsonDecorationType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.item.TaskScreenConfiguratorItem"): typeof Internal.TaskScreenConfiguratorItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.state.properties.IntegerProperty"): typeof Internal.IntegerProperty;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.gui.widgets.IRecipeWidget"): Internal.IRecipeWidget;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.dnd.DragGestureListener"): Internal.DragGestureListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundUpdateEnabledFeaturesPacket"): typeof Internal.ClientboundUpdateEnabledFeaturesPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.architectury.extensions.injected.InjectedBlockExtension"): Internal.InjectedBlockExtension;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.server.item.ItemGrantSunsBlessing"): typeof Internal.ItemGrantSunsBlessing;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.recipes.arcanefurnace.ArcaneFurnaceRecipe"): typeof Internal.ArcaneFurnaceRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.IArmPoseTransformer"): Internal.IArmPoseTransformer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.abdelaziz.canary.common.entity.movement_tracker.MovementTrackerCache"): Internal.MovementTrackerCache;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.blockpredicates.AllOfPredicate"): typeof Internal.AllOfPredicate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.graphics.text.FontMetricsInt"): typeof Internal.FontMetricsInt;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "javax.accessibility.AccessibleSelection"): Internal.AccessibleSelection;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.SafeBlock"): typeof Internal.SafeBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.loot.LootTable"): typeof Internal.LootTable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.SinglePieceStructure"): typeof Internal.SinglePieceStructure;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.configurations.MultifaceGrowthConfiguration"): typeof Internal.MultifaceGrowthConfiguration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.FeatherBlock"): typeof Internal.FeatherBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.gui.builder.ITooltipBuilder"): Internal.ITooltipBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.dummmmmmy.common.TargetDummyItem"): typeof Internal.TargetDummyItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.JobAttributes$DialogType"): typeof Internal.JobAttributes$DialogType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.ticks.ScheduledTick"): typeof Internal.ScheduledTick;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.util.math.vec.VecNd"): typeof Internal.VecNd;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.event.ActionEvent"): typeof Internal.ActionEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.level.feature.config.FillBiomeAboveConfiguration"): typeof Internal.FillBiomeAboveConfiguration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.enchantments.Beheading"): typeof Internal.Beheading;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.StructureBlock"): typeof Internal.StructureBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.common.base.Suppliers$NonSerializableMemoizingSupplier"): typeof Internal.Suppliers$NonSerializableMemoizingSupplier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.CocoaBlock"): typeof Internal.CocoaBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.FireworkStarItem"): typeof Internal.FireworkStarItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.featuresize.TwoLayersFeatureSize"): typeof Internal.TwoLayersFeatureSize;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.ticks.TickContainerAccess"): Internal.TickContainerAccess;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.ILavaAndWaterLoggable"): Internal.ILavaAndWaterLoggable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.crafting.craft.CustomCraftRecipeSerializer"): typeof Internal.CustomCraftRecipeSerializer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.util.TimeZone$ConstantZone"): typeof Internal.TimeZone$ConstantZone;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.TickEvent$ServerTickEvent"): typeof Internal.TickEvent$ServerTickEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.runes.ItemRuneMarking"): typeof Internal.ItemRuneMarking;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.recipes.ItemAndPatternRecipe"): typeof Internal.ItemAndPatternRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.core.HolderSet$Direct"): typeof Internal.HolderSet$Direct;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.server.permission.events.PermissionGatherEvent$Nodes"): typeof Internal.PermissionGatherEvent$Nodes;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.dmnr.common.effects.harmful.SpellStoringCooldownMobEffect"): typeof Internal.SpellStoringCooldownMobEffect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.architectury.extensions.injected.InjectedGameEventExtension"): Internal.InjectedGameEventExtension;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.SimpleFoiledItem"): typeof Internal.SimpleFoiledItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.entity.PersistentEntitySectionManager"): typeof Internal.PersistentEntitySectionManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.Targeting"): Internal.Targeting;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.ShaderCaps"): typeof icyllis.arc3d.compiler.ShaderCaps;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.almostreliable.lootjs.loot.LootActionsContainer"): Internal.LootActionsContainer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.Logger"): org.apache.logging.log4j.Logger;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.FillLayerFeature"): typeof Internal.FillLayerFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.CreativeModeTab$ItemDisplayParameters"): typeof Internal.CreativeModeTab$ItemDisplayParameters;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.gui.manager.GuiManager"): typeof Internal.GuiManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.artifice.SeerStoneBlock"): typeof Internal.SeerStoneBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.dmnr.common.item.DragonMageCuriosItem"): typeof Internal.DragonMageCuriosItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.library.runtime.JeiHelpers"): typeof Internal.JeiHelpers;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.bytes.AbstractByteCollection"): typeof Internal.AbstractByteCollection;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundPaddleBoatPacket"): typeof Internal.ServerboundPaddleBoatPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbultimine.mixin.ShovelItemAccess"): Internal.ShovelItemAccess;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "pie.ilikepiefoo.events.EntityTameEventJS"): typeof Internal.EntityTameEventJS;
        /**
         * Creates a custom ConsoleJS instance for you to use to, well, log stuff
        */
        createConsole(name: string): Internal.ConsoleJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundMapItemDataPacket"): typeof Internal.ClientboundMapItemDataPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.Options$FieldAccess"): Internal.Options$FieldAccess;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.concurrent.locks.Lock"): Internal.Lock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexthe666.citadel.client.event.EventRenderSplashText"): typeof Internal.EventRenderSplashText;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.CoralTreeFeature"): typeof Internal.CoralTreeFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.inventory.DispenserMenu"): typeof Internal.DispenserMenu;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.util.ULocale$Minimize"): typeof Internal.ULocale$Minimize;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundOpenBookPacket"): typeof Internal.ClientboundOpenBookPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundUpdateTagsPacket"): typeof Internal.ClientboundUpdateTagsPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.brigadier.tree.ArgumentCommandNode"): typeof Internal.ArgumentCommandNode;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.sounds.SoundEngine"): typeof Internal.SoundEngine;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.neutral.EffectLift"): typeof Internal.EffectLift;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.block.ILightable"): Internal.ILightable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.FaceAttachedHorizontalDirectionalBlock"): typeof Internal.FaceAttachedHorizontalDirectionalBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.dmnr.common.item.RingOfRulingItem"): typeof Internal.RingOfRulingItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.realmsclient.dto.RealmsServer"): typeof Internal.RealmsServer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.blockpredicates.MatchingBlockTagPredicate"): typeof Internal.MatchingBlockTagPredicate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.shorts.Short2CharFunction"): Internal.Short2CharFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.SculkCatalystBlock"): typeof Internal.SculkCatalystBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.placement.RarityFilter"): typeof Internal.RarityFilter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.doubles.Double2FloatFunction"): Internal.Double2FloatFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.allay.Allay"): typeof Internal.Allay;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.graphics.text.FontCollection$Run"): typeof Internal.FontCollection$Run;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.runes.ItemRunePattern"): typeof Internal.ItemRunePattern;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexthe666.citadel.server.world.ExpandedBiomeSource"): Internal.ExpandedBiomeSource;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.stateproviders.BlockStateProvider"): typeof Internal.BlockStateProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.ponder.SceneBuilder$WorldInstructions"): typeof Internal.SceneBuilder$WorldInstructions;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.loot.parameters.LootContextParamSet$Builder"): typeof Internal.LootContextParamSet$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.component.AndRecipeComponent"): typeof Internal.AndRecipeComponent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.events.ObjectCompletedEvent$FileEvent"): typeof Internal.ObjectCompletedEvent$FileEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.core.misc.IExtendedPistonTile"): Internal.IExtendedPistonTile;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.screens.inventory.AbstractContainerScreen"): typeof Internal.AbstractContainerScreen;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.ponder.SceneBuilder"): typeof Internal.SceneBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.abdelaziz.canary.common.world.chunk.ChunkHolderExtended"): Internal.ChunkHolderExtended;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.gui.builder.IRecipeLayoutBuilder"): Internal.IRecipeLayoutBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.text.DecimalFormat"): typeof Internal.DecimalFormat;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.client.particle.ParticleHandler$6"): typeof Internal.ParticleHandler$6;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.entity.LivingEntityRenderer"): typeof Internal.LivingEntityRenderer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.state.properties.Property$Value"): typeof Internal.Property$Value;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.PrimitiveIterator$OfDouble"): Internal.PrimitiveIterator$OfDouble;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.tree.TreeVisitor"): typeof Internal.TreeVisitor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.map.CustomMapData$SimpleDirtyCounter"): typeof Internal.CustomMapData$SimpleDirtyCounter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.LegacyRandomSource"): typeof Internal.LegacyRandomSource;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.text.TimeZoneFormat"): typeof Internal.TimeZoneFormat;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.QuarryBlock"): typeof Internal.QuarryBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.yungnickyoung.minecraft.betterjungletemples.mixin.accessor.WorldGenRegionAccessor"): com.yungnickyoung.minecraft.betterjungletemples.mixin.accessor.WorldGenRegionAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.enchantment.ArrowFireEnchantment"): typeof Internal.ArrowFireEnchantment;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.fnc.common.item.PaladinSwordItem"): typeof Internal.PaladinSwordItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.narration.NarratedElementType"): typeof Internal.NarratedElementType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.items.PresentItem"): typeof Internal.PresentItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.integration.forge.jei.InformationJEIEventJS"): typeof Internal.InformationJEIEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.Services"): typeof Internal.Services;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.SignBlockEntity"): typeof Internal.SignBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.nonliving.BaseEntityBuilder$CustomInstructionKeyframeEventJS"): typeof Internal.BaseEntityBuilder$CustomInstructionKeyframeEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.TropicalFish$Base"): typeof Internal.TropicalFish$Base;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.ItemShuriken"): typeof Internal.ItemShuriken;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.ArchaicVineBlock"): typeof Internal.ArchaicVineBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.entities.nonliving.entityjs.IAnimatableJSNL"): Internal.IAnimatableJSNL;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.chunk.ChunkStatus$ChunkType"): typeof Internal.ChunkStatus$ChunkType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.integration.kubejs.requirements.RedstoneRequirementJS"): Internal.RedstoneRequirementJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.kinds.K1"): Internal.K1;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.inventory.HopperMenu"): typeof Internal.HopperMenu;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.artifice.MagiciansWorkbenchBlock"): typeof Internal.MagiciansWorkbenchBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.time.Month"): typeof Internal.Month;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.Pose"): typeof Internal.Pose;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$EntityHealContext"): typeof Internal.ContextUtils$EntityHealContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.chars.Char2ObjectFunction"): Internal.Char2ObjectFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.blocks.EndStoneTeleportTrapBricks"): typeof Internal.EndStoneTeleportTrapBricks;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.synchronization.brigadier.LongArgumentInfo"): typeof Internal.LongArgumentInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.embeddedt.embeddium.render.matrix_stack.CachingPoseStack"): Internal.CachingPoseStack;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.sorcery.ItemEntityCrystal"): typeof Internal.ItemEntityCrystal;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.player.PlayerSleepInBedEvent"): typeof Internal.PlayerSleepInBedEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.function.DoubleToIntFunction"): Internal.DoubleToIntFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.bettercombat.mixin.PlayerEntityAccessor"): Internal.PlayerEntityAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.inventory.ClickAction"): typeof Internal.ClickAction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.OptionalInt"): typeof Internal.OptionalInt;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.block.LootCrateOpenerBlock"): typeof Internal.LootCrateOpenerBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.GoldTrapdoorBlock"): typeof Internal.GoldTrapdoorBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.network.IContainerFactory"): Internal.IContainerFactory;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.extensions.common.IClientBlockExtensions"): Internal.IClientBlockExtensions;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundChangeDifficultyPacket"): typeof Internal.ServerboundChangeDifficultyPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.realmsclient.dto.RealmsServer$State"): typeof Internal.RealmsServer$State;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.core.WithPersistentData"): Internal.WithPersistentData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.impl.LocationAware"): Internal.LocationAware;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.living.BaseLivingEntityBuilder$IAnimationPredicateJS"): Internal.BaseLivingEntityBuilder$IAnimationPredicateJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.server.tag.TagWrapper"): typeof Internal.TagWrapper;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.beneficial.EffectPilgrim"): typeof Internal.EffectPilgrim;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.BrushableBlock"): typeof Internal.BrushableBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.core.misc.VillagerBrainEventInternal"): typeof Internal.VillagerBrainEventInternal;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundBossEventPacket"): typeof Internal.ClientboundBossEventPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.GpuDevice$Stats"): typeof Internal.GpuDevice$Stats;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.recipes.spells.ShapeRecipe"): typeof Internal.ShapeRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.extensions.IForgeBlock"): Internal.IForgeBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.util.TimeUnit"): typeof com.ibm.icu.util.TimeUnit;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.CarvedPumpkinBlock"): typeof Internal.CarvedPumpkinBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.MenuComponent"): typeof Internal.MenuComponent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.serialization.codecs.SimpleMapCodec"): typeof Internal.SimpleMapCodec;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.unascribed.fabrication.interfaces.SetItemDespawnAware"): Internal.SetItemDespawnAware;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.rhino.BaseFunction"): typeof Internal.BaseFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.fnc.common.item.FourLeafCloverRingItem"): typeof Internal.FourLeafCloverRingItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.ImmutableCollections$Set12"): typeof Internal.ImmutableCollections$Set12;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.quest.task.TaskType$GuiProvider"): Internal.TaskType$GuiProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.concurrent.atomic.AtomicInteger"): typeof Internal.AtomicInteger;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.BambooFeature"): typeof Internal.BambooFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.entities.living.entityjs.IAnimatableJS"): Internal.IAnimatableJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.client.living.model.GeoLayerJSBuilder"): typeof Internal.GeoLayerJSBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbchunks.api.Protection"): Internal.Protection;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.InteractionResultHolder"): typeof Internal.InteractionResultHolder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.Entity$RemovalReason"): typeof Internal.Entity$RemovalReason;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.network.ServerMessageDispatcher"): typeof Internal.ServerMessageDispatcher;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.SeagrassFeature"): typeof Internal.SeagrassFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.image.WritableRenderedImage"): Internal.WritableRenderedImage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.recipes.IMARecipe"): Internal.IMARecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.enchantment.TridentImpalerEnchantment"): typeof Internal.TridentImpalerEnchantment;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.renderer.GeoEntityRenderer"): typeof Internal.GeoEntityRenderer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "top.theillusivec4.curios.api.type.ISlotType"): Internal.ISlotType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundSetSubtitleTextPacket"): typeof Internal.ClientboundSetSubtitleTextPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.biome.Biome$Precipitation"): typeof Internal.Biome$Precipitation;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.unit.function.FunctionFactory"): typeof Internal.FunctionFactory;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.event.WindowListener"): Internal.WindowListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.event.ComponentEvent"): typeof Internal.ComponentEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.PlayerAdvancements"): typeof Internal.PlayerAdvancements;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.io.Serializable"): Internal.Serializable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.state.pattern.BlockPattern$BlockPatternMatch"): typeof Internal.BlockPattern$BlockPatternMatch;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.util.Function16"): Internal.Function16;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.core.PixelRef"): typeof Internal.PixelRef;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.templatesystem.LinearPosTest"): typeof Internal.LinearPosTest;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.blocks.MeltingNetherrack"): typeof Internal.MeltingNetherrack;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.inventory.Slot"): typeof Internal.Slot;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.entities.construct.ai.parameter.ConstructAITaskParameter"): typeof Internal.ConstructAITaskParameter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.Currency"): typeof Internal.Currency;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.RenderStateShard$CullStateShard"): typeof Internal.RenderStateShard$CullStateShard;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.RecipeKey"): typeof Internal.RecipeKey;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.loot.ConditionalFunction"): typeof Internal.ConditionalFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.boss.enderdragon.phases.DragonLandingApproachPhase"): typeof Internal.DragonLandingApproachPhase;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.core.keyframe.BoneAnimationQueue"): typeof Internal.BoneAnimationQueue;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "malte0811.ferritecore.mixin.blockstatecache.VoxelShapeAccess"): Internal.VoxelShapeAccess;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.chunk.ChunkStatus"): typeof Internal.ChunkStatus;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.arguments.ResourceArgument$Info"): typeof Internal.ResourceArgument$Info;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.gui.inputs.RecipeSlotUnderMouse"): typeof Internal.RecipeSlotUnderMouse;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.profiling.ProfileResults"): Internal.ProfileResults;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.fnc.common.item.WildPickaxeItem"): typeof Internal.WildPickaxeItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.shading.VertexGeomBuilder"): Internal.VertexGeomBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.image.BufferedImage"): typeof Internal.BufferedImage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.pieces.StructurePieceSerializationContext"): typeof Internal.StructurePieceSerializationContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.monster.AbstractIllager"): typeof Internal.AbstractIllager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.map.CustomMapData$Type"): typeof Internal.CustomMapData$Type;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.spells.attributes.Attribute"): typeof com.mna.api.spells.attributes.Attribute;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.server.permission.nodes.PermissionNode"): typeof Internal.PermissionNode;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.architectury.registry.registries.DeferredSupplier"): Internal.DeferredSupplier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.objects.ObjectList"): Internal.ObjectList;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.spectator.SpectatorMenuCategory"): Internal.SpectatorMenuCategory;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.doubles.Double2DoubleFunction"): Internal.Double2DoubleFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.server.item.ItemWroughtAxe"): typeof Internal.ItemWroughtAxe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.rhino.Symbol"): Internal.Symbol;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.WallTorchBlock"): typeof Internal.WallTorchBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.lodestar.lodestone.systems.easing.Easing"): typeof Internal.Easing;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.quest.ChapterGroup"): typeof Internal.ChapterGroup;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.OptionInstance$Enum"): typeof Internal.OptionInstance$Enum;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.MenuProvider"): Internal.MenuProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.ChunkPos"): typeof Internal.ChunkPos;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.EntityEvent$Size"): typeof Internal.EntityEvent$Size;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.harmful.EffectChill"): typeof Internal.EffectChill;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "pie.ilikepiefoo.compat.jei.builder.RecipeCategoryBuilder$SetRecipeHandler"): Internal.RecipeCategoryBuilder$SetRecipeHandler;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.advancements.Advancement"): typeof Internal.Advancement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.SoulSandBlock"): typeof Internal.SoulSandBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.cerbon.bosses_of_mass_destruction.block.custom.LevitationBlock"): typeof Internal.LevitationBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.view.View"): typeof icyllis.modernui.view.View;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.Spliterator"): Internal.Spliterator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.narration.NarrationThunk"): typeof Internal.NarrationThunk;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.animationjs.events.PlayerRenderer"): typeof net.liopyu.animationjs.events.PlayerRenderer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.fnc.common.effect.neutral.RandomOreMinerMobEffect"): typeof Internal.RandomOreMinerMobEffect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.particles.EffectWithCustomClientParticles"): typeof Internal.EffectWithCustomClientParticles;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.ResourceBundle$Control"): typeof Internal.ResourceBundle$Control;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.loot.ConditionContainer"): Internal.ConditionContainer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.architectury.impl.ItemPropertiesExtensionImpl"): Internal.ItemPropertiesExtensionImpl;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.constructs.parts.legs.ConstructPartReinforcedLegs"): typeof Internal.ConstructPartReinforcedLegs;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.ints.Int2DoubleFunction"): Internal.Int2DoubleFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.rhino.mod.wrapper.AABBWrapper"): AABB;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.DispenserBlockEntity"): typeof Internal.DispenserBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.MovementInputUpdateEvent"): typeof Internal.MovementInputUpdateEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.sorcery.SpectralAnvilBlock"): typeof Internal.SpectralAnvilBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.dmnr.common.effects.harmful.BrokenPeaceMobEffect"): typeof Internal.BrokenPeaceMobEffect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.GregorianCalendar"): typeof Internal.GregorianCalendar;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.gui.integration.ContainerIntegration"): typeof Internal.ContainerIntegration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "kotlinx.serialization.encoding.Decoder"): Internal.Decoder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.advancements.Criterion"): typeof Internal.Criterion;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.MagneticLevitationRailBlock"): typeof Internal.MagneticLevitationRailBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.level.gen.properties.AddOreProperties"): typeof Internal.AddOreProperties;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.core.particles.ParticleOptions$Deserializer"): Internal.ParticleOptions$Deserializer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.unascribed.fabrication.interfaces.MarkWet"): Internal.MarkWet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.loot.LootContext$VisitedEntry"): typeof Internal.LootContext$VisitedEntry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.chunk.CarvingMask$Mask"): Internal.CarvingMask$Mask;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.items.The_Incinerator"): typeof Internal.The_Incinerator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.ui.ContextMenuItem"): typeof Internal.ContextMenuItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.almostreliable.ponderjs.particles.ParticleTransformation$Simple"): Internal.ParticleTransformation$Simple;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "vazkii.patchouli.client.book.template.TemplateInclusion"): typeof Internal.TemplateInclusion;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.artifice.LodestarBlock"): typeof Internal.LodestarBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.impl.codec.NamedRecordCodec$Instance"): typeof Internal.NamedRecordCodec$Instance;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.sniffer.Sniffer$State"): typeof Internal.Sniffer$State;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.beneficial.EffectLevitation"): typeof Internal.EffectLevitation;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "questsadditions.mixinutils.IMixinQuest"): Internal.IMixinQuest;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "kotlin.Function"): kotlin.Function;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.server.entity.umvuthana.MaskType"): typeof Internal.MaskType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.core.ClientLevelKJS"): Internal.ClientLevelKJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.SlotAccess"): Internal.SlotAccess;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.abdelaziz.canary.common.world.ServerWorldExtended"): Internal.ServerWorldExtended;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.advancements.AdvancementRewards$Builder"): typeof Internal.AdvancementRewards$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$DamageContext"): typeof Internal.ContextUtils$DamageContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.monster.warden.AngerManagement"): typeof Internal.AngerManagement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.BlockEntityTicker"): Internal.BlockEntityTicker;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.living.LivingDeathEvent"): typeof Internal.LivingDeathEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "cpw.mods.jarhandling.impl.SimpleJarMetadata"): typeof Internal.SimpleJarMetadata;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.effect.MobEffectCategory"): typeof Internal.MobEffectCategory;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.util.CustomTabBehavior"): Internal.CustomTabBehavior;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.util.WrappedJS"): Internal.WrappedJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.phys.shapes.DiscreteVoxelShape$IntLineConsumer"): Internal.DiscreteVoxelShape$IntLineConsumer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.keksuccino.fancymenu.util.rendering.ui.widget.CustomizableWidget$CustomBackgroundResetBehavior"): typeof Internal.CustomizableWidget$CustomBackgroundResetBehavior;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.gson.ReflectionAccessFilter"): Internal.ReflectionAccessFilter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "pie.ilikepiefoo.compat.jade.builder.EntityComponentProviderBuilder$IconRetriever"): Internal.EntityComponentProviderBuilder$IconRetriever;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.capabilities.playerdata.magic.PlayerMagicProvider"): typeof Internal.PlayerMagicProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.SnowGolem"): typeof Internal.SnowGolem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.authlib.properties.Property"): typeof com.mojang.authlib.properties.Property;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.crafting.SmithingTransformRecipe"): typeof Internal.SmithingTransformRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.RenderBlockScreenEffectEvent$OverlayType"): typeof Internal.RenderBlockScreenEffectEvent$OverlayType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.TagsUpdatedEvent$UpdateCause"): typeof Internal.TagsUpdatedEvent$UpdateCause;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.phys.HitResult$Type"): typeof Internal.HitResult$Type;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.entity.EntitySection"): typeof Internal.EntitySection;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.WebBlock"): typeof Internal.WebBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.dmnr.api.item.IDragonMagicContainerItem"): Internal.IDragonMagicContainerItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.yungnickyoung.minecraft.betteroceanmonuments.mixin.accessor.StructureManagerAccessor"): com.yungnickyoung.minecraft.betteroceanmonuments.mixin.accessor.StructureManagerAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.SpringLauncherArmBlock"): typeof Internal.SpringLauncherArmBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.longs.LongPredicate"): it.unimi.dsi.fastutil.longs.LongPredicate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.GameRules$BooleanValue"): typeof Internal.GameRules$BooleanValue;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.quest.TeamData"): typeof Internal.TeamData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.sensing.Sensing"): typeof Internal.Sensing;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "Tavi007.ElementalCombat.items.LensItem"): typeof Internal.LensItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ScreenEvent$BackgroundRendered"): typeof Internal.ScreenEvent$BackgroundRendered;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.almostreliable.ponderjs.api.ExtendedSceneBuilder$ExtendedWorldInstructions"): typeof Internal.ExtendedSceneBuilder$ExtendedWorldInstructions;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.sensing.DummySensor"): typeof Internal.DummySensor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$VisualContext"): typeof Internal.ContextUtils$VisualContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.TropicalFish$Variant"): typeof Internal.TropicalFish$Variant;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.nick.chimes.block.WindChimeBlock"): typeof Internal.WindChimeBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.starfish_studios.bbb.block.WeatheringCopperLayer"): Internal.WeatheringCopperLayer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.server.potion.EffectSunblock"): typeof Internal.EffectSunblock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.screens.worldselection.CreateWorldScreen"): typeof Internal.CreateWorldScreen;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "io.ejekta.bountiful.content.board.BoardBlock$Companion"): typeof Internal.BoardBlock$Companion;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.HopperBlockEntity"): typeof Internal.HopperBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.Products$P12"): typeof Internal.Products$P12;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.player.PlayerEvent$HarvestCheck"): typeof Internal.PlayerEvent$HarvestCheck;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2library.base.overlay.SelectionSideBar$Context"): typeof Internal.SelectionSideBar$Context;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.lifecycle.LifecycleOwner"): Internal.LifecycleOwner;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.damagesource.DamageScaling"): typeof Internal.DamageScaling;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.player.PlayerXpEvent$PickupXp"): typeof Internal.PlayerXpEvent$PickupXp;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.gui.ITickTimer"): Internal.ITickTimer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.Mirror"): typeof Internal.Mirror;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.shading.UniformHandler$UniformInfo"): typeof Internal.UniformHandler$UniformInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.PumpkinBlock"): typeof Internal.PumpkinBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.abdelaziz.canary.common.ai.MemoryModificationCounter"): Internal.MemoryModificationCounter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.abdelaziz.canary.common.client.ClientWorldAccessor"): Internal.ClientWorldAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jozufozu.flywheel.backend.instancing.entity.EntityTypeExtension"): Internal.EntityTypeExtension;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.BedBlock"): typeof Internal.BedBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.Component"): typeof Internal.Component;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.item.ItemModelPropertiesEventJS"): typeof Internal.ItemModelPropertiesEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.finndog.mss.mixins.structures.StructurePoolAccessor"): Internal.StructurePoolAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.JigsawBlock"): typeof Internal.JigsawBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.animation.TimeInterpolator"): Internal.TimeInterpolator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.runes.MarkBookItem"): typeof Internal.MarkBookItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.events.ObjectStartedEvent$TaskEvent"): typeof Internal.ObjectStartedEvent$TaskEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.saveddata.maps.MapItemSavedData$HoldingPlayer"): typeof Internal.MapItemSavedData$HoldingPlayer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.cerbon.bosses_of_mass_destruction.block.custom.MonolithBlock"): typeof Internal.MonolithBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.joml.Matrix4dc"): Internal.Matrix4dc;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.constructs.parts.arms.ConstructPartAxeArmRight"): typeof Internal.ConstructPartAxeArmRight;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.tools.loot.LootDrop"): typeof Internal.LootDrop;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.quest.QuestObjectBase"): typeof Internal.QuestObjectBase;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.init.ModRecipeTypes$1"): typeof Internal.ModRecipeTypes$1;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.sorcery.InscriptionTableBlock"): typeof Internal.InscriptionTableBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.util.StringBuilderFormattable"): Internal.StringBuilderFormattable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.phys.shapes.ArrayVoxelShape"): typeof Internal.ArrayVoxelShape;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.finndog.mss.mixins.structures.TemplateAccessor"): Internal.TemplateAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.keksuccino.fancymenu.mixin.mixins.common.client.IMixinScreen"): de.keksuccino.fancymenu.mixin.mixins.common.client.IMixinScreen;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.configurations.EndGatewayConfiguration"): typeof Internal.EndGatewayConfiguration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundInteractPacket"): typeof Internal.ServerboundInteractPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.components.events.GuiEventListener"): Internal.GuiEventListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.shorts.ShortBidirectionalIterator"): Internal.ShortBidirectionalIterator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.blaze3d.vertex.BufferBuilder$DrawState"): typeof Internal.BufferBuilder$DrawState;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.chat.MessageSignature$Packed"): typeof Internal.MessageSignature$Packed;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "pie.ilikepiefoo.compat.jade.builder.ServerDataProviderBuilder$AppendServerDataCallback"): Internal.ServerDataProviderBuilder$AppendServerDataCallback;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.component.NumberComponent$FloatRange"): typeof Internal.NumberComponent$FloatRange;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.doubles.DoubleUnaryOperator"): it.unimi.dsi.fastutil.doubles.DoubleUnaryOperator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.PageAttributes$OriginType"): typeof Internal.PageAttributes$OriginType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.armor.IBrokenArmorReplaceable"): Internal.IBrokenArmorReplaceable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.items.Laser_Gatling"): typeof Internal.Laser_Gatling;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.RegisterColorHandlersEvent$Item"): typeof Internal.RegisterColorHandlersEvent$Item;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.core.DataSenderKJS"): Internal.DataSenderKJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbteams.data.TeamArgumentProvider"): Internal.TeamArgumentProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.dmnr.common.item.BraceletOfFriendshipItem"): typeof Internal.BraceletOfFriendshipItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.LogEvent"): Internal.LogEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.resources.model.ModelResourceLocation"): typeof Internal.ModelResourceLocation;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.foliageplacers.DarkOakFoliagePlacer"): typeof Internal.DarkOakFoliagePlacer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.items.Dungeon_Eye.VoidEyeItem"): typeof Internal.VoidEyeItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.DyeItem"): typeof Internal.DyeItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.server.item.MowzieToolItem"): typeof Internal.MowzieToolItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.amendments.common.block.DoubleCakeBlock"): typeof Internal.DoubleCakeBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.harmful.EffectWrithingBrambles"): typeof Internal.EffectWrithingBrambles;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.artifice.HealingPoulticeItem"): typeof Internal.HealingPoulticeItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.util.Watcher"): Internal.Watcher;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.ScaffoldingBlock"): typeof Internal.ScaffoldingBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.LanternBlock"): typeof Internal.LanternBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.util.math.geo.Rect"): typeof team.creative.creativecore.common.util.math.geo.Rect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.player.Player"): typeof Internal.Player;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.irisshaders.iris.texture.pbr.TextureAtlasExtension"): Internal.TextureAtlasExtension;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.configurations.SculkPatchConfiguration"): typeof Internal.SculkPatchConfiguration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.mixin.StructureProcessorAccessor"): com.github.L_Ender.cataclysm.mixin.StructureProcessorAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.blockentity.BlockEntityRendererProvider"): Internal.BlockEntityRendererProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.RenderStateShard$ShaderStateShard"): typeof Internal.RenderStateShard$ShaderStateShard;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundPlayerChatPacket"): typeof Internal.ClientboundPlayerChatPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.forgespi.language.IModInfo$DependencySide"): typeof Internal.IModInfo$DependencySide;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundInteractPacket$Handler"): Internal.ServerboundInteractPacket$Handler;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.telemetry.events.GameLoadTimesEvent$Measurement"): typeof Internal.GameLoadTimesEvent$Measurement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.tutorial.TutorialStepInstance"): Internal.TutorialStepInstance;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.level.LevelEventJS"): typeof Internal.LevelEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.TurtleEggBlock"): typeof Internal.TurtleEggBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.RenderStateShard$LineStateShard"): typeof Internal.RenderStateShard$LineStateShard;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.shorts.ShortPredicate"): Internal.ShortPredicate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.function.LongToIntFunction"): Internal.LongToIntFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.core.animation.AnimationProcessor$QueuedAnimation"): typeof Internal.AnimationProcessor$QueuedAnimation;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.Display$TextDisplay$LineSplitter"): Internal.Display$TextDisplay$LineSplitter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.almostreliable.ponderjs.PonderBuilderJS"): typeof Internal.PonderBuilderJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.RandomSequences"): typeof Internal.RandomSequences;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$EntityDistanceToPlayerContext"): typeof Internal.ContextUtils$EntityDistanceToPlayerContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.prunoideae.powerfuljs.capabilities.forge.CapabilityItem"): typeof Internal.CapabilityItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.joml.Matrix4x3dc"): Internal.Matrix4x3dc;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.projectile.WitherSkull"): typeof Internal.WitherSkull;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.special.ShapedKubeJSRecipe$SerializerKJS"): typeof Internal.ShapedKubeJSRecipe$SerializerKJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.lwjgl.glfw.GLFWErrorCallbackI"): Internal.GLFWErrorCallbackI;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.util.Measure"): typeof Internal.Measure;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.common.collect.ImmutableSetMultimap$Builder"): typeof Internal.ImmutableSetMultimap$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.placement.CarvingMaskPlacement"): typeof Internal.CarvingMaskPlacement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2backpack.content.quickswap.armorswap.ArmorSwap"): typeof Internal.ArmorSwap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.block.custom.CropBlockBuilder$ShapeBuilder"): typeof Internal.CropBlockBuilder$ShapeBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.IronGolem$Crackiness"): typeof Internal.IronGolem$Crackiness;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.artifice.charms.ItemContingencyCharm"): typeof Internal.ItemContingencyCharm;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.telemetry.TelemetryEventSender"): Internal.TelemetryEventSender;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.multiplayer.chat.ChatLog"): typeof Internal.ChatLog;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.tree.Node$ExpressionKind"): typeof Internal.Node$ExpressionKind;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.spectator.SpectatorMenuListener"): Internal.SpectatorMenuListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.crafting.RecipeChecker"): typeof Internal.RecipeChecker;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.brigadier.exceptions.Dynamic2CommandExceptionType"): typeof Internal.Dynamic2CommandExceptionType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.bytes.Byte2CharFunction"): Internal.Byte2CharFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.yungnickyoung.minecraft.betteroceanmonuments.mixin.accessor.ProjectileAccessor"): Internal.ProjectileAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.config.DoubleConfig"): typeof Internal.DoubleConfig;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.lodestar.lodestone.recipe.NBTCarryRecipe"): typeof Internal.NBTCarryRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.event.MouseListener"): Internal.MouseListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.slf4j.Marker"): org.slf4j.Marker;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.almostreliable.lootjs.predicate.ExtendedEntityFlagsPredicate$IBuilder"): Internal.ExtendedEntityFlagsPredicate$IBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.image.DataBuffer"): typeof Internal.DataBuffer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.CustomizeGuiOverlayEvent"): typeof Internal.CustomizeGuiOverlayEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "pie.ilikepiefoo.compat.jei.builder.RecipeCategoryWrapperBuilder"): typeof Internal.RecipeCategoryWrapperBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.sensing.VillagerHostilesSensor"): typeof Internal.VillagerHostilesSensor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.message.FlowMessage"): Internal.FlowMessage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.util.LogType"): typeof Internal.LogType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.Image"): typeof Internal.Image;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.Fox$Type"): typeof Internal.Fox$Type;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.mixin.StringSplitterAccessor"): Internal.StringSplitterAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "javax.crypto.ExemptionMechanism"): typeof Internal.ExemptionMechanism;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.living.LivingConversionEvent$Pre"): typeof Internal.LivingConversionEvent$Pre;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.crafting.SimpleCraftingRecipeSerializer"): typeof Internal.SimpleCraftingRecipeSerializer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.OptionInstance$CycleableValueSet"): Internal.OptionInstance$CycleableValueSet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.CryingObsidianBlock"): typeof Internal.CryingObsidianBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.security.PrivilegedAction"): Internal.PrivilegedAction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.FriendlyByteBuf"): typeof Internal.FriendlyByteBuf;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.view.ViewGroup"): typeof icyllis.modernui.view.ViewGroup;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jozufozu.flywheel.event.RenderLayerEvent"): typeof Internal.RenderLayerEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.recipes.spells.ModifierRecipeSerializer"): typeof Internal.ModifierRecipeSerializer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundResourcePackPacket$Action"): typeof Internal.ServerboundResourcePackPacket$Action;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.dmnr.common.item.DragonCoreItem"): typeof Internal.DragonCoreItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.block.IBlockHolder"): Internal.IBlockHolder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbxmodcompat.ftbquests.kubejs.QuestObjectStartedEventJS"): typeof Internal.QuestObjectStartedEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.constructs.parts.torso.ConstructPartBasicTorso"): typeof Internal.ConstructPartBasicTorso;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.doubles.DoublePredicate"): it.unimi.dsi.fastutil.doubles.DoublePredicate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.components.events.ContainerEventHandler"): Internal.ContainerEventHandler;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.recipes.multiblock.MultiblockDefinition"): typeof Internal.MultiblockDefinition;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.Rotation"): typeof Internal.Rotation;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.chunk.PalettedContainer$Data"): typeof Internal.PalettedContainer$Data;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.runtime.IEditModeConfig"): Internal.IEditModeConfig;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.commons.lang3.tuple.Pair"): typeof org.apache.commons.lang3.tuple.Pair;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.placement.PlacementFilter"): typeof Internal.PlacementFilter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.Shearable"): Internal.Shearable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.runtime.config.IJeiConfigValue"): Internal.IJeiConfigValue;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.extensions.IForgeFluid"): Internal.IForgeFluid;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.joml.Vector4dc"): Internal.Vector4dc;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.block.IBeeGrowable"): Internal.IBeeGrowable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.player.inventory.Hotbar"): typeof Internal.Hotbar;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.SulfurBudBlock"): typeof Internal.SulfurBudBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.faction.FactionDifficultyStats"): typeof Internal.FactionDifficultyStats;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.trunkplacers.FancyTrunkPlacer"): typeof Internal.FancyTrunkPlacer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.block.BlockItemBuilder"): typeof Internal.BlockItemBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.graphics.PointF"): typeof Internal.PointF;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$LerpToContext"): typeof Internal.ContextUtils$LerpToContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.entities.living.vanilla.CamelEntityJS"): typeof Internal.CamelEntityJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.EffectInstance"): typeof Internal.EffectInstance;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.block.model.BakedQuad"): typeof Internal.BakedQuad;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.api.upgrade.IMachineUpgradeManager"): Internal.IMachineUpgradeManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundTagQueryPacket"): typeof Internal.ClientboundTagQueryPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.CreativeModeTab$TabVisibility"): typeof Internal.CreativeModeTab$TabVisibility;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.util.MutableHashedLinkedMap$BasicStrategy"): typeof Internal.MutableHashedLinkedMap$BasicStrategy;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.StatueBlock"): typeof Internal.StatueBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.item.ItemTooltipEventJS"): typeof Internal.ItemTooltipEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.monster.Vindicator"): typeof Internal.Vindicator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.Insets"): typeof Internal.Insets;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.multiplayer.ClientSuggestionProvider"): typeof Internal.ClientSuggestionProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.bindings.ItemWrapper"): Item;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.items.FlagItem"): typeof Internal.FlagItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.core.GlobalPos"): typeof Internal.GlobalPos;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.ticks.LevelChunkTicks"): typeof Internal.LevelChunkTicks;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.monster.Vex"): typeof Internal.Vex;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.lodestar.lodestone.systems.particle.data.color.ColorParticleData"): typeof Internal.ColorParticleData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.kinds.K2"): Internal.K2;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.items.WrenchItem"): typeof Internal.WrenchItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.beneficial.EffectUndeadFrostWalker"): typeof Internal.EffectUndeadFrostWalker;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.ChestBlockEntity"): typeof Internal.ChestBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.recipes.spells.ISpellComponentRecipe"): Internal.ISpellComponentRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.level.ChunkDataEvent$Save"): typeof Internal.ChunkDataEvent$Save;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.animation.ViscousFluidInterpolator"): typeof Internal.ViscousFluidInterpolator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.WrittenBookItem"): typeof Internal.WrittenBookItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "pie.ilikepiefoo.compat.jade.builder.ServerExtensionProviderBuilder"): typeof Internal.ServerExtensionProviderBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.common.collect.AbstractMultimap"): typeof Internal.AbstractMultimap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.finndog.mss.world.structures.GenericJigsawStructure"): typeof Internal.GenericJigsawStructure;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundTeleportEntityPacket"): typeof Internal.ClientboundTeleportEntityPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.state.BlockBehaviour"): typeof Internal.BlockBehaviour;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.beneficial.EffectBriarthornBarrier"): typeof Internal.EffectBriarthornBarrier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.level.feature.AncientTreeFeature"): typeof Internal.AncientTreeFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.common.collect.ForwardingCollection"): typeof Internal.ForwardingCollection;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.misc.mob_container.MobContainer$MobNBTData"): typeof Internal.MobContainer$MobNBTData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.core.ColorSpace$Adaptation"): typeof Internal.ColorSpace$Adaptation;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.gson.JsonObject"): typeof Internal.JsonObject;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.longs.LongIterator"): Internal.LongIterator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.FlowerBoxBlock"): typeof Internal.FlowerBoxBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.blay09.mods.netherportalfix.mixin.LivingEntityAccessor"): Internal.LivingEntityAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.Display$GenericInterpolator"): Internal.Display$GenericInterpolator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.crafting.BookCloningRecipe"): typeof Internal.BookCloningRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundPlayerCombatKillPacket"): typeof Internal.ClientboundPlayerCombatKillPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.SoapBlock"): typeof Internal.SoapBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.client.living.model.GeoLayerJS"): typeof Internal.GeoLayerJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.prunoideae.powerfuljs.capabilities.forge.mods.curios.CapabilityCurios$ShouldDrop"): Internal.CapabilityCurios$ShouldDrop;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.crafting.machine.CustomMachineRecipeBuilder"): typeof Internal.CustomMachineRecipeBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.runtime.IJeiKeyMapping"): Internal.IJeiKeyMapping;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.vehicle.MinecartCommandBlock"): typeof Internal.MinecartCommandBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.impl.TextTrieMap$Output"): typeof Internal.TextTrieMap$Output;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2backpack.content.quickswap.common.IQuickSwapToken"): Internal.IQuickSwapToken;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.sosly.arcaneadditions.effects.beneficial.PolymorphEffect"): typeof Internal.PolymorphEffect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.DensityFunctions$Marker"): typeof Internal.DensityFunctions$Marker;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.block.callbacks.BlockStateModifyCallbackJS"): typeof Internal.BlockStateModifyCallbackJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.server.config.ConfigHandler$GenerationConfig"): typeof Internal.ConfigHandler$GenerationConfig;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.vehicle.Minecart"): typeof Internal.Minecart;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.memory.MemoryStatus"): typeof Internal.MemoryStatus;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.CrashReportCategory"): typeof Internal.CrashReportCategory;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.unit.UnitContext"): typeof Internal.UnitContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.analysis.SymbolUsage$Count"): typeof Internal.SymbolUsage$Count;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.serialization.Codec$ResultFunction"): Internal.Codec$ResultFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.core.Matrix3"): typeof Internal.Matrix3;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.constructs.parts.base.ChargeableConstructPart"): typeof Internal.ChargeableConstructPart;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.decoration.HangingEntity"): typeof Internal.HangingEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.ritual.ChalkRuneBlock"): typeof Internal.ChalkRuneBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.RegisterClientTooltipComponentFactoriesEvent"): typeof Internal.RegisterClientTooltipComponentFactoriesEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.core.BlockPos"): typeof BlockPos;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.MenuBar"): typeof Internal.MenuBar;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.core.Matrix"): typeof Internal.Matrix;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.abdelaziz.canary.common.shapes.VoxelShapeEmpty"): typeof Internal.VoxelShapeEmpty;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.cerbon.bosses_of_mass_destruction.item.custom.EarthdiveSpear"): typeof Internal.EarthdiveSpear;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.gson.JsonElement"): typeof Internal.JsonElement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.entities.living.vanilla.PandaEntityJS"): typeof Internal.PandaEntityJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.ExtendedServerListData"): typeof Internal.ExtendedServerListData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.level.BlockEvent$CropGrowEvent"): typeof Internal.BlockEvent$CropGrowEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.armortrim.TrimPattern"): typeof Internal.TrimPattern;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.impl.codec.EnhancedDispatchCodec"): typeof Internal.EnhancedDispatchCodec;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.constructs.parts.head.ConstructPartBasicHead"): typeof Internal.ConstructPartBasicHead;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.component.BlockComponent"): typeof Internal.BlockComponent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.BottleItem"): typeof Internal.BottleItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.CactusBlock"): typeof Internal.CactusBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.lwjgl.system.StructBuffer"): typeof Internal.StructBuffer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "kotlin.reflect.KParameter$Kind"): typeof Internal.KParameter$Kind;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.CaveSaplingBlock"): typeof Internal.CaveSaplingBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.LavaCauldronBlock"): typeof Internal.LavaCauldronBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.EquipableCarvedPumpkinBlock"): typeof Internal.EquipableCarvedPumpkinBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.vehicle.AbstractMinecartContainer"): typeof Internal.AbstractMinecartContainer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.recipes.IItemAndPatternRecipe"): Internal.IItemAndPatternRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.component.TagKeyComponent"): typeof Internal.TagKeyComponent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.gameevent.GameEventListener$DeliveryMode"): typeof Internal.GameEventListener$DeliveryMode;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.ImmutableCollections$List12"): typeof Internal.ImmutableCollections$List12;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2backpack.content.remote.player.EnderBackpackItem"): typeof Internal.EnderBackpackItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.ShulkerBoxBlockEntity$AnimationStatus"): typeof Internal.ShulkerBoxBlockEntity$AnimationStatus;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.EntitySelector"): typeof net.minecraft.world.entity.EntitySelector;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.CartographyTableBlock"): typeof Internal.CartographyTableBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jozufozu.flywheel.api.struct.StructType"): Internal.StructType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.SymbolTable"): typeof icyllis.arc3d.compiler.SymbolTable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.WeepingVinesFeature"): typeof Internal.WeepingVinesFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.bytes.Byte2IntFunction"): Internal.Byte2IntFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.constructs.parts.legs.ConstructPartRocketLegs"): typeof Internal.ConstructPartRocketLegs;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.Paint"): Internal.Paint;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.chars.Char2BooleanFunction"): Internal.Char2BooleanFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.random.RandomGenerator"): Internal.RandomGenerator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.valueproviders.ClampedNormalFloat"): typeof Internal.ClampedNormalFloat;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.Explosion"): typeof Internal.Explosion;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.entities.construct.materials.ConstructMaterialUnknown"): typeof Internal.ConstructMaterialUnknown;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.ItemCooldowns"): typeof Internal.ItemCooldowns;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.tileentities.ParticleEmitterTile"): typeof Internal.ParticleEmitterTile;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.lodestar.lodestone.systems.particle.SimpleParticleOptions$ParticleSpritePicker"): typeof Internal.SimpleParticleOptions$ParticleSpritePicker;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.Options"): typeof Internal.Options;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2backpack.content.quickswap.type.QuickSwapType"): typeof Internal.QuickSwapType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.piston.PistonHeadBlock"): typeof Internal.PistonHeadBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.DiskFeature"): typeof Internal.DiskFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.TallGrassBlock"): typeof Internal.TallGrassBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.core.animation.AnimationController$SoundKeyframeHandler"): Internal.AnimationController$SoundKeyframeHandler;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.PitcherCropBlock"): typeof Internal.PitcherCropBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.dmnr.common.item.ManaCakeItem"): typeof Internal.ManaCakeItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.eventbus.api.IEventListener"): Internal.IEventListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.CatVariant"): typeof Internal.CatVariant;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.worldgen.MASandFlowerBlock"): typeof Internal.MASandFlowerBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "pie.ilikepiefoo.compat.jade.builder.EntityComponentProviderBuilder$TooltipRetriever"): Internal.EntityComponentProviderBuilder$TooltipRetriever;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.gui.GuiChildControl"): typeof Internal.GuiChildControl;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.event.EventHandlerContainer"): typeof Internal.EventHandlerContainer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundAddExperienceOrbPacket"): typeof Internal.ClientboundAddExperienceOrbPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.server.permission.events.PermissionGatherEvent"): typeof Internal.PermissionGatherEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.crafting.MapExtendingRecipe"): typeof Internal.MapExtendingRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.architectury.event.events.client.ClientCommandRegistrationEvent$ClientCommandSourceStack"): Internal.ClientCommandRegistrationEvent$ClientCommandSourceStack;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.RegisterGuiOverlaysEvent"): typeof Internal.RegisterGuiOverlaysEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.level.feature.MagneticNodeFeature"): typeof Internal.MagneticNodeFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.core.RegistryAccess$1FrozenAccess"): typeof Internal.RegistryAccess$1FrozenAccess;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.BeetrootBlock"): typeof Internal.BeetrootBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.Locale$IsoCountryCode"): typeof Internal.Locale$IsoCountryCode;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.brigadier.CommandDispatcher"): typeof Internal.CommandDispatcher;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.view.View$DragShadow"): typeof Internal.View$DragShadow;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.lodestar.lodestone.systems.easing.Easing$BackOut"): typeof Internal.Easing$BackOut;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.fnc.common.item.DebugOrbSpellAdjustmentItem"): typeof Internal.DebugOrbSpellAdjustmentItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jozufozu.flywheel.api.vertex.VertexList"): Internal.VertexList;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.gameevent.GameEventListenerRegistry$ListenerVisitor"): Internal.GameEventListenerRegistry$ListenerVisitor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.tags.TagEntry"): typeof Internal.TagEntry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.potion.RageEffect"): typeof Internal.RageEffect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.player.Player$BedSleepingProblem"): typeof Internal.Player$BedSleepingProblem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.profiling.metrics.MetricCategory"): typeof Internal.MetricCategory;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.items.InstrumentItem"): typeof net.mehvahdjukaar.supplementaries.common.items.InstrumentItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.monster.Strider"): typeof Internal.Strider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.forgespi.language.IModInfo"): Internal.IModInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.CrystalDisplayBlock"): typeof Internal.CrystalDisplayBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.function.DoubleSupplier"): Internal.DoubleSupplier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.nbt.DoubleTag"): typeof Internal.DoubleTag;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.model.geometry.IGeometryBakingContext"): Internal.IGeometryBakingContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.lwjgl.system.Struct$StructValidation"): Internal.Struct$StructValidation;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.entity.EntityLookup"): typeof Internal.EntityLookup;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.authlib.minecraft.report.ReportEvidence"): typeof Internal.ReportEvidence;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.component.ItemComponents$2"): typeof Internal.ItemComponents$2;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.gui.widgets.IScrollGridWidgetFactory"): Internal.IScrollGridWidgetFactory;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.machine.MachineAppearanceManager"): typeof Internal.MachineAppearanceManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.HayBlock"): typeof Internal.HayBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.control.JumpControl"): typeof Internal.JumpControl;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.AmberMonolithBlock"): typeof Internal.AmberMonolithBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundTabListPacket"): typeof Internal.ClientboundTabListPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "top.theillusivec4.curios.api.type.util.ICuriosHelper"): Internal.ICuriosHelper;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.templatesystem.ProtectedBlockProcessor"): typeof Internal.ProtectedBlockProcessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.dmnr.common.item.DevilRingItem"): typeof Internal.DevilRingItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.authlib.minecraft.report.AbuseReportLimits"): typeof Internal.AbuseReportLimits;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.extensions.IForgeLivingEntity"): Internal.IForgeLivingEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$PlayerEntityContext"): typeof Internal.ContextUtils$PlayerEntityContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.BlastFurnaceBlockEntity"): typeof Internal.BlastFurnaceBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.StructureBlockEntity"): typeof Internal.StructureBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.arguments.ResourceKeyArgument$Info$Template"): typeof Internal.ResourceKeyArgument$Info$Template;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.crafting.RecipeManager"): typeof Internal.RecipeManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.carver.WorldCarver"): typeof Internal.WorldCarver;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.client.particle.MaledictusRingParticle$EnumRingBehavior"): typeof Internal.MaledictusRingParticle$EnumRingBehavior;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.BossEvent$BossBarColor"): typeof Internal.BossEvent$BossBarColor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.blocks.Wall_Cataclysm_Skull_Block"): typeof Internal.Wall_Cataclysm_Skull_Block;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.RenderStateShard$LightmapStateShard"): typeof Internal.RenderStateShard$LightmapStateShard;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.enchantment.ArrowKnockbackEnchantment"): typeof Internal.ArrowKnockbackEnchantment;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.spells.parts.Modifier"): typeof Internal.Modifier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.Context"): typeof icyllis.arc3d.engine.Context;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.integration.kubejs.requirements.ExperiencePerTickRequirementJS"): Internal.ExperiencePerTickRequirementJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.view.ViewManager"): Internal.ViewManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.screens.Screen"): typeof Internal.Screen;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.damagesource.CombatEntry"): typeof Internal.CombatEntry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.image.renderable.RenderableImage"): Internal.RenderableImage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.keksuccino.fancymenu.mixin.mixins.common.client.IMixinPlayerModel"): Internal.IMixinPlayerModel;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.entities.living.vanilla.GhastEntityJS"): typeof Internal.GhastEntityJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.impl.codec.PairCodec"): typeof Internal.PairCodec;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.SkullBlockEntity"): typeof Internal.SkullBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.irisshaders.iris.texture.pbr.PBRType"): typeof Internal.PBRType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.serialization.CompressorHolder"): typeof Internal.CompressorHolder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.debug.StructureRenderer"): typeof Internal.StructureRenderer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.ArrowItem"): typeof Internal.ArrowItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.machine.MachineLocation"): typeof Internal.MachineLocation;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.booleans.Boolean2LongFunction"): Internal.Boolean2LongFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.vehicle.Boat"): typeof Internal.Boat;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.gameevent.PositionSourceType"): Internal.PositionSourceType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.ui.WidgetLayout"): Internal.WidgetLayout;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.screens.inventory.MenuAccess"): Internal.MenuAccess;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.core.IdMap"): Internal.IdMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.material.PushReaction"): typeof Internal.PushReaction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.chat.TextColor"): typeof Internal.TextColor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.flag.FeatureElement"): Internal.FeatureElement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "lio.playeranimatorapi.misc.IsVisibleAccessor"): Internal.IsVisibleAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundSetTitlesAnimationPacket"): typeof Internal.ClientboundSetTitlesAnimationPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.DensityFunctions$Ap2"): typeof Internal.DensityFunctions$Ap2;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundPlayerCombatEnterPacket"): typeof Internal.ClientboundPlayerCombatEnterPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.ponder.element.ParrotElement$ParrotPose"): typeof Internal.ParrotElement$ParrotPose;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundEntityTagQuery"): typeof Internal.ServerboundEntityTagQuery;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.AbstractPresentBlock"): typeof Internal.AbstractPresentBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$ECollidingEntityContext"): typeof Internal.ContextUtils$ECollidingEntityContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.MonsterRoomFeature"): typeof Internal.MonsterRoomFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.core.Rect2f"): typeof Internal.Rect2f;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.joml.Matrix4f"): typeof Matrix4f;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.artifice.OcculusBlock"): typeof Internal.OcculusBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.debug.VillageSectionsDebugRenderer"): typeof Internal.VillageSectionsDebugRenderer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.server.entity.grottol.EntityGrottol$EnumDeathType"): typeof Internal.EntityGrottol$EnumDeathType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.screens.inventory.tooltip.ClientTooltipPositioner"): Internal.ClientTooltipPositioner;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.PottedFlytrapBlock"): typeof Internal.PottedFlytrapBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.attributes.AttributeInstance"): typeof Internal.AttributeInstance;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.brigadier.arguments.StringArgumentType"): typeof Internal.StringArgumentType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.BaseFireBlock"): typeof Internal.BaseFireBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.LazyLoadedValue"): typeof Internal.LazyLoadedValue;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.component.StringComponent$1"): typeof Internal.StringComponent$1;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.sensing.PiglinSpecificSensor"): typeof Internal.PiglinSpecificSensor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.types.families.Algebra"): Internal.Algebra;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.blocks.Cataclysm_Skull_Block"): typeof Internal.Cataclysm_Skull_Block;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.item.custom.ItemToolTierRegistryEventJS"): typeof Internal.ItemToolTierRegistryEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.timers.TimerQueue"): typeof Internal.TimerQueue;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.scores.Team$CollisionRule"): typeof Internal.Team$CollisionRule;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.UnderwaterMagmaFeature"): typeof Internal.UnderwaterMagmaFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.embeddedt.embeddium.api.eventbus.EmbeddiumEvent"): typeof Internal.EmbeddiumEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.profiling.metrics.MetricSampler$MetricSamplerBuilder"): typeof Internal.MetricSampler$MetricSamplerBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.artifice.ItemBubbleBoat"): typeof Internal.ItemBubbleBoat;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.JigsawBlockEntity"): typeof Internal.JigsawBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.BookPileBlock"): typeof Internal.BookPileBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.Rabbit"): typeof Internal.Rabbit;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.DisplayMode"): typeof Internal.DisplayMode;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.AttributeValue"): typeof Internal.AttributeValue;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.entity.RayTraceResultJS"): typeof Internal.RayTraceResultJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.living.BaseLivingEntityBuilder$SoundKeyFrameEventJS"): typeof Internal.BaseLivingEntityBuilder$SoundKeyFrameEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.gui.ingredient.IRecipeSlotView"): Internal.IRecipeSlotView;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.capabilities.IPlayerCantrips"): Internal.IPlayerCantrips;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.objects.Object2FloatMap$Entry"): Internal.Object2FloatMap$Entry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.model.HumanoidModel"): typeof Internal.HumanoidModel;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbxmodcompat.ftbchunks.kubejs.AfterEventJS"): typeof Internal.AfterEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "javax.sound.sampled.AudioFormat$Encoding"): typeof Internal.AudioFormat$Encoding;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.NyliumBlock"): typeof Internal.NyliumBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.client.ItemStackRenderer"): typeof Internal.ItemStackRenderer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.particles.parameters.ParticleColor$IntWrapper"): typeof Internal.ParticleColor$IntWrapper;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.electronwill.nightconfig.core.io.ConfigParser"): Internal.ConfigParser;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.placement.BiomeFilter"): typeof net.minecraft.world.level.levelgen.placement.BiomeFilter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.placement.CaveSurface"): typeof Internal.CaveSurface;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.OptionInstance$ValueSet"): Internal.OptionInstance$ValueSet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.fragment.FragmentResultOwner"): Internal.FragmentResultOwner;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.item.InkBombItem"): typeof Internal.InkBombItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.recipes.multiblock.block_matchers.ChalkBlockMatcher"): typeof Internal.ChalkBlockMatcher;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.interfaces.IInputDisable$InputMask"): typeof Internal.IInputDisable$InputMask;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.projectile.Arrow"): typeof Internal.Arrow;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundContainerSetDataPacket"): typeof Internal.ClientboundContainerSetDataPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.navigation.GroundPathNavigation"): typeof Internal.GroundPathNavigation;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.map.markers.SimpleMapBlockMarker"): typeof Internal.SimpleMapBlockMarker;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.serialization.OptionalDynamic"): typeof Internal.OptionalDynamic;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.particle.ParticleProvider"): Internal.ParticleProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.core.Context"): typeof icyllis.modernui.core.Context;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.foliageplacers.FoliagePlacer$FoliageAttachment"): typeof Internal.FoliagePlacer$FoliageAttachment;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.capabilities.RegisterCapabilitiesEvent"): typeof Internal.RegisterCapabilitiesEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.typings.desc.PrimitiveDescJS"): typeof Internal.PrimitiveDescJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.level.ExplosionEvent$Start"): typeof Internal.ExplosionEvent$Start;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.player.PlayerModelPart"): typeof Internal.PlayerModelPart;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.objects.Object2FloatFunction"): Internal.Object2FloatFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.capabilities.IPlayerCantrip"): Internal.IPlayerCantrip;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.tree.FunctionDecl"): typeof Internal.FunctionDecl;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.state.BlockBehaviour$OffsetFunction"): Internal.BlockBehaviour$OffsetFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.constructs.parts.arms.ConstructPartFluidNozzleLeft"): typeof Internal.ConstructPartFluidNozzleLeft;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.PlayerRideable"): Internal.PlayerRideable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.block.ISoftFluidConsumer"): Internal.ISoftFluidConsumer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.artifice.charms.ItemCancelFireCharm"): typeof Internal.ItemCancelFireCharm;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.electronwill.nightconfig.core.file.FileConfig"): Internal.FileConfig;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.shorts.ShortList"): Internal.ShortList;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.irisshaders.batchedentityrendering.impl.TransparencyType"): typeof Internal.TransparencyType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.SackBlock"): typeof Internal.SackBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.objects.AbstractObject2IntMap"): typeof Internal.AbstractObject2IntMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.bindings.KMath"): typeof KMath;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.prunoideae.powerfuljs.capabilities.forge.mods.curios.CapabilityCurios$EquipCallback"): Internal.CapabilityCurios$EquipCallback;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.renderer.layer.GeoRenderLayer"): typeof Internal.GeoRenderLayer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.food.ItemManaTea"): typeof Internal.ItemManaTea;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.prunoideae.powerfuljs.capabilities.forge.CapabilityItem$IsItemValid"): Internal.CapabilityItem$IsItemValid;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.Shape"): Internal.Shape;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.chat.FormattedText"): Internal.FormattedText;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.tree.Node$ElementKind"): typeof Internal.Node$ElementKind;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.LayeredCauldronBlock"): typeof Internal.LayeredCauldronBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.player.KubeJSInventoryListener"): typeof Internal.KubeJSInventoryListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.authlib.yggdrasil.request.AbuseReportRequest$RealmInfo"): typeof Internal.AbuseReportRequest$RealmInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.sorcery.bound.ItemBoundBow"): typeof Internal.ItemBoundBow;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.inventory.RecipeBookMenu"): typeof Internal.RecipeBookMenu;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.CompassItem"): typeof Internal.CompassItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.level.ChunkWatchEvent"): typeof Internal.ChunkWatchEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.integration.kubejs.requirements.TimeRequirementJS"): Internal.TimeRequirementJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.electronwill.nightconfig.core.file.CommentedFileConfigBuilder"): typeof Internal.CommentedFileConfigBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.animation.Animator"): typeof Internal.Animator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.joml.AxisAngle4f"): typeof Internal.AxisAngle4f;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.chat.ClickEvent"): typeof Internal.ClickEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.objects.Reference2ReferenceFunction"): Internal.Reference2ReferenceFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.pools.StructureTemplatePool$Projection"): typeof Internal.StructureTemplatePool$Projection;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.BioluminescentTorch"): typeof Internal.BioluminescentTorch;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.saveddata.SavedData"): typeof Internal.SavedData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.unascribed.fabrication.support.ConfigValues$ResolvedFeature"): typeof Internal.ConfigValues$ResolvedFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.placement.HeightmapPlacement"): typeof Internal.HeightmapPlacement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.typings.desc.ObjectDescJS$Entry"): typeof Internal.ObjectDescJS$Entry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2backpack.content.quickswap.entry.ISwapEntry"): Internal.ISwapEntry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.ints.AbstractIntList"): typeof Internal.AbstractIntList;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "pie.ilikepiefoo.compat.jei.events.RegisterRecipeTransferHandlersEventJS"): typeof Internal.RegisterRecipeTransferHandlersEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.concurrent.locks.ReadWriteLock"): Internal.ReadWriteLock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.vehicle.ContainerEntity"): Internal.ContainerEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.axolotl.Axolotl"): typeof Internal.Axolotl;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.dimension.end.EndDragonFight"): typeof Internal.EndDragonFight;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.ConduitBlockEntity"): typeof Internal.ConduitBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.player.AdvancementEvent$AdvancementEarnEvent"): typeof Internal.AdvancementEvent$AdvancementEarnEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ambient.AmbientCreature"): typeof Internal.AmbientCreature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.client.ModelGenerator$Element"): typeof Internal.ModelGenerator$Element;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.runeforging.RunicAnvilBlock"): typeof Internal.RunicAnvilBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.living.MobEffectEvent$Added"): typeof Internal.MobEffectEvent$Added;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.ints.AbstractIntCollection"): typeof Internal.AbstractIntCollection;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.caffeinemc.mods.sodium.api.vertex.buffer.VertexBufferWriter"): Internal.VertexBufferWriter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundSetBeaconPacket"): typeof Internal.ServerboundSetBeaconPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.ComponentPath"): Internal.ComponentPath;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.gui.drawable.IDrawableAnimated$StartDirection"): typeof Internal.IDrawableAnimated$StartDirection;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.Feature"): typeof Feature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.irisshaders.iris.texture.pbr.SpriteContentsExtension"): Internal.SpriteContentsExtension;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.inventory.FurnaceMenu"): typeof Internal.FurnaceMenu;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.floats.FloatStack"): Internal.FloatStack;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.EquipmentSlot$Type"): typeof Internal.EquipmentSlot$Type;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.blocks.interfaces.ICutoutBlock"): Internal.ICutoutBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.Context"): typeof icyllis.arc3d.compiler.Context;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.common.reflect.TypeParameter"): typeof Internal.TypeParameter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.DaylightDetectorBlock"): typeof Internal.DaylightDetectorBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.util.Output"): typeof Internal.Output;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbteams.api.property.TeamPropertyArgument$Info"): typeof Internal.TeamPropertyArgument$Info;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.beneficial.EffectCircleOfPower"): typeof Internal.EffectCircleOfPower;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.TooltipFlag"): Internal.TooltipFlag;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.MenuItem"): typeof Internal.MenuItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.block.custom.FenceBlockBuilder"): typeof Internal.FenceBlockBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.crafting.CraftingBookCategory"): typeof Internal.CraftingBookCategory;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.view.Menu"): icyllis.modernui.view.Menu;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.doubles.Double2ShortFunction"): Internal.Double2ShortFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.AfterRecipesLoadedEventJS"): typeof Internal.AfterRecipesLoadedEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.concurrent.ConcurrentHashMap$CollectionView"): typeof Internal.ConcurrentHashMap$CollectionView;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.rhino.WrappedExecutable"): Internal.WrappedExecutable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.items.RopeItem"): typeof Internal.RopeItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.yungnickyoung.minecraft.yungsapi.world.structure.terrainadaptation.CustomAdaptation"): typeof Internal.CustomAdaptation;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.player.PlayerContainerEvent"): typeof Internal.PlayerContainerEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.GameRules$Type"): typeof Internal.GameRules$Type;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.pools.SinglePoolElement"): typeof Internal.SinglePoolElement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.GuanoBlock"): typeof Internal.GuanoBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.keksuccino.konkrete.events.ScreenTickEvent"): typeof Internal.ScreenTickEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.yungnickyoung.minecraft.betterjungletemples.mixin.accessor.StructureManagerAccessor"): Internal.StructureManagerAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.ingredients.subtypes.ISubtypeManager"): Internal.ISubtypeManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.chars.Char2FloatFunction"): Internal.Char2FloatFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.text.DateFormat"): typeof Internal.DateFormat;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.extensions.IForgePackResources"): Internal.IForgePackResources;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.InputEvent$MouseButton"): typeof Internal.InputEvent$MouseButton;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.init.Registration$2"): typeof Internal.Registration$2;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.LightUpWaterBlock"): typeof Internal.LightUpWaterBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.yungnickyoung.minecraft.betterendisland.world.IEndSpike"): Internal.IEndSpike;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.recipes.eldrin.EldrinAltarRecipe"): typeof Internal.EldrinAltarRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.screens.worldselection.WorldCreationUiState$SelectedGameMode"): typeof Internal.WorldCreationUiState$SelectedGameMode;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.entities.living.vanilla.BatEntityJS"): typeof Internal.BatEntityJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "me.jellysquid.mods.sodium.mixin.features.textures.SpriteContentsInvoker"): Internal.SpriteContentsInvoker;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.living.MobEffectEvent"): typeof Internal.MobEffectEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.player.PlayerEvent$ItemCraftedEvent"): typeof Internal.PlayerEvent$ItemCraftedEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.machine.MachineAppearance"): typeof Internal.MachineAppearance;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.darkhax.attributefix.mixin.AccessorRangedAttribute"): Internal.AccessorRangedAttribute;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.brigadier.ResultConsumer"): Internal.ResultConsumer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.IronBarsBlock"): typeof Internal.IronBarsBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.fnc.common.item.DiceItem"): typeof Internal.DiceItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.InputEvent$MouseButton$Post"): typeof Internal.InputEvent$MouseButton$Post;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.extensions.IForgeLevel"): Internal.IForgeLevel;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.ints.Int2LongFunction"): Internal.Int2LongFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundGameEventPacket$Type"): typeof Internal.ClientboundGameEventPacket$Type;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.objects.Reference2ObjectFunction"): Internal.Reference2ObjectFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.items.ModFishBucket"): typeof Internal.ModFishBucket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundSoundEntityPacket"): typeof Internal.ClientboundSoundEntityPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.client.particle.ParticleRing$RingData"): typeof Internal.ParticleRing$RingData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.DinosaurEggBlock"): typeof Internal.DinosaurEggBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.monster.Guardian"): typeof Internal.Guardian;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.SharedSuggestionProvider$TextCoordinates"): typeof Internal.SharedSuggestionProvider$TextCoordinates;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jozufozu.flywheel.mixin.BlockEntityRenderDispatcherAccessor"): Internal.BlockEntityRenderDispatcherAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.ReplacementMatch"): Internal.ReplacementMatch;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.components.Tooltip"): typeof Internal.Tooltip;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.DensityFunctions$Clamp"): typeof Internal.DensityFunctions$Clamp;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.fnc.api.event.AddSmiteEvent"): typeof Internal.AddSmiteEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ScreenEvent$Init$Post"): typeof Internal.ScreenEvent$Init$Post;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundLevelChunkPacketData"): typeof Internal.ClientboundLevelChunkPacketData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "me.jellysquid.mods.sodium.client.render.vertex.buffer.ExtendedBufferBuilder"): Internal.ExtendedBufferBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.BaseRailBlock"): typeof Internal.BaseRailBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.SconceBlock"): typeof Internal.SconceBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.PlayerHeadItem"): typeof Internal.PlayerHeadItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundContainerSetSlotPacket"): typeof Internal.ClientboundContainerSetSlotPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundEditBookPacket"): typeof Internal.ServerboundEditBookPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.BrushableBlockEntity"): typeof Internal.BrushableBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.WorldlyContainer"): Internal.WorldlyContainer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.cantrips.ICantrip"): Internal.ICantrip;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.ponder.PonderScene"): typeof Internal.PonderScene;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.ForgeConfigSpec"): typeof Internal.ForgeConfigSpec;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.core.RefCounted"): Internal.RefCounted;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.recipe.category.extensions.vanilla.smithing.IExtendableSmithingRecipeCategory"): Internal.IExtendableSmithingRecipeCategory;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.capabilities.ICapabilitySerializable"): Internal.ICapabilitySerializable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.unascribed.fabrication.util.FurnaceResupplierFakeInventory"): typeof Internal.FurnaceResupplierFakeInventory;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.WallSkullBlock"): typeof Internal.WallSkullBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.gson.FieldNamingPolicy"): typeof Internal.FieldNamingPolicy;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.datatransfer.Clipboard"): typeof Internal.Clipboard;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.core.object.PlayState"): typeof Internal.PlayState;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.worldgen.ManaweaveCacheBlock"): typeof Internal.ManaweaveCacheBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.PinkPetalsBlock"): typeof Internal.PinkPetalsBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.LogBuilder"): Internal.LogBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.items.Coral_Bardiche"): typeof Internal.Coral_Bardiche;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.base.IRadialInventorySelect"): Internal.IRadialInventorySelect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.SwordItem"): typeof Internal.SwordItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.item.FertilizerItem"): typeof Internal.FertilizerItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.ponder.element.ParrotElement"): typeof ParrotElement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.vehicle.AbstractMinecart$Type"): typeof Internal.AbstractMinecart$Type;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.brigadier.exceptions.Dynamic3CommandExceptionType"): typeof Internal.Dynamic3CommandExceptionType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "pie.ilikepiefoo.compat.jade.ITooltipWrapper"): typeof Internal.ITooltipWrapper;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.fluid.InputFluid"): Internal.InputFluid;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.chars.Char2ShortFunction"): Internal.Char2ShortFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.item.BurrowingArrowItem"): typeof Internal.BurrowingArrowItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.FlagBlock"): typeof Internal.FlagBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.players.StoredUserEntry"): typeof Internal.StoredUserEntry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.items.IPhylacteryItem"): Internal.IPhylacteryItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.joml.Vector3f"): typeof Vec3f;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.JarBoatBlock"): typeof Internal.JarBoatBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.items.void_forge"): typeof Internal.void_forge;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.bytes.ByteIterator"): Internal.ByteIterator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.entity.EntityRendererProvider$Context"): typeof Internal.EntityRendererProvider$Context;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.WritableLevelData"): Internal.WritableLevelData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.core.particles.ParticleOptions"): Internal.ParticleOptions;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.core.animation.Animation$LoopType"): Internal.Animation$LoopType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.config.BooleanConfig"): typeof Internal.BooleanConfig;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.recipe.IFocusFactory"): Internal.IFocusFactory;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.ContainerListener"): net.minecraft.world.ContainerListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2backpack.content.common.BackpackModelItem"): Internal.BackpackModelItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.living.ZombieEvent$SummonAidEvent"): typeof Internal.ZombieEvent$SummonAidEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.block.custom.BasicBlockJS$Builder"): typeof Internal.BasicBlockJS$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.math.ChunkDimPos"): typeof Internal.ChunkDimPos;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.TripWireHookBlock"): typeof Internal.TripWireHookBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.ritual.FlatLandsBook"): typeof Internal.FlatLandsBook;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.config.Configuration"): org.apache.logging.log4j.core.config.Configuration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.loot.providers.score.ScoreboardNameProvider"): Internal.ScoreboardNameProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.SconceLeverBlock"): typeof Internal.SconceLeverBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.state.pattern.BlockInWorld"): typeof Internal.BlockInWorld;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.events.SimpleEvent"): Internal.SimpleEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "javax.accessibility.Accessible"): Internal.Accessible;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.ChainBlock"): typeof Internal.ChainBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.chat.LastSeenMessages"): typeof Internal.LastSeenMessages;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.entity.LivingEntityEventJS"): typeof Internal.LivingEntityEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.api.component.IMachineComponent"): Internal.IMachineComponent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bawnorton.neruina.extend.Errorable"): Internal.Errorable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.function.IntPredicate"): Internal.IntPredicate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.MagneticLightBlock"): typeof Internal.MagneticLightBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.relic.ScrollOfIcarianFlight"): typeof Internal.ScrollOfIcarianFlight;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.quest.loot.LootCrate"): typeof Internal.LootCrate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.tree.TypeReference"): typeof Internal.TypeReference;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundMovePlayerPacket"): typeof Internal.ServerboundMovePlayerPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.block.BlockPlacedEventJS"): typeof Internal.BlockPlacedEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.items.ModTemplate"): typeof Internal.ModTemplate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.monster.MagmaCube"): typeof Internal.MagmaCube;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.gui.handlers.IScreenHandler"): Internal.IScreenHandler;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.ForgeConfigSpec$LongValue"): typeof Internal.ForgeConfigSpec$LongValue;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.irisshaders.batchedentityrendering.impl.BlendingStateHolder"): Internal.BlendingStateHolder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.objects.Object2ShortFunction"): Internal.Object2ShortFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.library.runtime.JeiRuntime"): typeof Internal.JeiRuntime;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "kotlinx.serialization.encoding.CompositeDecoder$Companion"): typeof Internal.CompositeDecoder$Companion;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.Spliterator$OfPrimitive"): Internal.Spliterator$OfPrimitive;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.gson.JsonDeserializationContext"): Internal.JsonDeserializationContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.core.MessageQueue$IdleHandler"): Internal.MessageQueue$IdleHandler;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.chat.ChatType$BoundNetwork"): typeof Internal.ChatType$BoundNetwork;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.resources.sounds.TickableSoundInstance"): Internal.TickableSoundInstance;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.pools.StructureTemplatePool"): typeof Internal.StructureTemplatePool;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.floats.Float2LongFunction"): Internal.Float2LongFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.time.DayOfWeek"): typeof Internal.DayOfWeek;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.yungnickyoung.minecraft.betterwitchhuts.mixin.accessor.BoundingBoxAccessor"): Internal.BoundingBoxAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.server.permission.nodes.PermissionType"): typeof Internal.PermissionType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.items.IFactionSpecific"): Internal.IFactionSpecific;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "me.jellysquid.mods.sodium.mixin.features.textures.animations.upload.SpriteContentsAnimationAccessor"): me.jellysquid.mods.sodium.mixin.features.textures.animations.upload.SpriteContentsAnimationAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.living.LivingSwapItemsEvent$Hands"): typeof Internal.LivingSwapItemsEvent$Hands;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.block.IRotatable"): Internal.IRotatable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "pie.ilikepiefoo.compat.jei.impl.CustomRecipeCategoryDecorator"): typeof Internal.CustomRecipeCategoryDecorator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.capabilities.CapabilityDispatcher"): typeof Internal.CapabilityDispatcher;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.scores.Score"): typeof Internal.Score;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.view.ActionProvider"): typeof Internal.ActionProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.core.RecipeKJS"): Internal.RecipeKJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.function.DoubleUnaryOperator"): Internal.DoubleUnaryOperator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.MetalScaffoldingBlock"): typeof Internal.MetalScaffoldingBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2modularblock.DelegateEntityBlockImpl"): typeof Internal.DelegateEntityBlockImpl;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.pathfinder.NodeEvaluator"): typeof Internal.NodeEvaluator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.entities.nonliving.entityjs.IProjectileEntityJS"): Internal.IProjectileEntityJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.rhino.util.wrap.TypeWrapperFactory"): Internal.TypeWrapperFactory;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.items.SignPostItem"): typeof Internal.SignPostItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.RailBlock"): typeof Internal.RailBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "pie.ilikepiefoo.compat.jei.impl.CustomRecipeCategoryDecorator$DrawDecorator"): Internal.CustomRecipeCategoryDecorator$DrawDecorator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.DinosaurChopBlock"): typeof Internal.DinosaurChopBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.amendments.common.item.DyeBottleItem"): typeof Internal.DyeBottleItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.ArmorMaterial"): Internal.ArmorMaterial;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.unascribed.fabrication.support.ConfigValues$Feature"): typeof Internal.ConfigValues$Feature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbteams.api.property.TeamPropertyType"): typeof Internal.TeamPropertyType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.control.Control"): Internal.Control;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundSelectTradePacket"): typeof Internal.ServerboundSelectTradePacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.extensions.IForgeAbstractMinecart"): Internal.IForgeAbstractMinecart;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.CommandBuildContext"): Internal.CommandBuildContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.starfish_studios.bbb.block.WeatheringCopperLayer$WeatherState"): typeof Internal.WeatheringCopperLayer$WeatherState;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.DensityFunctions$RangeChoice"): typeof Internal.DensityFunctions$RangeChoice;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.WeepingVinesBlock"): typeof Internal.WeepingVinesBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.blockpredicates.InsideWorldBoundsPredicate"): typeof Internal.InsideWorldBoundsPredicate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.almostreliable.lootjs.kube.LootConditionsContainer"): Internal.LootConditionsContainer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.ConcretePowderBlock"): typeof Internal.ConcretePowderBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.ResourceCache"): typeof Internal.ResourceCache;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.artifact.AllfatherAxeControl"): typeof Internal.AllfatherAxeControl;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.rhino.regexp.RegExp"): typeof Internal.RegExp;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.cerbon.bosses_of_mass_destruction.block.custom.ObsidilithRuneBlock"): typeof Internal.ObsidilithRuneBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.HorseArmorItem"): typeof Internal.HorseArmorItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.CoralFanBlock"): typeof Internal.CoralFanBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "pie.ilikepiefoo.compat.jade.builder.callback.GetClientGroupsCallbackJS"): typeof Internal.GetClientGroupsCallbackJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.saveddata.maps.MapDecoration"): typeof Internal.MapDecoration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.CompileOptions"): typeof Internal.CompileOptions;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ViewportEvent"): typeof Internal.ViewportEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.recipe.transfer.IRecipeTransferManager"): Internal.IRecipeTransferManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundPlayerCombatEndPacket"): typeof Internal.ClientboundPlayerCombatEndPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.common.collect.ImmutableCollection"): typeof Internal.ImmutableCollection;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.living.EnderManAngerEvent"): typeof Internal.EnderManAngerEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.time.chrono.Chronology"): Internal.Chronology;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.lodestar.lodestone.systems.easing.Easing$BackInOut"): typeof Internal.Easing$BackInOut;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.core.ItemKJS"): Internal.ItemKJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.TypedOptic"): typeof Internal.TypedOptic;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.quickplay.QuickPlayLog$Type"): typeof Internal.QuickPlayLog$Type;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.gameevent.GameEvent$Context"): typeof Internal.GameEvent$Context;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "io.ejekta.kambrik.serial.ItemDataJson"): typeof Internal.ItemDataJson;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.item.SpearItem"): typeof Internal.SpearItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.item.CaveBoatItem"): typeof Internal.CaveBoatItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.multiplayer.chat.ChatListener"): typeof Internal.ChatListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.net.NetworkEventJS"): typeof Internal.NetworkEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.text.NumberFormat"): typeof com.ibm.icu.text.NumberFormat;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.templatesystem.PosRuleTest"): typeof Internal.PosRuleTest;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.texture.SpriteContents$AnimatedTexture"): typeof Internal.SpriteContents$AnimatedTexture;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.concurrent.Delayed"): Internal.Delayed;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.server.command.EnumArgument$Info"): typeof Internal.EnumArgument$Info;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.booleans.Boolean2FloatFunction"): Internal.Boolean2FloatFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.blamejared.controlling.mixin.AccessKeyMapping"): Internal.AccessKeyMapping;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.view.MenuItem$OnActionExpandListener"): Internal.MenuItem$OnActionExpandListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.core.Rect2fc"): Internal.Rect2fc;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.init.ModParticle$2"): typeof Internal.ModParticle$2;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.message.Message"): org.apache.logging.log4j.message.Message;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.registries.IForgeRegistryInternal"): Internal.IForgeRegistryInternal;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.function.LongUnaryOperator"): Internal.LongUnaryOperator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.WorldDimensions$Complete"): typeof Internal.WorldDimensions$Complete;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.core.ComponentKJS"): Internal.ComponentKJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.kostromdan.mods.netjs.callbacks.NetJSICallback"): Internal.NetJSICallback;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.yungnickyoung.minecraft.yungsapi.mixin.accessor.BoundingBoxAccessor"): com.yungnickyoung.minecraft.yungsapi.mixin.accessor.BoundingBoxAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.fnc.common.effect.smite.DispellingSmite"): typeof Internal.DispellingSmite;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.Saddleable"): Internal.Saddleable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.blaze3d.shaders.Uniform"): typeof Internal.Uniform;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.BaseEntityBlock"): typeof Internal.BaseEntityBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.registry.RegistryCallback"): Internal.RegistryCallback;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.FormattedCharSink"): Internal.FormattedCharSink;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.recipes.eldrin.FumeFilterRecipe"): typeof Internal.FumeFilterRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.item.FuelBlockItem"): typeof Internal.FuelBlockItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.MenuContainer"): Internal.MenuContainer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.events.AddGoalSelectorsEventJS"): typeof Internal.AddGoalSelectorsEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.integration.kubejs.CustomMachineUpgradeJSBuilder$JSRecipeModifierBuilder"): typeof CMRecipeModifierBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.franckyi.ibeeditor.mixin.AbstractWidgetMixin"): Internal.AbstractWidgetMixin;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.chunk.ChunkAccess"): typeof Internal.ChunkAccess;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.RegisterClientReloadListenersEvent"): typeof Internal.RegisterClientReloadListenersEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.level.feature.UndergroundRuinsFeature"): typeof Internal.UndergroundRuinsFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.abdelaziz.canary.common.entity.NavigatingEntity"): Internal.NavigatingEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.pathfinder.Path"): typeof net.minecraft.world.level.pathfinder.Path;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.security.spec.AlgorithmParameterSpec"): Internal.AlgorithmParameterSpec;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.core.particles.ParticleType"): typeof Internal.ParticleType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.schema.DynamicRecipeComponent$Factory"): Internal.DynamicRecipeComponent$Factory;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.PancakeBlock"): typeof Internal.PancakeBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.security.PermissionCollection"): typeof Internal.PermissionCollection;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.amendments.common.block.WallCandleSkullBlock"): typeof Internal.WallCandleSkullBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.state.properties.ChestType"): typeof Internal.ChestType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.tree.IfStatement"): typeof Internal.IfStatement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2backpack.content.capability.PickupBagItem"): Internal.PickupBagItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.IcebergFeature"): typeof Internal.IcebergFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.constructs.parts.arms.ConstructPartHammerArmRight"): typeof Internal.ConstructPartHammerArmRight;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.structures.StrongholdStructure"): typeof Internal.StrongholdStructure;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.blocks.Abyssal_Egg_Block"): typeof Internal.Abyssal_Egg_Block;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ScreenEvent$MouseButtonReleased"): typeof Internal.ScreenEvent$MouseButtonReleased;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.joml.Matrix3x2dc"): Internal.Matrix3x2dc;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.lodestar.lodestone.systems.particle.world.behaviors.components.DirectionalBehaviorComponent"): typeof Internal.DirectionalBehaviorComponent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.irisshaders.iris.texture.pbr.loader.AtlasPBRLoader$PBRTextureAtlasSprite"): typeof Internal.AtlasPBRLoader$PBRTextureAtlasSprite;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.ints.IntBinaryOperator"): it.unimi.dsi.fastutil.ints.IntBinaryOperator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.stats.Stat"): typeof Internal.Stat;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.bytes.AbstractByteList"): typeof Internal.AbstractByteList;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.ServerChatEvent"): typeof Internal.ServerChatEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.boss.enderdragon.phases.DragonSittingFlamingPhase"): typeof Internal.DragonSittingFlamingPhase;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.DrawableInfo"): typeof Internal.DrawableInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.particles.parameters.ParticleItemStack"): typeof Internal.ParticleItemStack;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.foliageplacers.BushFoliagePlacer"): typeof Internal.BushFoliagePlacer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.CarpetBlock"): typeof Internal.CarpetBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.foliageplacers.SpruceFoliagePlacer"): typeof Internal.SpruceFoliagePlacer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundAcceptTeleportationPacket"): typeof Internal.ServerboundAcceptTeleportationPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.tags.TagKey"): typeof Internal.TagKey;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.AbyssalAltarBlock"): typeof Internal.AbyssalAltarBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.impl.LocationAwareLogEventFactory"): Internal.LocationAwareLogEventFactory;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.level.feature.AmbersolFeature"): typeof Internal.AmbersolFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "javax.accessibility.AccessibleAction"): Internal.AccessibleAction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundMoveVehiclePacket"): typeof Internal.ServerboundMoveVehiclePacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.data.PackOutput$Target"): typeof Internal.PackOutput$Target;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.IScratchKey"): Internal.IScratchKey;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.rootplacers.RootPlacerType"): typeof Internal.RootPlacerType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.recipe.category.IRecipeCategory"): Internal.IRecipeCategory;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.runeforging.PedestalBlock"): typeof com.mna.blocks.runeforging.PedestalBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.graphics.text.LayoutPiece"): typeof Internal.LayoutPiece;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.dmnr.api.item.BaseTieredItem"): typeof Internal.BaseTieredItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ViewportEvent$ComputeCameraAngles"): typeof Internal.ViewportEvent$ComputeCameraAngles;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.recipes.manaweaving.ManaweaveCacheEffectSerializer"): typeof Internal.ManaweaveCacheEffectSerializer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.Products$P11"): typeof Internal.Products$P11;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.config.ui.SelectableResource"): Internal.SelectableResource;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.advancements.AdvancementList"): typeof Internal.AdvancementList;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.forgespi.language.IModInfo$ModVersion"): Internal.IModInfo$ModVersion;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.TallSeagrassBlock"): typeof Internal.TallSeagrassBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.LecternBlockEntity"): typeof Internal.LecternBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2screentracker.screen.source.ItemSourceData"): Internal.ItemSourceData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.chat.PlayerChatMessage"): typeof Internal.PlayerChatMessage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundChatSessionUpdatePacket"): typeof Internal.ServerboundChatSessionUpdatePacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.multiplayer.chat.report.AbuseReportSender"): Internal.AbuseReportSender;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "javax.swing.text.TabStop"): typeof Internal.TabStop;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "snownee.jade.api.ITooltip"): Internal.ITooltip;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.event.EventJS"): typeof Internal.EventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.core.Vector3"): typeof Internal.Vector3;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.ponder.ElementLink"): typeof Internal.ElementLink;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.server.entity.MowzieLLibraryEntity"): typeof Internal.MowzieLLibraryEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.CageBlock"): typeof Internal.CageBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.monster.SpellcasterIllager"): typeof Internal.SpellcasterIllager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.living.LivingEvent$LivingTickEvent"): typeof Internal.LivingEvent$LivingTickEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.item.ResistorShieldItem"): typeof Internal.ResistorShieldItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.texture.OverlayTexture"): typeof Internal.OverlayTexture;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.state.BlockBehaviour$OffsetType"): typeof Internal.BlockBehaviour$OffsetType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.enchantments.Gilded"): typeof Internal.Gilded;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.Cursor"): typeof Internal.Cursor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.block.BlockBuilder"): typeof Internal.BlockBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.cache.object.GeoCube"): typeof Internal.GeoCube;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.spi.LocationAwareLogger"): Internal.LocationAwareLogger;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.biome.BiomeManager$NoiseBiomeSource"): Internal.BiomeManager$NoiseBiomeSource;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.TickEvent"): typeof Internal.TickEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$ThunderHitContext"): typeof Internal.ContextUtils$ThunderHitContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.irisshaders.iris.texture.pbr.PBRAtlasHolder"): typeof Internal.PBRAtlasHolder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.config.Tristate"): typeof Internal.Tristate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.constructs.parts.arms.ConstructPartManaCannonLeft"): typeof Internal.ConstructPartManaCannonLeft;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.resources.DownloadedPackSource"): typeof Internal.DownloadedPackSource;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.mixin.accessor.ParticleEngineAccessor"): Internal.ParticleEngineAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.core.HolderLookup$Provider"): Internal.HolderLookup$Provider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.loot.entries.LootPoolEntryContainer"): typeof Internal.LootPoolEntryContainer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.PlantType"): typeof Internal.PlantType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.SystemReport"): typeof Internal.SystemReport;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.electronwill.nightconfig.core.file.FileNotFoundAction"): Internal.FileNotFoundAction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.sorcery.IllusionBlock"): typeof Internal.IllusionBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.objects.Reference2FloatFunction"): Internal.Reference2FloatFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "vazkii.patchouli.xplat.XplatModContainer"): Internal.XplatModContainer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.core.misc.IExtendedItem"): Internal.IExtendedItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.player.PlayerInteractEvent$LeftClickEmpty"): typeof Internal.PlayerInteractEvent$LeftClickEmpty;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundSetActionBarTextPacket"): typeof Internal.ClientboundSetActionBarTextPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.treedecorators.LeaveVineDecorator"): typeof Internal.LeaveVineDecorator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.architectury.registry.menu.MenuRegistry$ScreenFactory"): Internal.MenuRegistry$ScreenFactory;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.item.custom.ArmorItemBuilder$Chestplate"): typeof Internal.ArmorItemBuilder$Chestplate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.MushroomCow$MushroomType"): typeof Internal.MushroomCow$MushroomType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.embeddedt.embeddium.model.EpsilonizableBlockElement"): Internal.EpsilonizableBlockElement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbteams.api.property.TeamPropertyValue"): typeof Internal.TeamPropertyValue;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.spells.crafting.SpellRecipe"): typeof Internal.SpellRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.structures.JungleTempleStructure"): typeof Internal.JungleTempleStructure;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.Queue"): Internal.Queue;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundSetBorderWarningDistancePacket"): typeof Internal.ClientboundSetBorderWarningDistancePacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.Calendar"): typeof Internal.Calendar;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.TntBlock"): typeof Internal.TntBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.blaze3d.shaders.Shader"): Internal.Shader;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$RenderContext"): typeof Internal.ContextUtils$RenderContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.rhino.ConstProperties"): Internal.ConstProperties;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.AttackIndicatorStatus"): typeof Internal.AttackIndicatorStatus;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.entities.living.entityjs.TameableMobJS"): typeof Internal.TameableMobJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ScreenEvent$CharacterTyped$Post"): typeof Internal.ScreenEvent$CharacterTyped$Post;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.OutputReplacementTransformer$Replacement"): typeof Internal.OutputReplacementTransformer$Replacement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.block.callbacks.BlockExplodedCallbackJS"): typeof Internal.BlockExplodedCallbackJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.text.SimpleDateFormat"): typeof Internal.SimpleDateFormat;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.bytes.ByteIterable"): Internal.ByteIterable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.capabilities.ICapabilityProvider"): Internal.ICapabilityProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "top.theillusivec4.curios.api.type.capability.ICurioItem"): Internal.ICurioItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.AWTKeyStroke"): typeof Internal.AWTKeyStroke;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.behavior.LongJumpToPreferredBlock"): typeof Internal.LongJumpToPreferredBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.yungnickyoung.minecraft.yungsapi.world.structure.terrainadaptation.NoneAdaptation"): typeof Internal.NoneAdaptation;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.irisshaders.iris.mixin.texture.SpriteContentsTickerAccessor"): Internal.SpriteContentsTickerAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.player.PlayerInteractEvent"): typeof Internal.PlayerInteractEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.spectator.SpectatorMenuItem"): Internal.SpectatorMenuItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.TickEvent$RenderTickEvent"): typeof Internal.TickEvent$RenderTickEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.block.callbacks.EntitySteppedOnBlockCallbackJS"): typeof Internal.EntitySteppedOnBlockCallbackJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.concurrent.ConcurrentMap"): Internal.ConcurrentMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2backpack.content.drawer.DrawerItem"): typeof Internal.DrawerItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.synchronization.brigadier.FloatArgumentInfo"): typeof Internal.FloatArgumentInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.unascribed.fabrication.interfaces.PortalRenderFix"): Internal.PortalRenderFix;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "me.jellysquid.mods.sodium.mixin.features.textures.animations.upload.SpriteContentsAnimationFrameAccessor"): Internal.SpriteContentsAnimationFrameAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.narration.NarratableEntry"): Internal.NarratableEntry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.recipe.transfer.IRecipeTransferHandlerHelper"): Internal.IRecipeTransferHandlerHelper;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.LakeFeature$Configuration"): typeof Internal.LakeFeature$Configuration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.EquipmentSlot"): typeof Internal.EquipmentSlot;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.nick.chimes.block.AmethystWindChimeBlock"): typeof Internal.AmethystWindChimeBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.concurrent.TimeUnit"): typeof Internal.TimeUnit;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ScreenEvent$MouseButtonPressed$Pre"): typeof Internal.ScreenEvent$MouseButtonPressed$Pre;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.sosly.arcaneadditions.items.artifice.SoulsearchersLensItem"): typeof Internal.SoulsearchersLensItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.world.StructureModifier$Phase"): typeof Internal.StructureModifier$Phase;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.component.NumberComponent$DoubleRange"): typeof Internal.NumberComponent$DoubleRange;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.network.messages.to_server.SpellBookSlotChangeMessage"): typeof Internal.SpellBookSlotChangeMessage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.BundleDelimiterPacket"): typeof Internal.BundleDelimiterPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.effect.MobEffects$1"): typeof Internal.MobEffects$1;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.objects.ObjectSortedSet"): Internal.ObjectSortedSet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.server.item.ItemSolVisage"): typeof Internal.ItemSolVisage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.pieces.PiecesContainer"): typeof Internal.PiecesContainer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.ponder.element.TrackedElement"): typeof Internal.TrackedElement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2screentracker.screen.source.SimpleSlotData"): typeof Internal.SimpleSlotData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.tree.InterfaceBlock"): typeof Internal.InterfaceBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ScreenEvent$MouseButtonPressed$Post"): typeof Internal.ScreenEvent$MouseButtonPressed$Post;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.component.ComponentValueMap"): typeof Internal.ComponentValueMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.util.Pair"): typeof com.mojang.datafixers.util.Pair;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.player.PlayerEvent$StartTracking"): typeof Internal.PlayerEvent$StartTracking;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.objects.Object2ObjectMap$Entry"): Internal.Object2ObjectMap$Entry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.tree.Expression"): typeof Internal.Expression;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.spells.SpellCastingResultCode"): typeof Internal.SpellCastingResultCode;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.slf4j.event.Level"): typeof org.slf4j.event.Level;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "noobanidus.mods.lootr.item.LootrChestBlockItem"): typeof Internal.LootrChestBlockItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.api.requirement.IRequirement"): Internal.IRequirement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.textures.ForgeTextureMetadata"): typeof Internal.ForgeTextureMetadata;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.CoralPlantBlock"): typeof Internal.CoralPlantBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.dimension.DimensionType"): typeof Internal.DimensionType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.server.item.ItemBlowgun"): typeof Internal.ItemBlowgun;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "javax.swing.text.TabSet"): typeof Internal.TabSet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.common.collect.UnmodifiableIterator"): typeof Internal.UnmodifiableIterator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.snbt.SNBTCompoundTag"): typeof Internal.SNBTCompoundTag;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.joml.Quaterniond"): typeof Internal.Quaterniond;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.recipe.vanilla.IJeiAnvilRecipe"): Internal.IJeiAnvilRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.platform.forge.ingredient.WildcardIngredient"): typeof Internal.WildcardIngredient;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.state.properties.RailShape"): typeof Internal.RailShape;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.Cow"): typeof Internal.Cow;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.entities.IAnimPacketSync"): Internal.IAnimPacketSync;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.SmithingTableBlock"): typeof Internal.SmithingTableBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.SimpleBlockFeature"): typeof Internal.SimpleBlockFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.KeyBuilder"): typeof Internal.KeyBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.items.Gauntlet_of_Guard"): typeof Internal.Gauntlet_of_Guard;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.material.WaterFluid$Flowing"): typeof Internal.WaterFluid$Flowing;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jozufozu.flywheel.backend.instancing.entity.EntityInstance"): typeof Internal.EntityInstance;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.impl.codec.EnumCodec"): typeof Internal.EnumCodec;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.core.animatable.model.CoreGeoModel"): Internal.CoreGeoModel;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ModelEvent$RegisterGeometryLoaders"): typeof Internal.ModelEvent$RegisterGeometryLoaders;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.sorcery.ItemSightUnguent"): typeof Internal.ItemSightUnguent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.RenderPlayerEvent$Pre"): typeof Internal.RenderPlayerEvent$Pre;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.BlockEntityWithoutLevelRenderer"): typeof Internal.BlockEntityWithoutLevelRenderer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.joml.Vector2i"): typeof Internal.Vector2i;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.artifact.AllfatherAxe"): typeof Internal.AllfatherAxe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.arguments.ResourceOrTagKeyArgument$Result"): Internal.ResourceOrTagKeyArgument$Result;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundBlockUpdatePacket"): typeof Internal.ClientboundBlockUpdatePacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.components.toasts.ToastComponent"): typeof Internal.ToastComponent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.item.MutableToolTier"): typeof Internal.MutableToolTier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.enchantment.SweepingEdgeEnchantment"): typeof Internal.SweepingEdgeEnchantment;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.multiplayer.ClientChunkCache"): typeof Internal.ClientChunkCache;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.irisshaders.iris.vertices.BlockSensitiveBufferBuilder"): Internal.BlockSensitiveBufferBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.ui.IScreenWrapper"): Internal.IScreenWrapper;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.recipe.transfer.IUniversalRecipeTransferHandler"): Internal.IUniversalRecipeTransferHandler;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.serialization.Codec"): Internal.Codec;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.TripWireBlock"): typeof Internal.TripWireBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.valueproviders.IntProviderType"): Internal.IntProviderType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.living.LootingLevelEvent"): typeof Internal.LootingLevelEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.Locale"): typeof Internal.Locale;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.PostPass"): typeof Internal.PostPass;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "javax.script.Bindings"): Internal.Bindings;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.geom.Point2D"): typeof Internal.Point2D;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.electronwill.nightconfig.core.io.ConfigWriter"): Internal.ConfigWriter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.neutral.EffectManaStunt"): typeof Internal.EffectManaStunt;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.telemetry.TelemetryPropertyMap"): typeof Internal.TelemetryPropertyMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.BundlerInfo$Provider"): Internal.BundlerInfo$Provider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.ints.Int2IntFunction"): Internal.Int2IntFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.living.entityjs.MobBuilder"): typeof Internal.MobBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.time.ZoneOffset"): typeof Internal.ZoneOffset;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.projectile.FireworkRocketEntity"): typeof Internal.FireworkRocketEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexthe666.citadel.client.event.EventGetOutlineColor"): typeof Internal.EventGetOutlineColor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.quest.loot.EntityWeight"): typeof Internal.EntityWeight;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.village.poi.PoiType"): typeof Internal.PoiType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.Color"): typeof Internal.Color;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.view.View$OnKeyListener"): Internal.View$OnKeyListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.entity.util.HeadRotationEntityAccessor"): Internal.HeadRotationEntityAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.view.ActionMode$Callback"): Internal.ActionMode$Callback;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.level.structure.FerrocaveStructure"): typeof Internal.FerrocaveStructure;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.gameevent.vibrations.VibrationSelector"): typeof Internal.VibrationSelector;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.mixin.WorldGenRegionAccessor"): Internal.WorldGenRegionAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.network.messages.to_server.InscriptionTableRequestStartCraftingMessage"): typeof Internal.InscriptionTableRequestStartCraftingMessage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.maven.artifact.versioning.ArtifactVersion"): Internal.ArtifactVersion;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.Explosion$BlockInteraction"): typeof Internal.Explosion$BlockInteraction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.placement.StructurePlacement"): typeof Internal.StructurePlacement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.templatesystem.rule.blockentity.RuleBlockEntityModifier"): Internal.RuleBlockEntityModifier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.TrapDoorBlock"): typeof Internal.TrapDoorBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.gameevent.GameEventListener$Holder"): Internal.GameEventListener$Holder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.SPIRVVersion"): typeof Internal.SPIRVVersion;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.blaze3d.vertex.VertexSorting"): Internal.VertexSorting;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.crafting.SmithingTransformRecipe$Serializer"): typeof Internal.SmithingTransformRecipe$Serializer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.recipes.spells.ModifierRecipe"): typeof Internal.ModifierRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.items.CMBlockItem"): typeof Internal.CMBlockItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.gui.IRecipeLayoutDrawable"): Internal.IRecipeLayoutDrawable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.set.wood.WoodType"): typeof net.mehvahdjukaar.moonlight.api.set.wood.WoodType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundTeleportToEntityPacket"): typeof Internal.ServerboundTeleportToEntityPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.amendments.common.IBellConnections$BellConnection"): typeof Internal.IBellConnections$BellConnection;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.arguments.ResourceArgument"): typeof Internal.ResourceArgument;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundSelectAdvancementsTabPacket"): typeof Internal.ClientboundSelectAdvancementsTabPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.advancements.CriterionTriggerInstance"): Internal.CriterionTriggerInstance;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.ops.OpsTask"): typeof Internal.OpsTask;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.model.geom.ModelPart"): typeof Internal.ModelPart;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.FlaxBlock"): typeof Internal.FlaxBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jozufozu.flywheel.backend.model.DirectVertexConsumer"): typeof Internal.DirectVertexConsumer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.util.NBTIOWrapper"): NBTIO;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.MushroomBlock"): typeof Internal.MushroomBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.constructs.parts.head.ConstructPartHornHead"): typeof Internal.ConstructPartHornHead;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.boss.enderdragon.phases.DragonTakeoffPhase"): typeof Internal.DragonTakeoffPhase;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.abdelaziz.canary.mixin.util.accessors.ServerLevelAccessor"): com.abdelaziz.canary.mixin.util.accessors.ServerLevelAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.async.AsyncLoggerConfigDelegate"): Internal.AsyncLoggerConfigDelegate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.floats.Float2ReferenceFunction"): Internal.Float2ReferenceFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.irisshaders.batchedentityrendering.impl.MemoryTrackingBuffer"): Internal.MemoryTrackingBuffer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.api.machine.IMachineAppearance"): Internal.IMachineAppearance;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.arguments.TimeArgument$Info$Template"): typeof Internal.TimeArgument$Info$Template;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.fnc.common.item.SmitingRingItem"): typeof Internal.SmitingRingItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.stats.RecipeBookSettings"): typeof Internal.RecipeBookSettings;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.gson.stream.JsonWriter"): typeof Internal.JsonWriter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.Key$StorageKey"): typeof Internal.Key$StorageKey;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.misc.PaintingVariantBuilder"): typeof Internal.PaintingVariantBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundForgetLevelChunkPacket"): typeof Internal.ClientboundForgetLevelChunkPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.dmnr.common.item.UpgradeSealItem"): typeof Internal.UpgradeSealItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.Bee"): typeof Internal.Bee;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.lwjgl.system.Pointer$Default"): typeof Internal.Pointer$Default;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.screens.inventory.tooltip.ClientTooltipComponent"): Internal.ClientTooltipComponent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.gui.handlers.IGuiClickableArea"): Internal.IGuiClickableArea;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.sosly.arcaneadditions.effects.beneficial.AntiMagicEffect"): typeof Internal.AntiMagicEffect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.doubles.DoubleListIterator"): Internal.DoubleListIterator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.core.animation.RawAnimation$Stage"): typeof Internal.RawAnimation$Stage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.item.ItemBuilder"): typeof Internal.ItemBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.blocks.BlockWithOffset"): typeof Internal.BlockWithOffset;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$ArrowBlockHitContext"): typeof Internal.ContextUtils$ArrowBlockHitContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.spells.crafting.ModifiedSpellPart"): typeof Internal.ModifiedSpellPart;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.item.ItemTooltipEventJS$StaticTooltipHandlerFromJS"): Internal.ItemTooltipEventJS$StaticTooltipHandlerFromJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.RecipeSchemaRegistryEventJS"): typeof Internal.RecipeSchemaRegistryEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.server.item.ItemFoliaathSeed"): typeof Internal.ItemFoliaathSeed;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.dmnr.common.item.WeatherFairyStaffItem"): typeof Internal.WeatherFairyStaffItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbteams.api.property.PrivacyProperty"): typeof Internal.PrivacyProperty;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundPlaceGhostRecipePacket"): typeof Internal.ClientboundPlaceGhostRecipePacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.DimensionDataStorage"): typeof Internal.DimensionDataStorage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.component.FluidComponents$1"): typeof Internal.FluidComponents$1;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.concurrent.CompletionStage"): Internal.CompletionStage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.WeatheringCopperStairBlock"): typeof Internal.WeatheringCopperStairBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.beneficial.EffectCamouflage"): typeof Internal.EffectCamouflage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.FallingBlock"): typeof Internal.FallingBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ScreenEvent$MouseButtonReleased$Post"): typeof Internal.ScreenEvent$MouseButtonReleased$Post;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.PoweredRailBlock"): typeof Internal.PoweredRailBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.network.ServerConnectionListener"): typeof Internal.ServerConnectionListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jozufozu.flywheel.api.instance.Instance"): Internal.Instance;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.realmsclient.dto.RealmsServer$WorldType"): typeof Internal.RealmsServer$WorldType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.items.infernal_forge"): typeof Internal.infernal_forge;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.biome.Climate$ParameterPoint"): typeof Internal.Climate$ParameterPoint;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.SortedMap"): Internal.SortedMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.core.Position"): Internal.Position;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.finndog.mss.world.structures.GenericJigsawStructure$BURYING_TYPE"): typeof Internal.GenericJigsawStructure$BURYING_TYPE;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.artifice.ItemHellfireStaff"): typeof Internal.ItemHellfireStaff;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.abdelaziz.canary.common.world.blockentity.BlockEntityGetter"): Internal.BlockEntityGetter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.DensityFunctions$BeardifierOrMarker"): Internal.DensityFunctions$BeardifierOrMarker;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.view.View$OnScrollChangeListener"): Internal.View$OnScrollChangeListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.SculkBlock"): typeof Internal.SculkBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.fluids.FluidContainerList$Category"): typeof Internal.FluidContainerList$Category;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.gui.sync.GuiSyncControl"): typeof Internal.GuiSyncControl;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.SpikeFeature$EndSpike"): typeof Internal.SpikeFeature$EndSpike;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.common.collect.ImmutableList"): typeof Internal.ImmutableList;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.helpers.IStackHelper"): Internal.IStackHelper;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.cerbon.bosses_of_mass_destruction.item.custom.CrystalFruitItem"): typeof Internal.CrystalFruitItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.time.temporal.TemporalQuery"): Internal.TemporalQuery;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.BaseSpawner"): typeof Internal.BaseSpawner;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.api.integration.jei.IJEIIngredientWrapper"): Internal.IJEIIngredientWrapper;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "me.jellysquid.mods.sodium.client.model.quad.BakedQuadView"): Internal.BakedQuadView;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.structures.OceanRuinStructure$Type"): typeof Internal.OceanRuinStructure$Type;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.configurations.OreConfiguration"): typeof Internal.OreConfiguration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.lang.Appendable"): Internal.Appendable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.harmful.EffectLivingBomb"): typeof Internal.EffectLivingBomb;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.kosmx.playerAnim.api.layered.AnimationStack"): typeof Internal.AnimationStack;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.core.HolderSet"): Internal.HolderSet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.core.PixelMap"): typeof Internal.PixelMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.Display$TextDisplay$Align"): typeof Internal.Display$TextDisplay$Align;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.prunoideae.powerfuljs.capabilities.forge.CapabilityForgeEnergy$BlockEntityBuilder"): typeof Internal.CapabilityForgeEnergy$BlockEntityBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jozufozu.flywheel.backend.RenderLayer"): typeof com.jozufozu.flywheel.backend.RenderLayer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.ForgeConfigSpec$DoubleValue"): typeof Internal.ForgeConfigSpec$DoubleValue;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.harmful.EffectSunder"): typeof Internal.EffectSunder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.gui.GuiLayer"): typeof Internal.GuiLayer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ScreenEvent$Init$Pre"): typeof Internal.ScreenEvent$Init$Pre;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.enchantments.ExperienceToSouls"): typeof Internal.ExperienceToSouls;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.LiquidBlockContainer"): Internal.LiquidBlockContainer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.Iterator"): Internal.Iterator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.text.Replaceable"): Internal.Replaceable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.unascribed.fabrication.interfaces.GetPreZombified"): Internal.GetPreZombified;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.chat.FormattedText$ContentConsumer"): Internal.FormattedText$ContentConsumer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.world.BiomeModifier$Phase"): typeof Internal.BiomeModifier$Phase;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.gui.element.ScreenElement"): Internal.ScreenElement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "snownee.jade.api.ui.IBoxElement"): Internal.IBoxElement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.blay09.mods.balm.mixin.AbstractContainerScreenAccessor"): net.blay09.mods.balm.mixin.AbstractContainerScreenAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ContainerScreenEvent"): typeof Internal.ContainerScreenEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.particle.ParticleEngine$MutableSpriteSet"): typeof Internal.ParticleEngine$MutableSpriteSet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.DimensionSpecialEffects$SkyType"): typeof Internal.DimensionSpecialEffects$SkyType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap"): typeof Internal.ImmutableMap$IteratorBasedImmutableMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.inventory.ShulkerBoxMenu"): typeof Internal.ShulkerBoxMenu;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ModelEvent"): typeof Internal.ModelEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.beneficial.EffectTrueInvisibility"): typeof Internal.EffectTrueInvisibility;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.gameevent.GameEvent"): typeof Internal.GameEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.requirement.StructureRequirement$Action"): typeof Internal.StructureRequirement$Action;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "top.theillusivec4.curios.api.type.inventory.ICurioStacksHandler"): Internal.ICurioStacksHandler;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$LineOfSightContext"): typeof Internal.ContextUtils$LineOfSightContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.objects.Reference2IntFunction"): Internal.Reference2IntFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.authlib.GameProfile"): typeof Internal.GameProfile;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.time.temporal.TemporalAmount"): Internal.TemporalAmount;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.behavior.FollowTemptation"): typeof Internal.FollowTemptation;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.MinecartItem"): typeof Internal.MinecartItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.player.PlayerWakeUpEvent"): typeof Internal.PlayerWakeUpEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.model.GeoModel"): typeof Internal.GeoModel;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.authlib.AuthenticationService"): Internal.AuthenticationService;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.security.AccessControlContext"): typeof Internal.AccessControlContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.entities.living.vanilla.AllayEntityJS"): typeof Internal.AllayEntityJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.spells.ICanContainSpell"): Internal.ICanContainSpell;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.chat.SignedMessageBody"): typeof Internal.SignedMessageBody;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.abdelaziz.canary.common.entity.item.ItemStackSubscriber"): Internal.ItemStackSubscriber;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.player.ChestEventJS"): typeof Internal.ChestEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.util.MessageSupplier"): Internal.MessageSupplier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.enchantment.Enchantment$Rarity"): typeof Internal.Enchantment$Rarity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.chunk.ChunkRenderDispatcher$RenderChunk"): typeof Internal.ChunkRenderDispatcher$RenderChunk;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.saveddata.maps.MapDecoration$Type"): typeof Internal.MapDecoration$Type;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.common.collect.ImmutableMap$Builder"): typeof Internal.ImmutableMap$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jozufozu.flywheel.api.Instancer"): Internal.Instancer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.runeforging.RuneforgeBlock"): typeof Internal.RuneforgeBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.rhino.Scriptable"): Internal.Scriptable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.DiodeBlock"): typeof Internal.DiodeBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2backpack.content.tool.PickupTweakerTool"): typeof Internal.PickupTweakerTool;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.slf4j.Log4jLogger"): typeof Internal.Log4jLogger;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.nbt.CompoundTag"): typeof Internal.CompoundTag;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.items.KeyItem"): typeof Internal.KeyItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.entity.EntityPotionEffectsJS"): typeof Internal.EntityPotionEffectsJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexthe666.citadel.client.event.EventLivingRenderer$AccessToBufferSource"): typeof Internal.EventLivingRenderer$AccessToBufferSource;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.vulkan.VulkanImageInfo"): typeof Internal.VulkanImageInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.CherryLeavesBlock"): typeof Internal.CherryLeavesBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.client.model.forge.ExtraModelDataImpl"): typeof Internal.ExtraModelDataImpl;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.DensityFunctions$MarkerOrMarked"): Internal.DensityFunctions$MarkerOrMarked;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.util.RotationAxis"): typeof RotationAxis;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.embeddedt.embeddium.api.model.EmbeddiumBakedModelExtension"): Internal.EmbeddiumBakedModelExtension;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.CommonLevelAccessor"): Internal.CommonLevelAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.living.entityjs.AnimalEntityBuilder"): typeof Internal.AnimalEntityBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.beneficial.EffectWellspringSight"): typeof Internal.EffectWellspringSight;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.integration.kubejs.requirements.ItemTransformRequirementJS"): Internal.ItemTransformRequirementJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.PageAttributes$OrientationRequestedType"): typeof Internal.PageAttributes$OrientationRequestedType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.util.Calendar$FormatConfiguration"): typeof Internal.Calendar$FormatConfiguration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.RandomAccess"): Internal.RandomAccess;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.beneficial.EffectManaBoost"): typeof Internal.EffectManaBoost;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.longs.Long2ShortFunction"): Internal.Long2ShortFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.inventory.GrindstoneMenu"): typeof Internal.GrindstoneMenu;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.chunk.LevelChunk"): typeof Internal.LevelChunk;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.EnchantmentTableBlock"): typeof Internal.EnchantmentTableBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.phys.shapes.DiscreteVoxelShape"): typeof Internal.DiscreteVoxelShape;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.KelpBlock"): typeof Internal.KelpBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.gossip.GossipType"): typeof Internal.GossipType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.structures.RuinedPortalStructure"): typeof Internal.RuinedPortalStructure;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.llamalad7.mixinextras.sugar.ref.LocalRef"): Internal.LocalRef;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.LiquidBlock"): typeof Internal.LiquidBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "kotlinx.serialization.descriptors.SerialKind"): typeof Internal.SerialKind;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.view.View$OnAttachStateChangeListener"): Internal.View$OnAttachStateChangeListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.config.ConfigFromString"): typeof Internal.ConfigFromString;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.longs.LongConsumer"): it.unimi.dsi.fastutil.longs.LongConsumer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.ponder.PonderScene$SceneTransform"): typeof Internal.PonderScene$SceneTransform;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.packs.resources.Resource"): typeof Internal.Resource;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.scores.Team$Visibility"): typeof Internal.Team$Visibility;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.blocks.IRequirePlayerReference"): Internal.IRequirePlayerReference;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.impl.component.config.SideConfig"): typeof Internal.SideConfig;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.gameevent.GameEventListenerRegistry"): Internal.GameEventListenerRegistry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.maven.artifact.handler.ArtifactHandler"): Internal.ArtifactHandler;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.treedecorators.TreeDecoratorType"): typeof Internal.TreeDecoratorType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.core.Shader"): typeof icyllis.arc3d.core.Shader;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.chunk.RenderChunkRegion"): typeof Internal.RenderChunkRegion;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.prunoideae.powerfuljs.capabilities.forge.CapabilityFluid$CustomTankBuilderItemStack"): typeof Internal.CapabilityFluid$CustomTankBuilderItemStack;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundSetBorderWarningDelayPacket"): typeof Internal.ClientboundSetBorderWarningDelayPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.sounds.SoundSource"): typeof Internal.SoundSource;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.heightproviders.TrapezoidHeight"): typeof Internal.TrapezoidHeight;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.SulfurBlock"): typeof Internal.SulfurBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.fnc.common.effect.harmful.LivingBombMobEffect"): typeof Internal.LivingBombMobEffect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.recipes.RecipeByproduct"): typeof Internal.RecipeByproduct;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.doubles.DoubleList"): Internal.DoubleList;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.fnc.common.item.DivineArmorItem"): typeof Internal.DivineArmorItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.Key"): icyllis.arc3d.engine.Key;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.stream.LongStream$Builder"): Internal.LongStream$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.boss.EnderDragonPart"): typeof Internal.EnderDragonPart;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.pathfinder.PathComputationType"): typeof Internal.PathComputationType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.fnc.common.item.DebugOrbWildMagicItem"): typeof Internal.DebugOrbWildMagicItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.sensing.HurtBySensor"): typeof Internal.HurtBySensor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.random.WeightedRandomList"): typeof Internal.WeightedRandomList;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.config.ConfigurationListener"): Internal.ConfigurationListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.impl.guielement.AbstractGuiElement$Properties"): typeof Internal.AbstractGuiElement$Properties;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.MobSpawnType"): typeof Internal.MobSpawnType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.time.temporal.TemporalAccessor"): Internal.TemporalAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.image.ImageObserver"): Internal.ImageObserver;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.NuclearFurnaceComponentBlock"): typeof Internal.NuclearFurnaceComponentBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.Display$TextDisplay"): typeof Internal.Display$TextDisplay;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.core.dispenser.DispenseItemBehavior"): Internal.DispenseItemBehavior;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.AirBlock"): typeof Internal.AirBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.effects.EffectCurse_Of_Desert"): typeof Internal.EffectCurse_Of_Desert;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "snownee.jade.api.callback.JadeRenderBackgroundCallback"): Internal.JadeRenderBackgroundCallback;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "top.theillusivec4.curios.api.type.capability.ICurio$SoundInfo"): typeof Internal.ICurio$SoundInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.monster.Silverfish"): typeof Internal.Silverfish;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.GalenaSpireBlock"): typeof Internal.GalenaSpireBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.icon.IResourceIcon"): Internal.IResourceIcon;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.architectury.core.fluid.ArchitecturyFluidAttributes"): Internal.ArchitecturyFluidAttributes;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "snownee.jade.api.platform.CustomEnchantPower"): Internal.CustomEnchantPower;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.view.KeyEvent$DispatcherState"): typeof Internal.KeyEvent$DispatcherState;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.security.Guard"): Internal.Guard;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.horse.Llama$Variant"): typeof Internal.Llama$Variant;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.illusivesoulworks.comforts.common.block.entity.BaseComfortsBlockEntity"): typeof Internal.BaseComfortsBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "vazkii.patchouli.client.book.BookCategory"): typeof Internal.BookCategory;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.realmsclient.dto.RealmsServerPing"): typeof Internal.RealmsServerPing;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.text.UnicodeSet$SpanCondition"): typeof Internal.UnicodeSet$SpanCondition;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.player.AttackEntityEvent"): typeof Internal.AttackEntityEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.rhino.mod.util.color.SimpleColor"): typeof Internal.SimpleColor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.yungnickyoung.minecraft.yungsapi.world.structure.terrainadaptation.EnhancedTerrainAdaptation"): typeof Internal.EnhancedTerrainAdaptation;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.configurations.BlockStateConfiguration"): typeof Internal.BlockStateConfiguration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.map.ExpandedMapData"): Internal.ExpandedMapData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.fnc.common.item.MischiefArmorItem"): typeof Internal.MischiefArmorItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.faction.IFaction"): Internal.IFaction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.dnd.DropTargetContext"): typeof Internal.DropTargetContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.debug.GoalSelectorDebugRenderer$DebugGoal"): typeof Internal.GoalSelectorDebugRenderer$DebugGoal;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.sorcery.ItemFoxStaff"): typeof Internal.ItemFoxStaff;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.kosmx.playerAnim.core.util.Vec3f"): typeof Internal.Vec3f;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.item.custom.HandheldItemBuilder"): typeof Internal.HandheldItemBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "snownee.jade.api.IEntityComponentProvider"): Internal.IEntityComponentProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.AllSpecialTextures"): typeof Internal.AllSpecialTextures;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "pie.ilikepiefoo.compat.jade.builder.callback.GetServerGroupsCallbackJS"): typeof Internal.GetServerGroupsCallbackJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.SpreadingSnowyDirtBlock"): typeof Internal.SpreadingSnowyDirtBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.amendments.common.block.WaterloggedLilyBlock"): typeof Internal.WaterloggedLilyBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.CaveVinesBlock"): typeof Internal.CaveVinesBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.util.math.collision.CollisionCoordinator"): typeof Internal.CollisionCoordinator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.CauldronBlock"): typeof Internal.CauldronBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.guidebook.IGuideBookRegistry"): Internal.IGuideBookRegistry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.longs.LongIterable"): Internal.LongIterable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.font.glyphs.BakedGlyph"): typeof Internal.BakedGlyph;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundBossEventPacket$Operation"): Internal.ClientboundBossEventPacket$Operation;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ViewportEvent$ComputeFogColor"): typeof Internal.ViewportEvent$ComputeFogColor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.FontMetrics"): typeof Internal.FontMetrics;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.guidebook.RecipeRendererBase"): typeof Internal.RecipeRendererBase;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.particles.IParticleMoveType"): Internal.IParticleMoveType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.integration.forge.jei.HideCustomJEIEventJS"): typeof Internal.HideCustomJEIEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.level.BlockEvent$EntityPlaceEvent"): typeof Internal.BlockEvent$EntityPlaceEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.text.FieldPosition"): typeof Internal.FieldPosition;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.telemetry.TelemetryEventInstance"): typeof Internal.TelemetryEventInstance;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.joml.Vector2d"): typeof Internal.Vector2d;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.configurations.LargeDripstoneConfiguration"): typeof Internal.LargeDripstoneConfiguration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.entities.construct.materials.ConstructMaterialObsidian"): typeof Internal.ConstructMaterialObsidian;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "me.Thelnfamous1.bettermobcombat.api.MobAttackAnimation"): Internal.MobAttackAnimation;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.ui.input.MouseButton"): typeof Internal.MouseButton;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.rhino.util.Remapper"): Internal.Remapper;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.util.Freezable"): Internal.Freezable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ScreenEvent$MouseScrolled"): typeof Internal.ScreenEvent$MouseScrolled;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.blaze3d.vertex.VertexFormatElement$Type"): typeof Internal.VertexFormatElement$Type;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "me.jellysquid.mods.sodium.client.render.SodiumWorldRenderer"): typeof Internal.SodiumWorldRenderer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.attributes.RangedAttribute"): typeof Internal.RangedAttribute;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.graphics.Image"): typeof icyllis.modernui.graphics.Image;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.core.Registry"): Internal.Registry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jozufozu.flywheel.util.transform.TransformStack"): Internal.TransformStack;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.fluid.AcidFluidType"): typeof Internal.AcidFluidType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.animation.StateListAnimator"): typeof Internal.StateListAnimator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.living.vanilla.DolphinJSBuilder"): typeof Internal.DolphinJSBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.Mesh"): Internal.Mesh;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.pools.EmptyPoolElement"): typeof Internal.EmptyPoolElement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.lodestar.lodestone.systems.particle.world.options.LodestoneItemCrumbsParticleOptions"): typeof Internal.LodestoneItemCrumbsParticleOptions;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.util.ULocale$Category"): typeof Internal.ULocale$Category;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.level.NoteBlockEvent$Play"): typeof Internal.NoteBlockEvent$Play;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.CeilingHangingSignBlock"): typeof Internal.CeilingHangingSignBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.ponder.SceneBuildingUtil$VectorUtil"): typeof Internal.SceneBuildingUtil$VectorUtil;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.prunoideae.powerfuljs.events.forge.DynamicEntityEventJS"): typeof Internal.DynamicEntityEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.village.ReputationEventType"): Internal.ReputationEventType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "vice.satisfying_buttons.accessors.IAbstractButtonAccessor"): Internal.IAbstractButtonAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.registries.IForgeRegistry$ClearCallback"): Internal.IForgeRegistry$ClearCallback;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.EventListener"): Internal.EventListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.Rectangle"): typeof Internal.Rectangle;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.ServerAdvancementManager"): typeof Internal.ServerAdvancementManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.text.UnicodeFilter"): typeof Internal.UnicodeFilter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.time.OffsetTime"): typeof Internal.OffsetTime;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.world.StructureModifier"): Internal.StructureModifier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.ingredients.IIngredientHelper"): Internal.IIngredientHelper;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.BlockEntity"): typeof Internal.BlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$MovementContext"): typeof Internal.ContextUtils$MovementContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.extensions.IForgeEnchantment"): Internal.IForgeEnchantment;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.rituals.RitualReagent"): typeof Internal.RitualReagent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.tree.PostfixExpression"): typeof Internal.PostfixExpression;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.floats.Float2DoubleFunction"): Internal.Float2DoubleFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.LoggerContext"): typeof Internal.LoggerContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.featuresize.ThreeLayersFeatureSize"): typeof Internal.ThreeLayersFeatureSize;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.common.collect.Table"): Internal.Table;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.SolidBucketItem"): typeof Internal.SolidBucketItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.valueproviders.UniformInt"): typeof Internal.UniformInt;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.types.templates.TaggedChoice$TaggedChoiceType"): typeof Internal.TaggedChoice$TaggedChoiceType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.FallingBlockWithColor"): typeof Internal.FallingBlockWithColor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.lang.Number"): typeof number;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.almostreliable.lootjs.kube.builder.DamageSourcePredicateBuilderJS"): typeof Internal.DamageSourcePredicateBuilderJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.spectator.categories.SpectatorPage"): typeof Internal.SpectatorPage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.HourGlassBlock"): typeof Internal.HourGlassBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.crafting.ShapelessRecipe"): typeof Internal.ShapelessRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.CompostableRecipesEventJS"): typeof Internal.CompostableRecipesEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.nick.chimes.block.CarvedBambooWindChimeBlock"): typeof Internal.CarvedBambooWindChimeBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.entities.BombEntity$BreakingMode"): typeof Internal.BombEntity$BreakingMode;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.utility.animation.LerpedFloat"): typeof Internal.LerpedFloat;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.attributes.AttributeModifier"): typeof Internal.AttributeModifier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.sorcery.ItemBangle"): typeof Internal.ItemBangle;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.artifice.EldrinConduitBlock"): typeof Internal.EldrinConduitBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.PathfinderMob"): typeof Internal.PathfinderMob;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.misc.ParticleTypeBuilder"): typeof Internal.ParticleTypeBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.impl.component.config.SideConfig$Template"): typeof Internal.SideConfig$Template;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.electronwill.nightconfig.core.file.FileConfigBuilder"): typeof Internal.FileConfigBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.TreeMap"): typeof Internal.TreeMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundCooldownPacket"): typeof Internal.ClientboundCooldownPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.horse.Llama"): typeof Internal.Llama;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.treedecorators.TreeDecorator"): typeof Internal.TreeDecorator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.telemetry.WorldSessionTelemetryManager"): typeof Internal.WorldSessionTelemetryManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.gui.overlay.ForgeGui"): typeof Internal.ForgeGui;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.ReportedException"): typeof Internal.ReportedException;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.manaweaving.ManaweavingAltarBlock"): typeof Internal.ManaweavingAltarBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.harmful.EffectMindControl"): typeof Internal.EffectMindControl;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ScreenEvent$MouseDragged$Pre"): typeof Internal.ScreenEvent$MouseDragged$Pre;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.joml.Vector4f"): typeof Vec4f;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "javax.accessibility.AccessibleComponent"): Internal.AccessibleComponent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.core.misc.CaveFilter"): typeof Internal.CaveFilter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.bettercombat.logic.PlayerAttackProperties"): Internal.PlayerAttackProperties;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.core.Quaternion"): typeof Internal.Quaternion;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.rhino.UniqueTag"): typeof Internal.UniqueTag;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.telepathicgrunt.tact.mixin.BlockStateBaseAccessor"): Internal.BlockStateBaseAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.ShearsItem"): typeof Internal.ShearsItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.ClipContext"): typeof Internal.ClipContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.TubeWormBlock"): typeof Internal.TubeWormBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.loot.functions.LootItemFunction"): Internal.LootItemFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.fnc.compat.dmnr.common.item.MischiefDragonMageArmorItem"): typeof Internal.MischiefDragonMageArmorItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.TerrainAdjustment"): typeof Internal.TerrainAdjustment;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.worldgen.MAFlowerBlock"): typeof Internal.MAFlowerBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.Rect2i"): typeof Internal.Rect2i;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.AbstractFurnaceBlock"): typeof Internal.AbstractFurnaceBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.fluids.FoodProvider"): typeof Internal.FoodProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.ModBlockProperties$Rune"): typeof Internal.ModBlockProperties$Rune;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.keksuccino.fancymenu.util.resource.Resource"): de.keksuccino.fancymenu.util.resource.Resource;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.api.upgrade.IRecipeModifier$OPERATION"): typeof Internal.IRecipeModifier$OPERATION;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.PointedDripstoneBlock"): typeof Internal.PointedDripstoneBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.mixin.ParticleAccessor"): Internal.ParticleAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.amendments.common.block.CarpetSlabBlock"): typeof Internal.CarpetSlabBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.lookup.StrMatcher$StringMatcher"): typeof Internal.StrMatcher$StringMatcher;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.inventory.BrewingStandMenu"): typeof Internal.BrewingStandMenu;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.gui.overlay.IGuiOverlay"): Internal.IGuiOverlay;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.gson.internal.Excluder"): typeof Internal.Excluder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.effects.EffectAbyssal_Fear"): typeof Internal.EffectAbyssal_Fear;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.profiling.metrics.MetricSampler"): typeof Internal.MetricSampler;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.ForsakenIdolBlock"): typeof Internal.ForsakenIdolBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.living.MobSpawnEvent$FinalizeSpawn"): typeof Internal.MobSpawnEvent$FinalizeSpawn;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.level.WorldGenRegion"): typeof Internal.WorldGenRegion;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.realmsclient.dto.ReflectionBasedSerialization"): Internal.ReflectionBasedSerialization;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.authlib.properties.PropertyMap"): typeof Internal.PropertyMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.puffish.attributesmod.mixin.EntityAttributeInstanceInvoker"): Internal.EntityAttributeInstanceInvoker;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "pie.ilikepiefoo.compat.jade.WailaClientRegistrationEventJS"): typeof Internal.WailaClientRegistrationEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.util.TriPredicate"): Internal.TriPredicate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.util.Either$Right"): typeof Internal.Either$Right;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.targeting.TargetingConditions"): typeof Internal.TargetingConditions;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.tools.loot.Conditional"): typeof Internal.Conditional;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.sounds.WeighedSoundEvents"): typeof Internal.WeighedSoundEvents;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.effects.EffectAbyssal_Burn"): typeof Internal.EffectAbyssal_Burn;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.biome.MultiNoiseBiomeSourceParameterList$Preset"): typeof Internal.MultiNoiseBiomeSourceParameterList$Preset;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.keksuccino.fancymenu.mixin.mixins.common.client.IMixinAbstractWidget"): Internal.IMixinAbstractWidget;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.client.painter.PaintEventJS"): typeof Internal.PaintEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.placement.HeightRangePlacement"): typeof Internal.HeightRangePlacement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.validation.ForbiddenSymlinkInfo"): typeof Internal.ForbiddenSymlinkInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.item.ItemClickedEventJS"): typeof Internal.ItemClickedEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.client.particle.TrackLightningParticle$OrbData"): typeof Internal.TrackLightningParticle$OrbData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.dmnr.common.block.RiftEmitterBlock"): typeof Internal.RiftEmitterBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.forgespi.language.IConfigurable"): Internal.IConfigurable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.synchronization.brigadier.StringArgumentSerializer$Template"): typeof Internal.StringArgumentSerializer$Template;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplate$Palette"): typeof Internal.StructureTemplate$Palette;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.Cat"): typeof Internal.Cat;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.gson.FieldAttributes"): typeof Internal.FieldAttributes;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.items.inventory.ISpellBookInventory"): Internal.ISpellBookInventory;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.item.DarkenedAppleItem"): typeof Internal.DarkenedAppleItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.synchronization.brigadier.IntegerArgumentInfo"): typeof Internal.IntegerArgumentInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "me.jellysquid.mods.sodium.client.render.immediate.model.ModelCuboid"): typeof Internal.ModelCuboid;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.profiling.metrics.MetricSampler$ThresholdTest"): Internal.MetricSampler$ThresholdTest;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.DirectionalBlock"): typeof Internal.DirectionalBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.sorcery.SpectralStonecutterBlock"): typeof Internal.SpectralStonecutterBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "me.jellysquid.mods.sodium.mixin.features.textures.animations.tracking.SpriteContentsAnimationFrameAccessor"): me.jellysquid.mods.sodium.mixin.features.textures.animations.tracking.SpriteContentsAnimationFrameAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.joml.Matrix2dc"): Internal.Matrix2dc;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexthe666.citadel.item.ItemCustomRender"): typeof Internal.ItemCustomRender;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.amendments.common.block.LiquidCauldronBlock"): typeof Internal.LiquidCauldronBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.ints.IntArrayList"): typeof Internal.IntArrayList;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.lwjgl.system.NativeResource"): Internal.NativeResource;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "javax.swing.text.AttributeSet$ColorAttribute"): Internal.AttributeSet$ColorAttribute;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.entity.util.EntityDropChanceAccessor"): Internal.EntityDropChanceAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.graphics.drawable.Drawable"): typeof icyllis.modernui.graphics.drawable.Drawable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.serialization.RecordBuilder"): Internal.RecordBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.Commands"): typeof Internal.Commands;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.FlintBlock"): typeof Internal.FlintBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.GameRules$Category"): typeof Internal.GameRules$Category;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.chat.SignedMessageValidator"): Internal.SignedMessageValidator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.lodestar.lodestone.systems.particle.world.behaviors.components.SparkBehaviorComponent"): typeof Internal.SparkBehaviorComponent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.ponder.SceneBuildingUtil$SelectionUtil"): typeof Internal.SceneBuildingUtil$SelectionUtil;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.network.messages.TileEntityClientMessage"): typeof Internal.TileEntityClientMessage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.potion.StunnedEffect"): typeof Internal.StunnedEffect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.templatesystem.RuleTestType"): Internal.RuleTestType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.yungnickyoung.minecraft.betteroceanmonuments.mixin.accessor.StructureProcessorAccessor"): Internal.StructureProcessorAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.BuddingAmethystBlock"): typeof Internal.BuddingAmethystBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.serialization.MapLike"): Internal.MapLike;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.player.PlayerDestroyItemEvent"): typeof Internal.PlayerDestroyItemEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.decoration.LeashFenceKnotEntity"): typeof Internal.LeashFenceKnotEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.longs.AbstractLong2ObjectMap"): typeof Internal.AbstractLong2ObjectMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "Tavi007.ElementalCombat.enchantments.ElementalResistanceEnchantment$Type"): typeof Internal.ElementalResistanceEnchantment$Type;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.random.Weight"): typeof Internal.Weight;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.utility.worldWrappers.WrappedWorld"): typeof Internal.WrappedWorld;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.SeaPickleBlock"): typeof Internal.SeaPickleBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "kotlinx.serialization.KSerializer"): Internal.KSerializer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.cerbon.bosses_of_mass_destruction.item.custom.SoulStarItem"): typeof Internal.SoulStarItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.ChunkRenderTypeSet"): typeof Internal.ChunkRenderTypeSet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.forgespi.language.ModFileScanData$AnnotationData"): typeof Internal.ModFileScanData$AnnotationData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.longs.LongBidirectionalIterator"): Internal.LongBidirectionalIterator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.OptionInstance$TooltipSupplier"): Internal.OptionInstance$TooltipSupplier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.entities.living.vanilla.CatEntityJS"): typeof Internal.CatEntityJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.client.render.box.QuadGeneratorContext"): typeof Internal.QuadGeneratorContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.crafting.RecipeType"): Internal.RecipeType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.font.glyphs.BakedGlyph$Effect"): typeof Internal.BakedGlyph$Effect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.schema.RecipeNamespace"): typeof Internal.RecipeNamespace;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.HopperBlock"): typeof Internal.HopperBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.FossilFeatureConfiguration"): typeof Internal.FossilFeatureConfiguration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundSetScorePacket"): typeof Internal.ClientboundSetScorePacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.PacketSendListener"): Internal.PacketSendListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.placement.NoiseBasedCountPlacement"): typeof Internal.NoiseBasedCountPlacement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.GuiMessageTag$Icon"): typeof Internal.GuiMessageTag$Icon;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.ticks.LevelTickAccess"): Internal.LevelTickAccess;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.gson.ExclusionStrategy"): Internal.ExclusionStrategy;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.energy.IEnergyStorage"): Internal.IEnergyStorage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.components.toasts.ToastComponent$ToastInstance"): typeof Internal.ToastComponent$ToastInstance;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.SurfaceSystem"): typeof Internal.SurfaceSystem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.BarrelBlock"): typeof Internal.BarrelBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.RenderHighlightEvent"): typeof Internal.RenderHighlightEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.server.world.feature.structure.WroughtnautChamberStructure"): typeof Internal.WroughtnautChamberStructure;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "top.theillusivec4.curios.api.type.util.ISlotHelper"): Internal.ISlotHelper;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.util.NanoClock"): Internal.NanoClock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "malte0811.ferritecore.fastmap.FastMapKey"): typeof Internal.FastMapKey;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.item.custom.ShovelItemBuilder"): typeof Internal.ShovelItemBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.keksuccino.fancymenu.util.rendering.ui.screen.CustomizableScreen"): Internal.CustomizableScreen;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.core.mixins.forge.SelfEntitySpawnDataMixin"): Internal.SelfEntitySpawnDataMixin;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.DropperBlock"): typeof Internal.DropperBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.DyeColor"): typeof Internal.DyeColor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.crafting.FireworkStarFadeRecipe"): typeof Internal.FireworkStarFadeRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.heightproviders.VeryBiasedToBottomHeight"): typeof Internal.VeryBiasedToBottomHeight;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.arguments.EntityAnchorArgument$Anchor"): typeof Internal.EntityAnchorArgument$Anchor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.living.MobSpawnEvent$AllowDespawn"): typeof Internal.MobSpawnEvent$AllowDespawn;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.gui.handlers.IGuiContainerHandler"): Internal.IGuiContainerHandler;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ScreenEvent$KeyPressed"): typeof Internal.ScreenEvent$KeyPressed;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.TextureProxy"): typeof Internal.TextureProxy;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.beneficial.EffectEldrinSight"): typeof Internal.EffectEldrinSight;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.item.FoodEatenEventJS"): typeof Internal.FoodEatenEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.doubles.DoubleSpliterator"): Internal.DoubleSpliterator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "pie.ilikepiefoo.compat.jade.builder.JadeProviderBuilder"): typeof Internal.JadeProviderBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.potion.BubbledEffect"): typeof Internal.BubbledEffect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.core.Blender"): icyllis.arc3d.core.Blender;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.rhino.util.CustomJavaToJsWrapper"): Internal.CustomJavaToJsWrapper;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.keksuccino.fancymenu.mixin.mixins.common.client.IMixinSplashRenderer"): Internal.IMixinSplashRenderer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.component.RecipeComponentBuilderMap"): typeof Internal.RecipeComponentBuilderMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundSetCarriedItemPacket"): typeof Internal.ClientboundSetCarriedItemPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.nbt.ByteArrayTag"): typeof Internal.ByteArrayTag;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbteams.api.property.TeamPropertyCollection"): Internal.TeamPropertyCollection;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap"): typeof Internal.Object2IntOpenHashMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.inventory.ClickType"): typeof Internal.ClickType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.common.collect.ImmutableMultimap$Builder"): typeof Internal.ImmutableMultimap$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.WorldgenRandom$Algorithm"): typeof Internal.WorldgenRandom$Algorithm;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.resources.model.ModelBakery"): typeof Internal.ModelBakery;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.block.DetectorBlockEventJS"): typeof Internal.DetectorBlockEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.blaze3d.preprocessor.GlslPreprocessor"): typeof Internal.GlslPreprocessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.common.collect.ImmutableEnumMap"): typeof Internal.ImmutableEnumMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.core.keyframe.event.data.SoundKeyframeData"): typeof Internal.SoundKeyframeData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.vulkan.VulkanAllocation"): typeof Internal.VulkanAllocation;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.recipes.manaweaving.TransmutationRecipe"): typeof Internal.TransmutationRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.core.MessageSenderKJS"): Internal.MessageSenderKJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.core.FireworkRocketEntityKJS"): Internal.FireworkRocketEntityKJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.tags.TagManager"): typeof Internal.TagManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "javax.accessibility.AccessibleRelation"): typeof Internal.AccessibleRelation;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.monster.Giant"): typeof Internal.Giant;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.GlassBlock"): typeof Internal.GlassBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.core.animation.AnimationState"): typeof software.bernie.geckolib.core.animation.AnimationState;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.server.potion.EffectPoisonResist"): typeof Internal.EffectPoisonResist;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.electronwill.nightconfig.core.ConfigSpec$CorrectionListener"): Internal.ConfigSpec$CorrectionListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.keksuccino.fancymenu.util.resource.resources.audio.PlayableResourceWithAudio"): Internal.PlayableResourceWithAudio;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.fluids.capability.IFluidHandler"): Internal.IFluidHandler;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.entities.construct.IConstruct"): Internal.IConstruct;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.particles.parameters.ParticleBoolean"): typeof Internal.ParticleBoolean;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.core.animation.AnimatableManager$ControllerRegistrar"): typeof Internal.AnimatableManager$ControllerRegistrar;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.material.WaterFluid"): typeof Internal.WaterFluid;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.raphimc.immediatelyfast.injection.interfaces.IMapRenderer"): Internal.IMapRenderer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.Display$FloatInterpolator"): Internal.Display$FloatInterpolator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.common.reflect.Invokable"): typeof Internal.Invokable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.memory.MemoryModuleType"): typeof Internal.MemoryModuleType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.artifice.curio.ItemEldrinBracelet"): typeof Internal.ItemEldrinBracelet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.blaze3d.vertex.DefaultedVertexConsumer"): typeof Internal.DefaultedVertexConsumer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.BoundingBox"): typeof Internal.BoundingBox;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.bindings.JavaWrapper"): typeof Internal.JavaWrapper;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.crafting.TippedArrowRecipe"): typeof Internal.TippedArrowRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jozufozu.flywheel.light.LightListener"): Internal.LightListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.level.ExplosionEvent$Detonate"): typeof Internal.ExplosionEvent$Detonate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.security.Permission"): typeof Internal.Permission;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.architectury.registry.level.biome.BiomeModifications$BiomeContext"): Internal.BiomeModifications$BiomeContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.DirtPathBlock"): typeof Internal.DirtPathBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.dmnr.api.armorupgrade.ArmorUpgrade"): typeof Internal.ArmorUpgrade;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.brigadier.exceptions.BuiltInExceptionProvider"): Internal.BuiltInExceptionProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.chunk.PalettedContainerRO"): Internal.PalettedContainerRO;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.horse.Horse"): typeof Internal.Horse;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.nonliving.BaseEntityBuilder$IParticleListenerJS"): Internal.BaseEntityBuilder$IParticleListenerJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.entity.Visibility"): typeof Internal.Visibility;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.yungnickyoung.minecraft.betterdeserttemples.world.state.ITempleStateCacheProvider"): Internal.ITempleStateCacheProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.entity.ItemRenderer"): typeof Internal.ItemRenderer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.layout.ByteBufferDestination"): Internal.ByteBufferDestination;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.searchtree.SearchRegistry"): typeof Internal.SearchRegistry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "kotlinx.serialization.SerializationStrategy"): Internal.SerializationStrategy;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.realmsclient.gui.task.DataFetcher$Task"): typeof Internal.DataFetcher$Task;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.TremorzillaEggBlock"): typeof Internal.TremorzillaEggBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.tree.TranslationUnit"): typeof Internal.TranslationUnit;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.chunk.PalettedContainer$CountConsumer"): Internal.PalettedContainer$CountConsumer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundSetBorderSizePacket"): typeof Internal.ClientboundSetBorderSizePacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.CreativeModeTab$Row"): typeof Internal.CreativeModeTab$Row;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.event.MouseWheelEvent"): typeof Internal.MouseWheelEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.function.LongToDoubleFunction"): Internal.LongToDoubleFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.embeddedt.modernfix.duck.IBlockState"): Internal.IBlockState;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.core.DisplayInfoFTBL"): Internal.DisplayInfoFTBL;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.ItemStack"): typeof Internal.ItemStack;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.prunoideae.powerfuljs.capabilities.forge.mods.curios.CapabilityCurios"): typeof Internal.CapabilityCurios;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.KelpFeature"): typeof Internal.KelpFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.kosmx.playerAnim.impl.IUpperPartHelper"): Internal.IUpperPartHelper;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.entities.living.vanilla.IllusionerEntityJS"): typeof Internal.IllusionerEntityJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.ForgeMod$2"): typeof Internal.ForgeMod$2;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.Products$P15"): typeof Internal.Products$P15;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.biome.AmbientParticleSettings"): typeof Internal.AmbientParticleSettings;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.electronwill.nightconfig.core.file.CommentedFileConfig"): Internal.CommentedFileConfig;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.PaintContext"): Internal.PaintContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.xylonity.knightquest.common.client.GeoItemArmor"): typeof Internal.GeoItemArmor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.blockentity.BlockEntityRendererProvider$Context"): typeof Internal.BlockEntityRendererProvider$Context;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.text.DateFormat$BooleanAttribute"): typeof Internal.DateFormat$BooleanAttribute;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.concurrent.CompletableFuture"): typeof Internal.CompletableFuture;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.enchantments.Cloudstep"): typeof Internal.Cloudstep;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.entities.living.entityjs.WaterEntityJS"): typeof Internal.WaterEntityJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.arguments.ScoreHolderArgument$Info"): typeof Internal.ScoreHolderArgument$Info;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.Tier"): Internal.Tier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.util.TriConsumer"): Internal.TriConsumer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.serialization.Decoder$Terminal"): Internal.Decoder$Terminal;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.server.permission.nodes.PermissionNode$PermissionResolver"): Internal.PermissionNode$PermissionResolver;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.monster.PatrollingMonster"): typeof Internal.PatrollingMonster;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.serialization.DataResult$PartialResult"): typeof Internal.DataResult$PartialResult;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.client.particle.StormParticle$OrbData"): typeof Internal.StormParticle$OrbData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.base.IItemWithGui"): Internal.IItemWithGui;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.datatransfer.Transferable"): Internal.Transferable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.misc.EnchantmentBuilder$DamageBonusFunction"): Internal.EnchantmentBuilder$DamageBonusFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.nbt.ShortTag"): typeof Internal.ShortTag;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.CakeBlock"): typeof Internal.CakeBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.random.WeightedEntry"): Internal.WeightedEntry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.block.WaterBlock"): typeof Internal.WaterBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jozufozu.flywheel.backend.instancing.RenderTypeExtension"): Internal.RenderTypeExtension;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.LeverBlock"): typeof Internal.LeverBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.stateproviders.NoiseProvider"): typeof Internal.NoiseProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.unit.MutableNumberUnit"): typeof Internal.MutableNumberUnit;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.ExtraCodecs$LazyInitializedCodec"): typeof Internal.ExtraCodecs$LazyInitializedCodec;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.SignatureUpdater"): Internal.SignatureUpdater;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.brigadier.context.StringRange"): typeof Internal.StringRange;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.gui.handlers.IGhostIngredientHandler$Target"): Internal.IGhostIngredientHandler$Target;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.TypedOptic$Element"): typeof Internal.TypedOptic$Element;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.brigadier.context.SuggestionContext"): typeof Internal.SuggestionContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.lighting.LayerLightSectionStorage$SectionType"): typeof Internal.LayerLightSectionStorage$SectionType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.packs.resources.SimpleJsonResourceReloadListener"): typeof Internal.SimpleJsonResourceReloadListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.trunkplacers.TrunkPlacer"): typeof Internal.TrunkPlacer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.ComplexItem"): typeof Internal.ComplexItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.integration.kubejs.CustomMachineBlockBuilderJS"): typeof Internal.CustomMachineBlockBuilderJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.screens.worldselection.WorldCreationUiState"): typeof Internal.WorldCreationUiState;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.SignApplicator"): Internal.SignApplicator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.TorchflowerCropBlock"): typeof Internal.TorchflowerCropBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.beneficial.EffectTelekinesis"): typeof Internal.EffectTelekinesis;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.events.ObjectCompletedEvent$QuestEvent"): typeof Internal.ObjectCompletedEvent$QuestEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.EntityRenderersEvent$CreateSkullModels"): typeof Internal.EntityRenderersEvent$CreateSkullModels;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.OwnableEntity"): Internal.OwnableEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.BoatItem"): typeof Internal.BoatItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.AmethystBlock"): typeof Internal.AmethystBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.core.animatable.model.CoreGeoBone"): Internal.CoreGeoBone;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.recipes.multiblock.block_matchers.StatelessBlockMatcher"): typeof Internal.StatelessBlockMatcher;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.helpers.IPlatformFluidHelper"): Internal.IPlatformFluidHelper;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.fnc.common.effect.harmful.BadWildMagicMobEffect"): typeof Internal.BadWildMagicMobEffect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.living.vanilla.SlimeJSBuilder"): typeof Internal.SlimeJSBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.NuclearSirenBlock"): typeof Internal.NuclearSirenBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.commons.lang3.tuple.Triple"): typeof Internal.Triple;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.abdelaziz.canary.common.entity.EntityClassGroup"): typeof Internal.EntityClassGroup;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "questsadditions.blocks.LootCrateBlock"): typeof Internal.LootCrateBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.vehicle.MinecartTNT"): typeof Internal.MinecartTNT;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.WallSignBlock"): typeof Internal.WallSignBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.RelativeMovement"): typeof Internal.RelativeMovement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.SculkShriekerBlockEntity"): typeof Internal.SculkShriekerBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.almostreliable.lootjs.core.LootEntry"): typeof Internal.LootEntry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.almostreliable.ponderjs.api.ExtendedPonderStoryBoard"): Internal.ExtendedPonderStoryBoard;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.Window"): typeof Internal.Window;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.FrameTimer"): typeof Internal.FrameTimer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.pattern.TextRenderer"): Internal.TextRenderer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.components.toasts.Toast"): Internal.Toast;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.typings.desc.GenericDescJS"): typeof Internal.GenericDescJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.SortedSet"): Internal.SortedSet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.AbstractHugeMushroomFeature"): typeof Internal.AbstractHugeMushroomFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.RopeBlock"): typeof Internal.RopeBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.api.integration.jei.IDisplayInfo$ClickAction"): Internal.IDisplayInfo$ClickAction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.living.LivingEntityUseItemEvent$Finish"): typeof Internal.LivingEntityUseItemEvent$Finish;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.advancements.critereon.DistancePredicate"): typeof Internal.DistancePredicate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.common.cache.LoadingCache"): Internal.LoadingCache;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.player.PlayerInteractEvent$RightClickItem"): typeof Internal.PlayerInteractEvent$RightClickItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.gui.ingredient.IRecipeSlotDrawable"): Internal.IRecipeSlotDrawable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.util.TimeZone"): typeof com.ibm.icu.util.TimeZone;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.implementation.EventBasedSpawnModifier$BiomeSpawn"): typeof Internal.EventBasedSpawnModifier$BiomeSpawn;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.entity.CheckLivingEntitySpawnEventJS"): typeof Internal.CheckLivingEntitySpawnEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.core.ColorSpace"): typeof icyllis.arc3d.core.ColorSpace;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.crafting.machine.CustomMachineRecipeSerializer"): typeof Internal.CustomMachineRecipeSerializer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.placement.BlockPredicateFilter"): typeof Internal.BlockPredicateFilter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.capabilities.resource.ICastingResourceRegistry"): Internal.ICastingResourceRegistry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.time.chrono.ChronoLocalDate"): Internal.ChronoLocalDate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.Item"): typeof Internal.Item;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.Mob"): typeof Internal.Mob;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "me.jellysquid.mods.sodium.client.world.BiomeSeedProvider"): Internal.BiomeSeedProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.util.math.matrix.IVecOrigin"): Internal.IVecOrigin;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.effects.EffectBlessing_Of_Amethyst"): typeof Internal.EffectBlessing_Of_Amethyst;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.state.properties.BooleanProperty"): typeof Internal.BooleanProperty;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.multiplayer.ClientLevel"): typeof Internal.ClientLevel;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.level.ChunkHolder"): typeof Internal.ChunkHolder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.effect.HealthBoostMobEffect"): typeof Internal.HealthBoostMobEffect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.level.feature.ThornwoodTreeWithBranchesFeature"): typeof Internal.ThornwoodTreeWithBranchesFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.starfish_studios.bbb.block.UrnBlock"): typeof Internal.UrnBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.player.FillBucketEvent"): typeof Internal.FillBucketEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.Dictionary"): typeof Internal.Dictionary;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "pie.ilikepiefoo.compat.jade.builder.ServerDataProviderBuilder"): typeof Internal.ServerDataProviderBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$ScaleModelRenderContextNL"): typeof Internal.ContextUtils$ScaleModelRenderContextNL;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.blaze3d.font.GlyphProvider"): Internal.GlyphProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.brigadier.RedirectModifier"): Internal.RedirectModifier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "pie.ilikepiefoo.player.CustomDamageSourceJS"): typeof DamageSource;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.util.Currency$CurrencyUsage"): typeof Internal.Currency$CurrencyUsage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.client.particle.ParticleHandler$1"): typeof Internal.ParticleHandler$1;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.IGpuSurface"): Internal.IGpuSurface;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.abdelaziz.canary.common.entity.pushable.EntityPushablePredicate"): typeof Internal.EntityPushablePredicate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.text.DecimalFormatSymbols"): typeof Internal.DecimalFormatSymbols;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "Tavi007.ElementalCombat.api.ElementifyDamageSourceEvent"): typeof Internal.ElementifyDamageSourceEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.level.ChunkEvent$Unload"): typeof Internal.ChunkEvent$Unload;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "kotlinx.serialization.modules.SerializersModule"): typeof Internal.SerializersModule;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.almostreliable.ponderjs.particles.ParticleInstructions"): typeof Internal.ParticleInstructions;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.EnchantedGoldenAppleItem"): typeof Internal.EnchantedGoldenAppleItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.synchronization.brigadier.IntegerArgumentInfo$Template"): typeof Internal.IntegerArgumentInfo$Template;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.core.LazyComponentKJS"): Internal.LazyComponentKJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.manaweaving.ItemManaweavingPattern"): typeof Internal.ItemManaweavingPattern;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.foliageplacers.MegaJungleFoliagePlacer"): typeof Internal.MegaJungleFoliagePlacer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.jmx.RingBufferAdmin"): typeof Internal.RingBufferAdmin;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.recipes.IRuneforgeRecipe"): Internal.IRuneforgeRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.OffsetPlacerItem"): typeof Internal.OffsetPlacerItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.components.toasts.TutorialToast"): typeof Internal.TutorialToast;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.CoralBlock"): typeof Internal.CoralBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.client.ICustomItemRendererProvider"): Internal.ICustomItemRendererProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundCommandsPacket"): typeof Internal.ClientboundCommandsPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$PositionRiderContext"): typeof Internal.ContextUtils$PositionRiderContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.block.TaskScreenBlock$Aux"): typeof Internal.TaskScreenBlock$Aux;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.items.Khopesh"): typeof Internal.Khopesh;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.core.ColorSpace$Named"): typeof Internal.ColorSpace$Named;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.GameRenderer"): typeof Internal.GameRenderer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.core.keyframe.event.CustomInstructionKeyframeEvent"): typeof Internal.CustomInstructionKeyframeEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.CommandSourceStack"): typeof Internal.CommandSourceStack;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.renderer.GeoRenderer"): Internal.GeoRenderer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.ImmutableCollections$AbstractImmutableCollection"): typeof Internal.ImmutableCollections$AbstractImmutableCollection;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "vazkii.patchouli.client.book.AbstractReadStateHolder"): typeof Internal.AbstractReadStateHolder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.loot.LootTableEntry"): typeof Internal.LootTableEntry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.common.collect.RegularImmutableList"): typeof Internal.RegularImmutableList;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.text.ParsePosition"): typeof Internal.ParsePosition;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.configurations.TreeConfiguration"): typeof Internal.TreeConfiguration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.AttachCapabilitiesEvent"): typeof Internal.AttachCapabilitiesEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.registries.IForgeRegistry$AddCallback"): Internal.IForgeRegistry$AddCallback;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.network.NetworkEvent$GatherLoginPayloadsEvent"): typeof Internal.NetworkEvent$GatherLoginPayloadsEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.cerbon.bosses_of_mass_destruction.block.custom.ChiseledStoneAltarBlock"): typeof Internal.ChiseledStoneAltarBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.artifice.ItemLodestarCopier"): typeof Internal.ItemLodestarCopier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.serialization.MapCodec$ResultFunction"): Internal.MapCodec$ResultFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.EnumSet"): typeof Internal.EnumSet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.model.geom.PartPose"): typeof Internal.PartPose;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.placement.RandomOffsetPlacement"): typeof Internal.RandomOffsetPlacement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.ritual.ItemWizardChalk"): typeof Internal.ItemWizardChalk;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.core.ColorSpace$Model"): typeof Internal.ColorSpace$Model;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.data.PackOutput$PathProvider"): typeof Internal.PackOutput$PathProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.enchantment.BindingCurseEnchantment"): typeof Internal.BindingCurseEnchantment;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.registry.RegistryEventJS"): typeof Internal.RegistryEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.StencilFaceSettings"): typeof Internal.StencilFaceSettings;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.chat.HoverEvent"): typeof Internal.HoverEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.BambooSpikesBlock"): typeof Internal.BambooSpikesBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.eventbus.api.EventPriority"): typeof Internal.EventPriority;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.model.ForgeFaceData"): typeof Internal.ForgeFaceData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.ArmorItem$Type"): typeof Internal.ArmorItem$Type;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.keksuccino.melody.mixin.mixins.common.client.IMixinSoundEngine"): Internal.IMixinSoundEngine;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.util.math.base.Axis"): typeof Internal.Axis;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.security.SecureRandom"): typeof Internal.SecureRandom;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.shorts.Short2FloatFunction"): Internal.Short2FloatFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.integration.kubejs.function.RecipeFunction"): Internal.RecipeFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.PopupMenu"): typeof Internal.PopupMenu;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.prunoideae.powerfuljs.capabilities.forge.CapabilityForgeEnergy$EnergyIOItemStack"): Internal.CapabilityForgeEnergy$EnergyIOItemStack;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.SurfaceProvider"): typeof Internal.SurfaceProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.Attackable"): Internal.Attackable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.thread.BlockableEventLoop"): typeof Internal.BlockableEventLoop;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.init.ModParticle$5"): typeof Internal.ModParticle$5;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.event.StartupEventJS"): typeof Internal.StartupEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.shorts.ShortListIterator"): Internal.ShortListIterator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.StainedGlassPaneBlock"): typeof Internal.StainedGlassPaneBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.ui.Panel"): typeof Internal.Panel;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.architectury.event.EventFactory$EventImpl"): typeof Internal.EventFactory$EventImpl;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.NetheriteDoorBlock"): typeof Internal.NetheriteDoorBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.advancements.AdvancementProgress"): typeof Internal.AdvancementProgress;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.forgespi.language.IModFileInfo"): Internal.IModFileInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.Sheep"): typeof Internal.Sheep;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.packs.repository.Pack"): typeof Internal.Pack;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.bettercombat.api.WeaponAttributes$Sound"): typeof Internal.WeaponAttributes$Sound;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.client.render.face.RenderBoxFace"): typeof Internal.RenderBoxFace;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.blocks.WizardLabBlock"): typeof Internal.WizardLabBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.view.MotionEvent"): typeof Internal.MotionEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.ui.WidgetType"): typeof Internal.WidgetType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.fluids.FluidType"): typeof Internal.FluidType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundAddEntityPacket"): typeof Internal.ClientboundAddEntityPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.abdelaziz.canary.common.block.entity.SleepingBlockEntity"): Internal.SleepingBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.carver.CaveWorldCarver"): typeof Internal.CaveWorldCarver;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.AddReloadListenerEvent"): typeof Internal.AddReloadListenerEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.carver.CarverDebugSettings"): typeof Internal.CarverDebugSettings;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.registries.IForgeRegistry$BakeCallback"): Internal.IForgeRegistry$BakeCallback;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.ints.Int2ObjectMap"): Internal.Int2ObjectMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.SuspiciousEffectHolder"): Internal.SuspiciousEffectHolder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.event.MouseEvent"): typeof Internal.MouseEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.outliner.Outliner$OutlineEntry"): typeof Internal.Outliner$OutlineEntry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.shading.VaryingHandler"): typeof Internal.VaryingHandler;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.entity.ImprovedProjectileEntity"): typeof Internal.ImprovedProjectileEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.ints.IntSpliterator"): Internal.IntSpliterator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.arguments.ScoreHolderArgument$Info$Template"): typeof Internal.ScoreHolderArgument$Info$Template;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.potion.DarknessIncarnateEffect"): typeof Internal.DarknessIncarnateEffect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.eventbus.api.IEventBusInvokeDispatcher"): Internal.IEventBusInvokeDispatcher;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.gui.event.GuiControlChangedEvent"): typeof Internal.GuiControlChangedEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jozufozu.flywheel.api.MaterialManager"): Internal.MaterialManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.capabilities.CodexBreadcrumb"): typeof Internal.CodexBreadcrumb;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.neutral.EffectShrink"): typeof Internal.EffectShrink;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.item.FoodBuilder"): typeof Internal.FoodBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2screentracker.screen.source.ItemSource"): typeof Internal.ItemSource;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.electronwill.nightconfig.core.UnmodifiableCommentedConfig$CommentNode"): typeof Internal.UnmodifiableCommentedConfig$CommentNode;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.GlowLichenBlock"): typeof Internal.GlowLichenBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.gui.controls.inventory.GuiSlotBase"): typeof Internal.GuiSlotBase;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.arguments.ArgumentSignatures$Signer"): Internal.ArgumentSignatures$Signer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.entities.living.vanilla.ZombieEntityJS"): typeof Internal.ZombieEntityJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.AcidBlock"): typeof Internal.AcidBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.DesertWellFeature"): typeof Internal.DesertWellFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "me.jellysquid.mods.sodium.client.model.color.interop.ItemColorsExtended"): Internal.ItemColorsExtended;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.resources.MobEffectTextureManager"): typeof Internal.MobEffectTextureManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.ArrayList"): typeof Internal.ArrayList;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.concurrent.locks.Condition"): Internal.Condition;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundLevelParticlesPacket"): typeof Internal.ClientboundLevelParticlesPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.nbt.StreamTagVisitor$EntryResult"): typeof Internal.StreamTagVisitor$EntryResult;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.level.feature.PingPongSpongeFeature"): typeof Internal.PingPongSpongeFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.nonliving.BaseEntityBuilder$IAnimationPredicateJS"): Internal.BaseEntityBuilder$IAnimationPredicateJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.navigation.ScreenDirection"): typeof Internal.ScreenDirection;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.living.LivingEntityUseItemEvent"): typeof Internal.LivingEntityUseItemEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "io.ejekta.bountiful.bounty.DecreeData"): typeof Internal.DecreeData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.LevelSimulatedReader"): Internal.LevelSimulatedReader;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.entities.living.entityjs.AnimalEntityJS"): typeof Internal.AnimalEntityJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.packs.PackResources"): Internal.PackResources;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.schedule.Schedule"): typeof Internal.Schedule;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.ints.IntPredicate"): it.unimi.dsi.fastutil.ints.IntPredicate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.entities.construct.materials.ConstructMaterialIron"): typeof Internal.ConstructMaterialIron;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.core.Holder"): Internal.Holder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.blaze3d.vertex.VertexSorting$DistanceFunction"): Internal.VertexSorting$DistanceFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.mc.text.mixin.AccessFontManager"): Internal.AccessFontManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.items.BubbleBlockItem"): typeof Internal.BubbleBlockItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.block.ILightable$FireSourceType"): typeof Internal.ILightable$FireSourceType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.SpawnerBlockEntity"): typeof Internal.SpawnerBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.Animal"): typeof Internal.Animal;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.abdelaziz.canary.common.shapes.OffsetVoxelShapeCache"): Internal.OffsetVoxelShapeCache;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.templatesystem.StructureProcessorType"): Internal.StructureProcessorType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.level.feature.AbyssalBoulderFeature"): typeof Internal.AbyssalBoulderFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.lodestar.lodestone.systems.easing.Easing$Back"): typeof Internal.Easing$Back;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.BigDripleafStemBlock"): typeof Internal.BigDripleafStemBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.item.QuestBookItem"): typeof Internal.QuestBookItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.almostreliable.lootjs.filters.Resolver"): typeof Internal.Resolver;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.security.SecureRandomParameters"): Internal.SecureRandomParameters;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.stateproviders.WeightedStateProvider"): typeof Internal.WeightedStateProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.DyeableHorseArmorItem"): typeof Internal.DyeableHorseArmorItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundPlayerAbilitiesPacket"): typeof Internal.ClientboundPlayerAbilitiesPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.items.CuriosItem.Sticky_Gloves"): typeof Internal.Sticky_Gloves;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.VerticalAnchor$AboveBottom"): typeof Internal.VerticalAnchor$AboveBottom;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.NeodymiumOreBlock"): typeof Internal.NeodymiumOreBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.spells.SpellCastingResult"): typeof Internal.SpellCastingResult;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.config.CronScheduledFuture"): typeof Internal.CronScheduledFuture;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.component.ItemComponents$4"): typeof Internal.ItemComponents$4;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$AutoAttackContext"): typeof Internal.ContextUtils$AutoAttackContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.chat.FormattedText$StyledContentConsumer"): Internal.FormattedText$StyledContentConsumer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.TickingBlockEntity"): Internal.TickingBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.enchantment.FishingSpeedEnchantment"): typeof Internal.FishingSpeedEnchantment;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.impl.codec.NamedRecordCodec"): typeof Internal.NamedRecordCodec;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.almostreliable.lootjs.loot.action.CompositeLootAction"): typeof Internal.CompositeLootAction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.TooltipFlag$Default"): typeof Internal.TooltipFlag$Default;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.navigation.FocusNavigationEvent$TabNavigation"): typeof Internal.FocusNavigationEvent$TabNavigation;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.DoubleBlockCombiner$NeighborCombineResult"): Internal.DoubleBlockCombiner$NeighborCombineResult;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.items.zweiender"): typeof Internal.zweiender;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.DropperBlockEntity"): typeof Internal.DropperBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.shorts.Short2DoubleFunction"): Internal.Short2DoubleFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.texture.Dumpable"): Internal.Dumpable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.nick.chimes.block.WindChimeTyableBlock"): typeof Internal.WindChimeTyableBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.text.TimeZoneNames$MatchInfo"): typeof Internal.TimeZoneNames$MatchInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.ui.CursorType"): typeof Internal.CursorType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.rhino.Context"): typeof Internal.Context;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.forgespi.locating.IModProvider"): Internal.IModProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.StandingAndWallBlockItem"): typeof Internal.StandingAndWallBlockItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.gossip.GossipContainer"): typeof Internal.GossipContainer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.IdentityHashMap"): typeof Internal.IdentityHashMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.AbyssmarineSlabBlock"): typeof Internal.AbyssmarineSlabBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.EntityRenderersEvent$RegisterRenderers"): typeof Internal.EntityRenderersEvent$RegisterRenderers;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "me.jellysquid.mods.sodium.mixin.core.model.BakedModelMixin"): Internal.BakedModelMixin;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.core.mixins.accessor.DispenserBlockEntityAccessor"): Internal.DispenserBlockEntityAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.ints.Int2ByteFunction"): Internal.Int2ByteFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.harmful.EffectSoulVulnerability"): typeof Internal.EffectSoulVulnerability;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.PostChain"): typeof Internal.PostChain;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.almostreliable.lootjs.core.LootContextType"): typeof LootType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.BidirectionalIterator"): Internal.BidirectionalIterator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.texture.SpriteContents"): typeof Internal.SpriteContents;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "pie.ilikepiefoo.compat.jei.events.RegisterCategoriesEventJS"): typeof Internal.RegisterCategoriesEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.RenderLivingEvent"): typeof Internal.RenderLivingEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2backpack.content.common.ContentTransfer$Quad"): Internal.ContentTransfer$Quad;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.crafting.MapCloningRecipe"): typeof Internal.MapCloningRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.BaseContainerBlockEntity"): typeof Internal.BaseContainerBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.brigadier.arguments.StringArgumentType$StringType"): typeof Internal.StringArgumentType$StringType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.extensions.IForgeBucketPickup"): Internal.IForgeBucketPickup;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.integration.kubejs.requirements.SkyRequirementJS"): Internal.SkyRequirementJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.living.ZombieEvent"): typeof Internal.ZombieEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.placement.PlacementContext"): typeof Internal.PlacementContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.player.PlayerContainerEvent$Open"): typeof Internal.PlayerContainerEvent$Open;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.status.ServerStatus$Players"): typeof Internal.ServerStatus$Players;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.Camera$NearPlane"): typeof Internal.Camera$NearPlane;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.illusivesoulworks.comforts.common.item.BaseComfortsItem"): typeof Internal.BaseComfortsItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.player.PlayerEvent$PlayerRespawnEvent"): typeof Internal.PlayerEvent$PlayerRespawnEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.ProgressListener"): Internal.ProgressListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundSetEntityDataPacket"): typeof Internal.ClientboundSetEntityDataPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.projectile.SpectralArrow"): typeof Internal.SpectralArrow;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.effect.MobEffect"): typeof Internal.MobEffect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.nbt.LongTag"): typeof Internal.LongTag;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.living.MobEffectEvent$Expired"): typeof Internal.MobEffectEvent$Expired;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.unascribed.fabrication.interfaces.GhastAttackTime"): Internal.GhastAttackTime;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.templatesystem.BlackstoneReplaceProcessor"): typeof Internal.BlackstoneReplaceProcessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.common.collect.ForwardingSet"): typeof Internal.ForwardingSet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.IWaxable"): Internal.IWaxable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.PrimitiveIterator$OfInt"): Internal.PrimitiveIterator$OfInt;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.KnowledgeBookItem"): typeof Internal.KnowledgeBookItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.maven.artifact.metadata.ArtifactMetadata"): Internal.ArtifactMetadata;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "snownee.jade.api.view.IClientExtensionProvider"): Internal.IClientExtensionProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.bytes.Byte2ObjectFunction"): Internal.Byte2ObjectFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.stateproviders.DualNoiseProvider"): typeof Internal.DualNoiseProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.amendments.common.ExtendedHangingSign"): Internal.ExtendedHangingSign;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "vazkii.patchouli.api.IComponentRenderContext"): Internal.IComponentRenderContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.irisshaders.batchedentityrendering.mixin.ChunkBufferBuilderPackAccessor"): Internal.ChunkBufferBuilderPackAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.player.PlayerEventJS"): typeof Internal.PlayerEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "snownee.jade.api.ui.ITooltipRenderer"): Internal.ITooltipRenderer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.irisshaders.iris.mixin.rendertype.RenderTypeAccessor"): Internal.RenderTypeAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.enchantments.Fireproof"): typeof Internal.Fireproof;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundPlayerInfoUpdatePacket"): typeof Internal.ClientboundPlayerInfoUpdatePacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.gui.controls.inventory.IGuiInventory"): Internal.IGuiInventory;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.EnderpearlItem"): typeof Internal.EnderpearlItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.blaze3d.platform.NativeImage"): typeof Internal.NativeImage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.boss.enderdragon.phases.DragonPhaseInstance"): Internal.DragonPhaseInstance;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.gameevent.vibrations.VibrationSystem"): Internal.VibrationSystem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.level.ServerLevel"): typeof Internal.ServerLevel;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.RegisterColorHandlersEvent"): typeof Internal.RegisterColorHandlersEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.chat.ChatType"): typeof Internal.ChatType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.registries.DataPackRegistryEvent"): typeof Internal.DataPackRegistryEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.events.construct.ConstructSprayEffectEvent"): typeof Internal.ConstructSprayEffectEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "me.fengming.renderjs.events.level.RenderEntityEventJS$Before"): typeof Internal.RenderEntityEventJS$Before;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.blockpredicates.ReplaceablePredicate"): typeof Internal.ReplaceablePredicate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.CompositeContext"): Internal.CompositeContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.item.IThirdPersonSpecialItemRenderer"): Internal.IThirdPersonSpecialItemRenderer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.misc.Triplet"): typeof Internal.Triplet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.beneficial.EffectBindWounds"): typeof Internal.EffectBindWounds;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.gameevent.vibrations.VibrationInfo"): typeof Internal.VibrationInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.joml.Matrix3fc"): Internal.Matrix3fc;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$EntityTypeEntityContext"): typeof Internal.ContextUtils$EntityTypeEntityContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.EntityLeaveLevelEvent"): typeof Internal.EntityLeaveLevelEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$CanTrampleContext"): typeof Internal.ContextUtils$CanTrampleContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.level.feature.GiantAncientTreeFeature"): typeof Internal.GiantAncientTreeFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "kotlin.jvm.functions.Function1"): Internal.Function1;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.common.collect.ImmutableList$Builder"): typeof Internal.ImmutableList$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.BlastFurnaceBlock"): typeof Internal.BlastFurnaceBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.longs.Long2DoubleFunction"): Internal.Long2DoubleFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.damagesource.DamageSource"): typeof Internal.DamageSource;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.mixin.VoxelShapeAccessor"): Internal.VoxelShapeAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.nonliving.entityjs.ProjectileEntityBuilder"): typeof Internal.ProjectileEntityBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.items.SliceMapItem"): typeof Internal.SliceMapItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.level.feature.TeslaBulbFeature"): typeof Internal.TeslaBulbFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.util.BrainBuilder"): typeof Internal.BrainBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundRecipeBookSeenRecipePacket"): typeof Internal.ServerboundRecipeBookSeenRecipePacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.core.ImageInfo"): typeof Internal.ImageInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.blocks.ObsidianExplosionTrapBricks"): typeof Internal.ObsidianExplosionTrapBricks;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.objects.AbstractObject2FloatMap"): typeof Internal.AbstractObject2FloatMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.sensing.WardenEntitySensor"): typeof Internal.WardenEntitySensor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.function.BinaryOperator"): Internal.BinaryOperator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.events.forge.VillagerBrainEvent"): typeof Internal.VillagerBrainEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.placement.PlacedFeature"): typeof Internal.PlacedFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.spells.targeting.SpellContext"): typeof Internal.SpellContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.dmnr.common.item.VoidfeatherCharmItem"): typeof Internal.VoidfeatherCharmItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.recipes.AMRecipeBase"): typeof Internal.AMRecipeBase;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundLevelEventPacket"): typeof Internal.ClientboundLevelEventPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.block.entity.BlockEntityJS"): typeof Internal.BlockEntityJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.authlib.yggdrasil.ServicesKeyType"): typeof Internal.ServicesKeyType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2modularblock.DelegateBlock"): typeof Internal.DelegateBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.SoulFireBlock"): typeof Internal.SoulFireBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.recipe.transfer.IRecipeTransferError"): Internal.IRecipeTransferError;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundPlayerCommandPacket$Action"): typeof Internal.ServerboundPlayerCommandPacket$Action;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.brigadier.exceptions.CommandExceptionType"): Internal.CommandExceptionType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.sosly.arcaneadditions.effects.neutral.AstralProjectionEffect"): typeof Internal.AstralProjectionEffect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.finndog.mss.mixins.structures.ListPoolElementAccessor"): com.finndog.mss.mixins.structures.ListPoolElementAccessor;
        hashCode(): number;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.view.ContextMenu"): Internal.ContextMenu;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "vazkii.patchouli.api.PatchouliConfigAccess$TextOverflowMode"): typeof Internal.PatchouliConfigAccess$TextOverflowMode;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.nonliving.BaseEntityBuilder$ICustomInstructionListenerJS"): Internal.BaseEntityBuilder$ICustomInstructionListenerJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.constructs.parts.arms.ConstructPartManaCannonRight"): typeof Internal.ConstructPartManaCannonRight;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.sensing.GolemSensor"): typeof Internal.GolemSensor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.integration.kubejs.function.Context"): typeof fr.frinn.custommachinery.common.integration.kubejs.function_.Context;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.nonliving.BaseEntityBuilder"): typeof Internal.BaseEntityBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.core.IngredientSupplierKJS"): Internal.IngredientSupplierKJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.view.ActionMode"): typeof Internal.ActionMode;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.biome.MobSpawnSettings"): typeof Internal.MobSpawnSettings;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.RenderStateShard$TextureStateShard"): typeof Internal.RenderStateShard$TextureStateShard;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.loot.LootPool$Builder"): typeof Internal.LootPool$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.profiling.ResultField"): typeof Internal.ResultField;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.player.PlayerEvent$PlayerChangedDimensionEvent"): typeof Internal.PlayerEvent$PlayerChangedDimensionEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.player.LocalPlayer"): typeof Internal.LocalPlayer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.extensions.IForgeBlockAndTintGetter"): Internal.IForgeBlockAndTintGetter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.templatesystem.BlockMatchTest"): typeof Internal.BlockMatchTest;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.living.LivingDamageEvent"): typeof Internal.LivingDamageEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.dimension.end.EndDragonFight$Data"): typeof Internal.EndDragonFight$Data;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.api.integration.jei.IJEIIngredientRequirement"): Internal.IJEIIngredientRequirement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.BundleItem"): typeof Internal.BundleItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.yungnickyoung.minecraft.betterjungletemples.mixin.accessor.ChunkGeneratorStructureStateAccessor"): Internal.ChunkGeneratorStructureStateAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerGamePacketListener"): Internal.ServerGamePacketListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.heightproviders.HeightProviderType"): Internal.HeightProviderType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.api.component.ComponentIOMode"): typeof Internal.ComponentIOMode;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.enchantment.ThornsEnchantment"): typeof Internal.ThornsEnchantment;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.objects.ObjectArrayList"): typeof Internal.ObjectArrayList;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.components.AbstractButton"): typeof Internal.AbstractButton;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.concurrent.Callable"): Internal.Callable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.monster.Slime"): typeof Internal.Slime;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.sounds.SoundManager"): typeof Internal.SoundManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.authlib.minecraft.UserApiService$UserProperties"): typeof Internal.UserApiService$UserProperties;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundUseItemPacket"): typeof Internal.ServerboundUseItemPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.players.IpBanList"): typeof Internal.IpBanList;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundSetExperiencePacket"): typeof Internal.ClientboundSetExperiencePacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.util.math.transformation.Rotation$RotationMatrix"): typeof Internal.Rotation$RotationMatrix;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.core.LayeredRegistryAccess"): typeof Internal.LayeredRegistryAccess;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.biome.MobSpawnSettings$MobSpawnCost"): typeof Internal.MobSpawnSettings$MobSpawnCost;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.phys.Vec3"): typeof Vec3d;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.blaze3d.pipeline.RenderTarget"): typeof Internal.RenderTarget;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.color.block.BlockColors"): typeof Internal.BlockColors;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.doubles.Double2ByteFunction"): Internal.Double2ByteFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.keksuccino.fancymenu.util.resource.PlayableResource"): Internal.PlayableResource;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.debug.LightSectionDebugRenderer"): typeof Internal.LightSectionDebugRenderer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.FrameBraceBlock"): typeof Internal.FrameBraceBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.KeyboardHandler"): typeof Internal.KeyboardHandler;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.gson.stream.JsonToken"): typeof Internal.JsonToken;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.HotbarManager"): typeof Internal.HotbarManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.inventory.MerchantMenu"): typeof Internal.MerchantMenu;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.blocks.interfaces.IDontCreateBlockItem"): Internal.IDontCreateBlockItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.ComponentOrientation"): typeof Internal.ComponentOrientation;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundSetTitleTextPacket"): typeof Internal.ClientboundSetTitleTextPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.packs.resources.CloseableResourceManager"): Internal.CloseableResourceManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.level.FireworksJS$Explosion"): typeof Internal.FireworksJS$Explosion;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.stream.IntStream$Builder"): Internal.IntStream$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.sensing.SensorType"): typeof Internal.SensorType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.loot.providers.score.LootScoreProviderType"): typeof Internal.LootScoreProviderType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.carver.CarvingContext"): typeof Internal.CarvingContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.TimeSource$NanoTimeSource"): Internal.TimeSource$NanoTimeSource;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.level.progress.StoringChunkProgressListener"): typeof Internal.StoringChunkProgressListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.objects.ReferenceCollection"): Internal.ReferenceCollection;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.recipes.IRitualRecipe"): Internal.IRitualRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.Pig"): typeof Internal.Pig;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.event.InputEvent"): typeof Internal.InputEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.eventbus.api.Event"): typeof net.minecraftforge.eventbus.api.Event;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.recipe.IRecipeLookup"): Internal.IRecipeLookup;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.packs.resources.ResourceProvider"): Internal.ResourceProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.biome.AmbientAdditionsSettings"): typeof Internal.AmbientAdditionsSettings;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.pylon.InertPylonBlock"): typeof Internal.InertPylonBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.advancements.FrameType"): typeof Internal.FrameType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.items.Dungeon_Eye.MechEyeItem"): typeof Internal.MechEyeItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.artifice.EldrinFumeBlock"): typeof Internal.EldrinFumeBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.artifice.ItemRecipeCopyBook$Modes"): typeof Internal.ItemRecipeCopyBook$Modes;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.harmful.EffectEarthquake"): typeof Internal.EffectEarthquake;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2modularblock.type.BlockMethod"): Internal.BlockMethod;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.api.guielement.IComponentGuiElement"): Internal.IComponentGuiElement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.font.FontManager"): typeof Internal.FontManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.rhino.mod.util.JsonSerializable"): Internal.JsonSerializable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.unascribed.fabrication.interfaces.SetCrawling"): Internal.SetCrawling;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ScreenEvent$KeyReleased$Pre"): typeof Internal.ScreenEvent$KeyReleased$Pre;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.blocks.Abstract_Cataclysm_Skull_Block"): typeof Internal.Abstract_Cataclysm_Skull_Block;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.tileentities.EldrinAltarTile$CollectedItem"): typeof Internal.EldrinAltarTile$CollectedItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.schemas.Schema"): typeof Internal.Schema;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.scores.PlayerTeam"): typeof Internal.PlayerTeam;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.blaze3d.platform.InputConstants$Key"): typeof Internal.InputConstants$Key;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.inventory.MenuType$MenuSupplier"): Internal.MenuType$MenuSupplier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.texture.DynamicTexture"): typeof Internal.DynamicTexture;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.almostreliable.lootjs.core.ILootCondition"): Internal.ILootCondition;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.entities.living.vanilla.EvokerEntityJS"): typeof Internal.EvokerEntityJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.ImageCapabilities"): typeof Internal.ImageCapabilities;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.registries.tags.ITag"): Internal.ITag;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.util.NonNullPredicate"): Internal.NonNullPredicate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.TextureStitchEvent$Post"): typeof Internal.TextureStitchEvent$Post;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.syncher.SynchedEntityData$DataValue"): typeof Internal.SynchedEntityData$DataValue;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.searchtree.RefreshableSearchTree"): Internal.RefreshableSearchTree;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.abdelaziz.canary.common.block.entity.inventory_change_tracking.InventoryChangeEmitter"): Internal.InventoryChangeEmitter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundDeleteChatPacket"): typeof Internal.ClientboundDeleteChatPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.core.InventoryKJS"): Internal.InventoryKJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.crafting.conditions.ICondition$IContext"): Internal.ICondition$IContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.serialization.Decoder"): com.mojang.serialization.Decoder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "top.theillusivec4.curios.api.SlotResult"): typeof Internal.SlotResult;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.typings.desc.ObjectDescJS"): typeof Internal.ObjectDescJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.extensions.IForgeTransformation"): Internal.IForgeTransformation;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.misc.BasicMobEffect$Builder"): typeof Internal.BasicMobEffect$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.players.GameProfileCache"): typeof Internal.GameProfileCache;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.irisshaders.iris.texture.SpriteContentsExtension"): net.irisshaders.iris.texture.SpriteContentsExtension;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.inventory.ContainerListener"): net.minecraft.world.inventory.ContainerListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.loot.predicates.CompositeLootItemCondition$Builder"): typeof Internal.CompositeLootItemCondition$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.FletchingTableBlock"): typeof Internal.FletchingTableBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.authlib.minecraft.TelemetrySession"): Internal.TelemetrySession;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.animationjs.events.UniversalController"): typeof Internal.UniversalController;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.brigadier.arguments.LongArgumentType"): typeof Internal.LongArgumentType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$EMayInteractContext"): typeof Internal.ContextUtils$EMayInteractContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.vehicle.MinecartFurnace"): typeof Internal.MinecartFurnace;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.tree.Type"): typeof icyllis.arc3d.compiler.tree.Type;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.level.ServerPlayer"): typeof Internal.ServerPlayer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.core.CreativeModeTabKJS"): Internal.CreativeModeTabKJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.recipes.eldrin.FumeFilterRecipeSerializer"): typeof Internal.FumeFilterRecipeSerializer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.FamilyOptic"): Internal.FamilyOptic;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.electronwill.nightconfig.core.UnmodifiableConfig$Entry"): Internal.UnmodifiableConfig$Entry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ai.Behaviors"): typeof Internal.Behaviors;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.Fallable"): Internal.Fallable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.tutorial.Tutorial"): typeof Internal.Tutorial;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.stateproviders.NoiseThresholdProvider"): typeof Internal.NoiseThresholdProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexthe666.citadel.item.BlockItemWithSupplier"): typeof Internal.BlockItemWithSupplier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.FiddleheadBlock"): typeof Internal.FiddleheadBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.tree.FunctionDefinition"): typeof Internal.FunctionDefinition;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.WorldStem"): typeof Internal.WorldStem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.starfish_studios.bbb.block.ColumnBlock"): typeof Internal.ColumnBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.chunk.ChunkRenderDispatcher$RenderChunk$ChunkCompileTask"): typeof Internal.ChunkRenderDispatcher$RenderChunk$ChunkCompileTask;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.model.SkullModelBase"): typeof Internal.SkullModelBase;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.llamalad7.mixinextras.sugar.ref.LocalIntRef"): Internal.LocalIntRef;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.util.ScheduledEvents$Callback"): Internal.ScheduledEvents$Callback;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "top.theillusivec4.curios.api.type.inventory.IDynamicStackHandler"): Internal.IDynamicStackHandler;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.living.BaseLivingEntityBuilder"): typeof Internal.BaseLivingEntityBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.level.feature.FillBiomeAboveFeature"): typeof Internal.FillBiomeAboveFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.level.SimpleLevelEventJS"): typeof Internal.SimpleLevelEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.fluids.SoftFluid$Builder"): typeof Internal.SoftFluid$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.OutputReplacementTransformer"): Internal.OutputReplacementTransformer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.kinds.Kind1"): Internal.Kind1;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.beneficial.EffectManaShield"): typeof Internal.EffectManaShield;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.dmnr.common.item.dragonmagearmor.InfernalDragonMageArmorItem"): typeof Internal.InfernalDragonMageArmorItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.synchronization.SingletonArgumentInfo"): typeof Internal.SingletonArgumentInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.stateproviders.BlockStateProviderType"): typeof Internal.BlockStateProviderType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.sorcery.bound.IBoundItem"): Internal.IBoundItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.JobAttributes$DestinationType"): typeof Internal.JobAttributes$DestinationType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.model.geom.builders.CubeDeformation"): typeof Internal.CubeDeformation;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.PowderSnowCauldronBlock"): typeof Internal.PowderSnowCauldronBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.ManagedResource"): typeof Internal.ManagedResource;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.forgespi.language.IModInfo$Ordering"): typeof Internal.IModInfo$Ordering;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ClientPlayerNetworkEvent$Clone"): typeof Internal.ClientPlayerNetworkEvent$Clone;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.relic.ItemRunicMalus"): typeof Internal.ItemRunicMalus;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.EntityMountEvent"): typeof Internal.EntityMountEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundPlayerInputPacket"): typeof Internal.ServerboundPlayerInputPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.pathfinder.BlockPathTypes"): typeof Internal.BlockPathTypes;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.level.feature.config.FloatingOrbFeatureConfig"): typeof Internal.FloatingOrbFeatureConfig;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.Products$P4"): typeof Internal.Products$P4;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jozufozu.flywheel.backend.instancing.AbstractInstance"): typeof Internal.AbstractInstance;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.behavior.InteractWithDoor"): typeof Internal.InteractWithDoor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.WalkAnimationState"): typeof Internal.WalkAnimationState;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.runtime.IJeiKeyMappings"): Internal.IJeiKeyMappings;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.api.component.IDumpComponent"): Internal.IDumpComponent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.vehicle.Boat$Status"): typeof Internal.Boat$Status;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.potion.MagnetizedEffect"): typeof Internal.MagnetizedEffect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.living.vanilla.WitherJSBuilder"): typeof Internal.WitherJSBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.capabilities.ICapabilityProviderImpl"): Internal.ICapabilityProviderImpl;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.extensions.IForgeFluidState"): Internal.IForgeFluidState;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.network.NetworkEvent$Context"): typeof Internal.NetworkEvent$Context;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.spells.base.IModifiable"): Internal.IModifiable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundBlockEntityDataPacket"): typeof Internal.ClientboundBlockEntityDataPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.damagesource.FallLocation"): typeof Internal.FallLocation;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.entities.nonliving.vanilla.EyeOfEnderEntityJS"): typeof Internal.EyeOfEnderEntityJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.horse.Variant"): typeof Internal.Variant;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.kosmx.playerAnim.impl.animation.AnimationApplier"): typeof Internal.AnimationApplier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.SignBlock"): typeof Internal.SignBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.architectury.registry.registries.options.RegistrarOption"): Internal.RegistrarOption;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.behavior.PlayTagWithOtherKids"): typeof Internal.PlayTagWithOtherKids;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.ShovelItem"): typeof Internal.ShovelItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.monster.Zombie"): typeof Internal.Zombie;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.architectury.hooks.level.biome.BiomeProperties"): Internal.BiomeProperties;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "noobanidus.mods.lootr.block.LootrBarrelBlock"): typeof Internal.LootrBarrelBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.CommandFunction"): typeof Internal.CommandFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.entities.construct.IConstructDiagnostics"): Internal.IConstructDiagnostics;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.players.IpBanListEntry"): typeof Internal.IpBanListEntry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.MetalBarrelBlock"): typeof Internal.MetalBarrelBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.lookup.StrLookup"): Internal.StrLookup;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.RenderStateShard$TransparencyStateShard"): typeof Internal.RenderStateShard$TransparencyStateShard;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundBlockEventPacket"): typeof Internal.ClientboundBlockEventPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.brigadier.tree.CommandNode"): typeof Internal.CommandNode;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "me.jellysquid.mods.sodium.mixin.core.render.VertexFormatAccessor"): Internal.VertexFormatAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundSetChunkCacheCenterPacket"): typeof Internal.ClientboundSetChunkCacheCenterPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2backpack.events.ArrowBagEvents$ArrowFindEvent"): typeof Internal.ArrowBagEvents$ArrowFindEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.thread.ProcessorHandle"): Internal.ProcessorHandle;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.block.ModStairBlock"): typeof Internal.ModStairBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.ritual.ItemPractitionersPouch"): typeof Internal.ItemPractitionersPouch;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.effect.InstantenousMobEffect"): typeof Internal.InstantenousMobEffect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.core.Looper"): typeof Internal.Looper;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.graphics.text.FontFamily"): typeof Internal.FontFamily;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.block.BlockTintFunction$Fixed"): typeof Internal.BlockTintFunction$Fixed;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.util.NonNullConsumer"): Internal.NonNullConsumer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.crafting.SuspiciousStewRecipe"): typeof Internal.SuspiciousStewRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.nbt.StringTag"): typeof Internal.StringTag;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.manaweaving.ManaResevoirBlock"): typeof Internal.ManaResevoirBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.core.misc.CaveFilter$Type"): typeof Internal.CaveFilter$Type;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "javax.swing.text.StyleConstants$FontConstants"): typeof Internal.StyleConstants$FontConstants;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.stream.DoubleStream$Builder"): Internal.DoubleStream$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.JobAttributes$DefaultSelectionType"): typeof Internal.JobAttributes$DefaultSelectionType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.player.ArrowLooseEvent"): typeof Internal.ArrowLooseEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.api.upgrade.IRecipeModifier"): Internal.IRecipeModifier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.worldgen.RoadSignFeature"): typeof Internal.RoadSignFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.server.entity.IntermittentAnimatableEntity"): Internal.IntermittentAnimatableEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ModelEvent$RegisterAdditional"): typeof Internal.ModelEvent$RegisterAdditional;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.core.FrontAndTop"): typeof Internal.FrontAndTop;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jtorleonstudios.libraryferret.blocks.Blocks$3"): typeof Internal.Blocks$3;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.syncher.EntityDataAccessor"): typeof Internal.EntityDataAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.event.MouseWheelListener"): Internal.MouseWheelListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.loot.functions.LootItemFunctionType"): typeof Internal.LootItemFunctionType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.util.type.ColorType"): typeof Internal.ColorType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.worldgen.BasaltAshFeature"): typeof Internal.BasaltAshFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "noobanidus.mods.lootr.block.LootrTrappedChestBlock"): typeof Internal.LootrTrappedChestBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.unascribed.fabrication.interfaces.ResupplyingFurnaceCart"): Internal.ResupplyingFurnaceCart;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.BoneWormsBlock"): typeof Internal.BoneWormsBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.view.PointerIcon"): typeof Internal.PointerIcon;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.opengl.GLFramebufferInfo"): typeof Internal.GLFramebufferInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.EndermanSkullWallBlock"): typeof Internal.EndermanSkullWallBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.RiderShieldingMount"): Internal.RiderShieldingMount;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.registration.IRecipeRegistration"): Internal.IRecipeRegistration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.ponder.ui.PonderUI"): typeof Internal.PonderUI;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.authlib.yggdrasil.ServicesKeySet"): Internal.ServicesKeySet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.crafting.AbstractIngredient"): typeof Internal.AbstractIngredient;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.inventory.MenuType"): typeof Internal.MenuType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.event.ContainerListener"): Internal.ContainerListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.blending.Blender$DistanceGetter"): Internal.Blender$DistanceGetter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.navigation.WaterBoundPathNavigation"): typeof Internal.WaterBoundPathNavigation;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.bettercombat.api.ComboState"): typeof Internal.ComboState;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bawnorton.neruina.extend.CrashReportSectionExtender"): Internal.CrashReportSectionExtender;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.items.BambooSpikesTippedItem"): typeof Internal.BambooSpikesTippedItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.enchantment.WaterWalkerEnchantment"): typeof Internal.WaterWalkerEnchantment;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.entities.dispenser_minecart.ILevelEventRedirect"): Internal.ILevelEventRedirect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.LinkedHashMap"): typeof Internal.LinkedHashMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$ProjectileEntityHitContext"): typeof Internal.ContextUtils$ProjectileEntityHitContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.RedStoneWireBlock"): typeof Internal.RedStoneWireBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.AzaleaBlock"): typeof Internal.AzaleaBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.valueproviders.UniformFloat"): typeof Internal.UniformFloat;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.IronGateBlock"): typeof Internal.IronGateBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.StructureBlockEntity$UpdateType"): typeof Internal.StructureBlockEntity$UpdateType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.debug.DebugRenderer"): typeof Internal.DebugRenderer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.components.ChatComponent"): typeof Internal.ChatComponent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.item.GalenaGauntletItem"): typeof Internal.GalenaGauntletItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.loot.parameters.LootContextParam"): typeof Internal.LootContextParam;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.nbt.IntArrayTag"): typeof Internal.IntArrayTag;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.bindings.BlockWrapper"): typeof Block;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundPlayerAbilitiesPacket"): typeof Internal.ServerboundPlayerAbilitiesPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.SharedSuggestionProvider$ElementSuggestionType"): typeof Internal.SharedSuggestionProvider$ElementSuggestionType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.lodestar.lodestone.systems.easing.Easing$ElasticInOut"): typeof Internal.Easing$ElasticInOut;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.item.custom.ArmorItemBuilder"): typeof Internal.ArmorItemBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.ImmutableCollections$AbstractImmutableSet"): typeof Internal.ImmutableCollections$AbstractImmutableSet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.BioluminescentWallTorch"): typeof Internal.BioluminescentWallTorch;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.DecoratedPotBlock"): typeof Internal.DecoratedPotBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.sorcery.HellfireBlock"): typeof Internal.HellfireBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.item.custom.ArmorItemBuilder$Helmet"): typeof Internal.ArmorItemBuilder$Helmet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.view.View$OnFocusChangeListener"): Internal.View$OnFocusChangeListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.brigadier.StringReader"): typeof Internal.StringReader;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.level.feature.AbyssalFloraFeature"): typeof Internal.AbyssalFloraFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.im.InputMethodHighlight"): typeof Internal.InputMethodHighlight;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.blocks.Altar_Of_Abyss_Block"): typeof Internal.Altar_Of_Abyss_Block;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.configurations.RandomBooleanFeatureConfiguration"): typeof Internal.RandomBooleanFeatureConfiguration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.abdelaziz.canary.common.world.ClimbingMobCachingSection"): Internal.ClimbingMobCachingSection;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.ponder.element.AnimatedOverlayElement"): typeof Internal.AnimatedOverlayElement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.arguments.ScoreHolderArgument"): typeof Internal.ScoreHolderArgument;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.mixin.BufferBuilderAccessor"): Internal.BufferBuilderAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.unascribed.fabrication.interfaces.SetFromPlayerDeath"): Internal.SetFromPlayerDeath;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.tiles.CageBlockTile"): typeof Internal.CageBlockTile;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.trunkplacers.ForkingTrunkPlacer"): typeof Internal.ForkingTrunkPlacer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.architectury.registry.registries.RegistrarManager"): typeof Internal.RegistrarManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.RenderShape"): typeof Internal.RenderShape;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.UnrefinedWasteBlock"): typeof Internal.UnrefinedWasteBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.UUID"): typeof Internal.UUID;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.yungnickyoung.minecraft.betterendisland.world.IDragonFight"): Internal.IDragonFight;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.gui.ingredient.IRecipeSlotRichTooltipCallback"): Internal.IRecipeSlotRichTooltipCallback;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.ChorusPlantFeature"): typeof Internal.ChorusPlantFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.joml.Vector2ic"): Internal.Vector2ic;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.color.item.ItemColor"): Internal.ItemColor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.AbstractLifeCycle"): typeof Internal.AbstractLifeCycle;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.Products$P9"): typeof Internal.Products$P9;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "javax.swing.text.AttributeSet$ParagraphAttribute"): Internal.AttributeSet$ParagraphAttribute;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.network.NetworkEvent$PacketDispatcher"): typeof Internal.NetworkEvent$PacketDispatcher;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.monster.Blaze"): typeof Internal.Blaze;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.integration.kubejs.MachineAppearanceBuilderJS"): typeof Internal.MachineAppearanceBuilderJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.gui.controls.inventory.GuiSlot"): typeof Internal.GuiSlot;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.ModBlockProperties$Topping"): typeof Internal.ModBlockProperties$Topping;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.living.vanilla.BeeJSBuilder"): typeof Internal.BeeJSBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.StringSplitter$LinePosConsumer"): Internal.StringSplitter$LinePosConsumer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.scores.Objective"): typeof Internal.Objective;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.AbstractFish"): typeof Internal.AbstractFish;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.SculkSensorBlock"): typeof Internal.SculkSensorBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.gui.style.ControlFormatting"): typeof Internal.ControlFormatting;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.SurfaceView"): typeof Internal.SurfaceView;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundClientCommandPacket"): typeof Internal.ServerboundClientCommandPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.integration.kubejs.requirements.LightRequirementJS"): Internal.LightRequirementJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.living.vanilla.ChickenJSBuilder"): typeof Internal.ChickenJSBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.spells.parts.SpellEffect"): typeof Internal.SpellEffect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.network.messages.to_client.SpawnParticleEffectMessage$ParticleTypes"): typeof Internal.SpawnParticleEffectMessage$ParticleTypes;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.pylon.InterdictionPylonBlock"): typeof Internal.InterdictionPylonBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.data.PackOutput"): typeof Internal.PackOutput;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.prunoideae.powerfuljs.capabilities.forge.mods.curios.RegisterCuriosRendererEventJS"): typeof Internal.RegisterCuriosRendererEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.api.component.ITickableComponent"): Internal.ITickableComponent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.StringRepresentable"): Internal.StringRepresentable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.config.LoggerConfig"): typeof Internal.LoggerConfig;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.Ocelot"): typeof Internal.Ocelot;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.arguments.ResourceOrTagArgument$Info$Template"): typeof Internal.ResourceOrTagArgument$Info$Template;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.DoubleBlockCombiner$BlockType"): typeof Internal.DoubleBlockCombiner$BlockType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.quest.loot.RewardTable"): typeof Internal.RewardTable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.authlib.minecraft.MinecraftProfileTexture"): typeof Internal.MinecraftProfileTexture;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "javax.sound.sampled.AudioFormat"): typeof Internal.AudioFormat;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.entities.living.vanilla.WitherEntityJS"): typeof Internal.WitherEntityJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.FlippedBlock"): typeof Internal.FlippedBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.core.animation.AnimationController$State"): typeof Internal.AnimationController$State;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.MilkBucketItem"): typeof Internal.MilkBucketItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.serialization.codecs.ListCodec"): typeof Internal.ListCodec;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.artifice.charms.ItemTeleportToBedCharm"): typeof Internal.ItemTeleportToBedCharm;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.utility.Pair"): typeof com.simibubi.create.foundation.utility.Pair;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.realmsclient.dto.RealmsWorldOptions"): typeof Internal.RealmsWorldOptions;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.entities.construct.materials.ConstructMaterialGold"): typeof Internal.ConstructMaterialGold;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.state.properties.WoodType"): typeof Internal.WoodType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.DecoratedPotBlockEntity$Decorations"): typeof Internal.DecoratedPotBlockEntity$Decorations;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.util.Unit"): typeof com.mojang.datafixers.util.Unit;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.util.MeasureUnit$MeasurePrefix"): typeof Internal.MeasureUnit$MeasurePrefix;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.block.IOwnerProtected"): Internal.IOwnerProtected;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.authlib.minecraft.report.ReportedEntity"): typeof Internal.ReportedEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.decoration.ClayMugBlock"): typeof Internal.ClayMugBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.sosly.arcaneadditions.effects.beneficial.IceBlockEffect"): typeof Internal.IceBlockEffect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.item.ItemTintFunction"): Internal.ItemTintFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "pie.ilikepiefoo.events.PlayerRespawnEventJS"): typeof Internal.PlayerRespawnEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.chunk.storage.ChunkScanAccess"): Internal.ChunkScanAccess;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.EnderChestBlock"): typeof Internal.EnderChestBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.graphics.CustomDrawable"): Internal.CustomDrawable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.BedBlockEntity"): typeof Internal.BedBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.inventory.tooltip.TooltipComponent"): Internal.TooltipComponent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.artifice.SpellSpecializationBlock"): typeof Internal.SpellSpecializationBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.capabilities.resource.ICastingResourceGuiProvider"): Internal.ICastingResourceGuiProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.GeodeBlockSettings"): typeof Internal.GeodeBlockSettings;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.item.creativetab.CreativeTabContentSupplier"): Internal.CreativeTabContentSupplier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.narration.NarratableEntry$NarrationPriority"): typeof Internal.NarratableEntry$NarrationPriority;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.DoubleHighBlockItem"): typeof Internal.DoubleHighBlockItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.structures.SwampHutStructure"): typeof Internal.SwampHutStructure;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.core.RefCnt"): typeof Internal.RefCnt;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.ponder.element.MinecartElement"): typeof Internal.MinecartElement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.fluid.FluidWrapper"): typeof Fluid;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.SharedSuggestionProvider"): Internal.SharedSuggestionProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.RecordingContext"): typeof Internal.RecordingContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.phys.shapes.VoxelShape"): typeof Internal.VoxelShape;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.items.BombItem"): typeof Internal.BombItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.decoration.Painting"): typeof Internal.Painting;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.CampfireBlock"): typeof Internal.CampfireBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.enchantment.EnchantmentCategory"): typeof Internal.EnchantmentCategory;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.nonliving.entityjs.ProjectileEntityJSBuilder"): typeof Internal.ProjectileEntityJSBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.advancements.AdvancementRewards"): typeof Internal.AdvancementRewards;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.geom.AffineTransform"): typeof Internal.AffineTransform;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.level.feature.VolcanoBoulderFeature"): typeof Internal.VolcanoBoulderFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.resources.model.ModelManager"): typeof Internal.ModelManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.components.events.AbstractContainerEventHandler"): typeof Internal.AbstractContainerEventHandler;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.item.GazingPearlItem"): typeof Internal.GazingPearlItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.Display$BlockDisplay"): typeof Internal.Display$BlockDisplay;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbteams.api.property.TeamPropertyArgument$Info$Template"): typeof Internal.TeamPropertyArgument$Info$Template;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.enchantments.Bouncing"): typeof Internal.Bouncing;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.concurrent.ConcurrentHashMap"): typeof Internal.ConcurrentHashMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "me.jellysquid.mods.sodium.mixin.core.render.MinecraftAccessor"): Internal.MinecraftAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.world.MobSpawnSettingsBuilder"): typeof Internal.MobSpawnSettingsBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2modularblock.BlockImplementor"): typeof Internal.BlockImplementor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.client.LangEventJS$Key"): typeof Internal.LangEventJS$Key;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.fluids.ForgeFlowingFluid$Flowing"): typeof Internal.ForgeFlowingFluid$Flowing;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.navigation.ScreenAxis"): typeof Internal.ScreenAxis;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.Deque"): Internal.Deque;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.blending.Blender$BlendingOutput"): typeof Internal.Blender$BlendingOutput;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.level.BlockDestructionProgress"): typeof Internal.BlockDestructionProgress;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.xylonity.knightquest.registry.KnightQuestItems$2"): typeof Internal.KnightQuestItems$2;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.spi.Terminable"): Internal.Terminable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ScreenEvent$Render"): typeof Internal.ScreenEvent$Render;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.cerbon.bosses_of_mass_destruction.block.custom.GauntletBlackstoneBlock"): typeof Internal.GauntletBlackstoneBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.VecDeltaCodec"): typeof Internal.VecDeltaCodec;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.ServerFunctionLibrary"): typeof Internal.ServerFunctionLibrary;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundSwingPacket"): typeof Internal.ServerboundSwingPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.StructureType"): Internal.StructureType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.core.ColorSpace$RenderIntent"): typeof Internal.ColorSpace$RenderIntent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.ritual.ItemPlayerCharm"): typeof Internal.ItemPlayerCharm;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.projectile.ThrowableItemProjectile"): typeof Internal.ThrowableItemProjectile;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.OptionInstance$CaptionBasedToString"): Internal.OptionInstance$CaptionBasedToString;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.integration.kubejs.requirements.PositionRequirementJS"): Internal.PositionRequirementJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.view.View$OnHoverListener"): Internal.View$OnHoverListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.model.geometry.IUnbakedGeometry"): Internal.IUnbakedGeometry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.objects.Object2FloatOpenHashMap"): typeof Internal.Object2FloatOpenHashMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.impl.LogEventFactory"): Internal.LogEventFactory;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.ClipResult"): typeof Internal.ClipResult;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.items.BubbleBlowerItem"): typeof Internal.BubbleBlowerItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.config.FluidConfig"): typeof Internal.FluidConfig;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.blaze3d.vertex.VertexFormat"): typeof Internal.VertexFormat;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.chat.ChatDecorator"): Internal.ChatDecorator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.item.DreadbowItem"): typeof Internal.DreadbowItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.enchantment.KnockbackEnchantment"): typeof Internal.KnockbackEnchantment;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.client.ClientEventJS"): typeof Internal.ClientEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.Spliterator$OfDouble"): Internal.Spliterator$OfDouble;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.extensions.IForgeHolderSet$SerializationType"): typeof Internal.IForgeHolderSet$SerializationType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.RenderStateShard$OutputStateShard"): typeof Internal.RenderStateShard$OutputStateShard;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.quest.reward.RewardClaimType"): typeof Internal.RewardClaimType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.embeddedt.modernfix.duck.ISafeBlockGetter"): Internal.ISafeBlockGetter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.templatesystem.rule.blockentity.Clear"): typeof Internal.Clear;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.client.VariantBlockStateGenerator"): typeof Internal.VariantBlockStateGenerator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.AbortableIterationConsumer$Continuation"): typeof Internal.AbortableIterationConsumer$Continuation;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.items.forge.ShulkerShellItem"): typeof Internal.ShulkerShellItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.gui.manager.GuiManagerItem"): typeof Internal.GuiManagerItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.User"): typeof Internal.User;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.DensityFunctions$Constant"): typeof Internal.DensityFunctions$Constant;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbteams.api.property.PrivacyMode"): typeof Internal.PrivacyMode;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.AbstractMap"): typeof Internal.AbstractMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.advancements.critereon.SerializationContext"): typeof Internal.SerializationContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.MuckBlock"): typeof Internal.MuckBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.living.vanilla.ParrotJSBuilder"): typeof Internal.ParrotJSBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.core.animation.AnimationController$AnimationStateHandler"): Internal.AnimationController$AnimationStateHandler;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.nbt.EndTag"): typeof Internal.EndTag;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jozufozu.flywheel.backend.instancing.entity.EntityInstancingController"): Internal.EntityInstancingController;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "io.ejekta.bountiful.content.DecreeItem$Companion"): typeof Internal.DecreeItem$Companion;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "malte0811.ferritecore.fastmap.FastMap"): typeof Internal.FastMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.NetherForestVegetationFeature"): typeof Internal.NetherForestVegetationFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.concurrent.ScheduledFuture"): Internal.ScheduledFuture;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.server.potion.EffectGeomancy"): typeof Internal.EffectGeomancy;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.enchantment.ProtectionEnchantment$Type"): typeof Internal.ProtectionEnchantment$Type;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.decoration.PaintingVariant"): typeof Internal.PaintingVariant;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.inventory.RecipeHolder"): Internal.RecipeHolder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.lodestar.lodestone.systems.particle.data.spin.SpinParticleDataBuilder"): typeof Internal.SpinParticleDataBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.SeagrassBlock"): typeof Internal.SeagrassBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.packs.PackResources$ResourceOutput"): Internal.PackResources$ResourceOutput;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ScreenEvent$MouseScrolled$Pre"): typeof Internal.ScreenEvent$MouseScrolled$Pre;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.events.ObjectCompletedEvent$ChapterEvent"): typeof Internal.ObjectCompletedEvent$ChapterEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.ReplaceBlockFeature"): typeof Internal.ReplaceBlockFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.function.BooleanSupplier"): Internal.BooleanSupplier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.RedStoneOreBlock"): typeof Internal.RedStoneOreBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.EndGatewayBlock"): typeof Internal.EndGatewayBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.living.entityjs.TameableMobBuilder"): typeof Internal.TameableMobBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.server.item.UmvuthanaMask"): Internal.UmvuthanaMask;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.narration.NarrationSupplier"): Internal.NarrationSupplier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.chunk.storage.SectionStorage"): typeof Internal.SectionStorage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.view.SubMenu"): Internal.SubMenu;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.xylonity.knightquest.registry.KnightQuestBlocks$1"): typeof Internal.KnightQuestBlocks$1;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.ForgeConfigSpec$EnumValue"): typeof Internal.ForgeConfigSpec$EnumValue;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.tags.TagManager$LoadResult"): typeof Internal.TagManager$LoadResult;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.level.NoteBlockEvent"): typeof Internal.NoteBlockEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.DeadBushBlock"): typeof Internal.DeadBushBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.PulleyBlock"): typeof Internal.PulleyBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.enchantment.TridentChannelingEnchantment"): typeof Internal.TridentChannelingEnchantment;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.configurations.OreConfiguration$TargetBlockState"): typeof Internal.OreConfiguration$TargetBlockState;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.piston.MovingPistonBlock"): typeof Internal.MovingPistonBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.item.custom.PickaxeItemBuilder"): typeof Internal.PickaxeItemBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.living.BaseLivingEntityBuilder$IParticleListenerJS"): Internal.BaseLivingEntityBuilder$IParticleListenerJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.raphimc.immediatelyfast.injection.interfaces.IBufferBuilder"): Internal.IBufferBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.cerbon.bosses_of_mass_destruction.block.custom.VoidBlossomBlock"): typeof Internal.VoidBlossomBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jtorleonstudios.libraryferret.blocks.Blocks$2"): typeof Internal.Blocks$2;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.enchantment.DigDurabilityEnchantment"): typeof Internal.DigDurabilityEnchantment;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.behavior.Behavior$Status"): typeof Internal.Behavior$Status;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.Display$ItemDisplay$ItemRenderState"): typeof Internal.Display$ItemDisplay$ItemRenderState;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.floats.Float2ByteFunction"): Internal.Float2ByteFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.DetectorRailBlock"): typeof Internal.DetectorRailBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.dmnr.common.item.CurseProtectionAmuletItem"): typeof Internal.CurseProtectionAmuletItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.architectury.registry.level.biome.forge.BiomeModificationsImpl$BiomeModifierImpl"): typeof Internal.BiomeModificationsImpl$BiomeModifierImpl;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.objects.AbstractObjectList"): typeof Internal.AbstractObjectList;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.gui.drawable.IDrawableAnimated"): Internal.IDrawableAnimated;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.PageAttributes"): typeof Internal.PageAttributes;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.LevelData"): Internal.LevelData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "kotlin.jvm.functions.Function0"): Internal.Function0;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.blaze3d.vertex.BufferVertexConsumer"): Internal.BufferVertexConsumer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.LootTableLoadEvent"): typeof Internal.LootTableLoadEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.rhino.IdScriptableObject"): typeof Internal.IdScriptableObject;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.view.MenuItem$OnMenuItemClickListener"): Internal.MenuItem$OnMenuItemClickListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.gameevent.vibrations.VibrationSystem$Data"): typeof Internal.VibrationSystem$Data;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.SignalGetter"): Internal.SignalGetter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.core.PlayerSelector"): Internal.PlayerSelector;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.dmnr.common.item.spellstoring.RingOfNormalSpellStoringItem"): typeof Internal.RingOfNormalSpellStoringItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.boss.wither.WitherBoss"): typeof Internal.WitherBoss;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.extensions.IForgeRecipeSerializer"): Internal.IForgeRecipeSerializer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.lodestar.lodestone.systems.particle.world.behaviors.SparkParticleBehavior"): typeof Internal.SparkParticleBehavior;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.TheEndGatewayBlockEntity"): typeof Internal.TheEndGatewayBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.level.TicketType"): typeof Internal.TicketType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.animation.AnimatorListener"): Internal.AnimatorListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "pie.ilikepiefoo.compat.jei.impl.CustomJSRecipe$CustomRecipeListBuilder"): typeof Internal.CustomJSRecipe$CustomRecipeListBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.illusivesoulworks.comforts.common.item.SleepingBagItem"): typeof Internal.SleepingBagItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.model.geom.builders.PartDefinition"): typeof Internal.PartDefinition;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2backpack.content.tool.TweakerTool"): typeof Internal.TweakerTool;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.blaze3d.vertex.VertexFormatElement"): typeof Internal.VertexFormatElement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "pie.ilikepiefoo.compat.jei.builder.RecipeCategoryBuilder$GetRegisterName"): Internal.RecipeCategoryBuilder$GetRegisterName;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.fnc.api.spelladjustment.SpellAdjustment"): typeof Internal.SpellAdjustment;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.block.state.BlockStatePredicate"): BlockStatePredicate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.amendments.common.block.DoubleSkullBlock"): typeof Internal.DoubleSkullBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.SimpleContainer"): typeof Internal.SimpleContainer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.cerbon.bosses_of_mass_destruction.item.custom.ChargedEnderPearlItem"): typeof Internal.ChargedEnderPearlItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.player.AbstractClientPlayer"): typeof Internal.AbstractClientPlayer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.irisshaders.batchedentityrendering.mixin.OutlineBufferSourceAccessor"): Internal.OutlineBufferSourceAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.SharedContextInfo"): typeof Internal.SharedContextInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.biome.BiomeSpecialEffects"): typeof Internal.BiomeSpecialEffects;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.almostreliable.ponderjs.api.SceneBuildingUtilDelegate"): typeof Internal.SceneBuildingUtilDelegate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.objects.Object2FloatMap"): Internal.Object2FloatMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.network.NetworkEvent"): typeof Internal.NetworkEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.quest.task.CustomTask"): typeof Internal.CustomTask;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.block.DetectorBlock"): typeof Internal.DetectorBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.state.properties.Property"): typeof Internal.Property;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.floats.Float2FloatFunction"): Internal.Float2FloatFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.IOnePlayerGui"): Internal.IOnePlayerGui;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.ComposterBlock"): typeof Internal.ComposterBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.Locale$FilteringMode"): typeof Internal.Locale$FilteringMode;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.RenderStateShard$BooleanStateShard"): typeof Internal.RenderStateShard$BooleanStateShard;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.chat.LastSeenMessages$Update"): typeof Internal.LastSeenMessages$Update;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.blocks.interfaces.ITranslucentBlock"): Internal.ITranslucentBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "vazkii.patchouli.client.book.template.TemplateComponent"): typeof Internal.TemplateComponent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.DoorBlock"): typeof Internal.DoorBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "vazkii.patchouli.mixin.AccessorSmithingTrimRecipe"): Internal.AccessorSmithingTrimRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundChunksBiomesPacket$ChunkBiomeData"): typeof Internal.ClientboundChunksBiomesPacket$ChunkBiomeData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.almostreliable.ponderjs.particles.ParticleDataBuilder"): typeof Internal.ParticleDataBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.keksuccino.fancymenu.util.rendering.ui.widget.CustomizableWidget"): Internal.CustomizableWidget;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.yungnickyoung.minecraft.betterendisland.world.DragonRespawnStage"): typeof Internal.DragonRespawnStage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexthe666.citadel.server.world.ModifiableTickRateServer"): Internal.ModifiableTickRateServer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbteams.data.TeamArgument"): typeof Internal.TeamArgument;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.enchantment.OxygenEnchantment"): typeof Internal.OxygenEnchantment;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.arguments.ResourceOrTagKeyArgument$Info$Template"): typeof Internal.ResourceOrTagKeyArgument$Info$Template;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.core.BlockKJS"): Internal.BlockKJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.player.SimplePlayerEventJS"): typeof Internal.SimplePlayerEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.stats.Stats"): typeof Stats;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.lwjgl.PointerBuffer"): typeof Internal.PointerBuffer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.quest.task.CustomTask$Data"): typeof Internal.CustomTask$Data;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.amendments.common.CakeRegistry$CakeType"): typeof Internal.CakeRegistry$CakeType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.decoration.ParticleEmitterBlock"): typeof Internal.ParticleEmitterBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.SpongeBlock"): typeof Internal.SpongeBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.item.IThirdPersonAnimationProvider"): Internal.IThirdPersonAnimationProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.util.Parcelable"): Internal.Parcelable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.ritual.ItemThaumaturgicLink"): typeof Internal.ItemThaumaturgicLink;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.foliageplacers.FoliagePlacerType"): typeof Internal.FoliagePlacerType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.unascribed.fabrication.interfaces.GetSuppressedSlots"): Internal.GetSuppressedSlots;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "me.jellysquid.mods.sodium.client.model.ModelCuboidAccessor"): Internal.ModelCuboidAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.beneficial.EffectSpiderClimbing"): typeof Internal.EffectSpiderClimbing;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.player.EntityItemPickupEvent"): typeof Internal.EntityItemPickupEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.abdelaziz.canary.common.entity.pushable.BlockCachingEntity"): Internal.BlockCachingEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.biome.Biome$ClimateSettings"): typeof Internal.Biome$ClimateSettings;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.dmnr.api.event.DragonUpgradeEvent"): typeof Internal.DragonUpgradeEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.chunk.ChunkGeneratorStructureState"): typeof Internal.ChunkGeneratorStructureState;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.BrigadierExceptions"): typeof Internal.BrigadierExceptions;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.level.feature.CoveredBlockBlobFeature"): typeof Internal.CoveredBlockBlobFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.treedecorators.TrunkVineDecorator"): typeof Internal.TrunkVineDecorator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.StructureSpawnOverride"): typeof Internal.StructureSpawnOverride;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.WeatheringCopperSlabBlock"): typeof Internal.WeatheringCopperSlabBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.util.math.geo.Ray3d"): typeof Internal.Ray3d;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.projectile.Projectile"): typeof Internal.Projectile;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.lodestar.lodestone.systems.particle.world.type.LodestoneWorldParticleType"): typeof Internal.LodestoneWorldParticleType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.joml.Vector3fc"): Internal.Vector3fc;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.level.feature.config.MagneticNodeFeatureConfiguration"): typeof Internal.MagneticNodeFeatureConfiguration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.entities.living.vanilla.EnderManEntityJS"): typeof Internal.EnderManEntityJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.level.feature.WhalefallFeature"): typeof Internal.WhalefallFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.dnd.DragSourceContext"): typeof Internal.DragSourceContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.math.RoundingMode"): typeof Internal.RoundingMode;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.rhino.util.CustomJavaToJsWrapperProvider"): Internal.CustomJavaToJsWrapperProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.almostreliable.lootjs.loot.AddAttributesFunction$Builder"): typeof Internal.AddAttributesFunction$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.item.RemoteDetonatorItem"): typeof Internal.RemoteDetonatorItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.item.OutputItem"): typeof OutputItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.crafting.SimpleCookingSerializer"): typeof Internal.SimpleCookingSerializer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.abdelaziz.canary.common.shapes.VoxelShapeAlignedCuboid"): typeof Internal.VoxelShapeAlignedCuboid;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.chunk.Palette$Factory"): Internal.Palette$Factory;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.crafting.AltarOfAmethystRecipe$Serializer"): typeof Internal.AltarOfAmethystRecipe$Serializer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.types.templates.TypeTemplate"): Internal.TypeTemplate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.gui.AbstractSimiScreen"): typeof Internal.AbstractSimiScreen;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.registries.DataPackRegistryEvent$NewRegistry"): typeof Internal.DataPackRegistryEvent$NewRegistry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.graphics.text.FontCollection"): typeof Internal.FontCollection;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.forgespi.language.IModLanguageProvider"): Internal.IModLanguageProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.item.DivingArmorItem"): typeof Internal.DivingArmorItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.ChiseledBookShelfBlockEntity"): typeof Internal.ChiseledBookShelfBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.irisshaders.iris.mixin.texture.AnimationMetadataSectionAccessor"): Internal.AnimationMetadataSectionAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.AnimationState"): typeof Internal.AnimationState;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.EnergizedGalenaBlock"): typeof Internal.EnergizedGalenaBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.LevelWriter"): Internal.LevelWriter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundLevelChunkWithLightPacket"): typeof Internal.ClientboundLevelChunkWithLightPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.behavior.EntityTracker"): typeof Internal.EntityTracker;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.rhino.mod.wrapper.ColorWrapper"): Color;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.chat.ComponentContents"): Internal.ComponentContents;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.rhino.IdFunctionCall"): Internal.IdFunctionCall;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.level.feature.PeeringCoprolithFeature"): typeof Internal.PeeringCoprolithFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.dnd.DropTargetDropEvent"): typeof Internal.DropTargetDropEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.trunkplacers.TrunkPlacerType"): typeof Internal.TrunkPlacerType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.client.model.ExtraModelData$Builder"): Internal.ExtraModelData$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.beneficial.SimpleBeneficialEffect"): typeof Internal.SimpleBeneficialEffect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.util.ULocale$AvailableType"): typeof Internal.ULocale$AvailableType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.lang.StringBuilder"): typeof Internal.StringBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.floats.FloatComparator"): Internal.FloatComparator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.dmnr.common.item.RiftEmitterItem"): typeof Internal.RiftEmitterItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.registries.RegisterEvent"): typeof Internal.RegisterEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundSetDisplayObjectivePacket"): typeof Internal.ClientboundSetDisplayObjectivePacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.pylon.FreezePylonBlock"): typeof Internal.FreezePylonBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$EntityPlayerContext"): typeof Internal.ContextUtils$EntityPlayerContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.entity.util.FallingBlockEntityAccessor"): Internal.FallingBlockEntityAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.geom.Line2D"): typeof Internal.Line2D;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundPlayerActionPacket"): typeof Internal.ServerboundPlayerActionPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.core.Paint"): typeof icyllis.arc3d.core.Paint;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.placement.EnvironmentScanPlacement"): typeof Internal.EnvironmentScanPlacement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.server.potion.EffectSunsBlessing"): typeof Internal.EffectSunsBlessing;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.player.Abilities"): typeof Internal.Abilities;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "malte0811.ferritecore.mixin.blockstatecache.ArrayVSAccess"): Internal.ArrayVSAccess;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.entities.construct.ai.parameter.ConstructParameterTypes"): typeof Internal.ConstructParameterTypes;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.block.callbacks.CanBeReplacedCallbackJS"): typeof Internal.CanBeReplacedCallbackJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.block.model.ItemModelGenerator"): typeof Internal.ItemModelGenerator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.enchantment.MultiShotEnchantment"): typeof Internal.MultiShotEnchantment;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.llamalad7.mixinextras.injector.wrapoperation.Operation"): Internal.Operation;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "questsadditions.items.LootCrateBlockItem"): typeof Internal.LootCrateBlockItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.tree.Node$SymbolKind"): typeof Internal.Node$SymbolKind;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.stream.IntStream$IntMapMultiConsumer"): Internal.IntStream$IntMapMultiConsumer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.items.Void_Scatter_Arrow_Item"): typeof Internal.Void_Scatter_Arrow_Item;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.unascribed.fabrication.mixin.e_mechanics.detecting_powered_rails.AccessorDetectorRailBlock"): Internal.AccessorDetectorRailBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "noobanidus.mods.lootr.block.LootrShulkerBlock"): typeof Internal.LootrShulkerBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.ExplosionDamageCalculator"): typeof Internal.ExplosionDamageCalculator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.text.DateFormatSymbols"): typeof com.ibm.icu.text.DateFormatSymbols;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.NuclearBombBlock"): typeof Internal.NuclearBombBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "snownee.jade.api.config.IPluginConfig"): Internal.IPluginConfig;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.inventory.AnvilMenu"): typeof Internal.AnvilMenu;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.state.properties.StairsShape"): typeof Internal.StairsShape;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.view.ContextMenu$ContextMenuInfo"): Internal.ContextMenu$ContextMenuInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.AbstractCollection"): typeof Internal.AbstractCollection;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.DropExperienceBlock"): typeof Internal.DropExperienceBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$MayInteractContext"): typeof Internal.ContextUtils$MayInteractContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundSetEntityLinkPacket"): typeof Internal.ClientboundSetEntityLinkPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundSetCarriedItemPacket"): typeof Internal.ServerboundSetCarriedItemPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundInitializeBorderPacket"): typeof Internal.ClientboundInitializeBorderPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundPlayerActionPacket$Action"): typeof Internal.ServerboundPlayerActionPacket$Action;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.pieces.StructurePiecesBuilder"): typeof Internal.StructurePiecesBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.horse.Donkey"): typeof Internal.Donkey;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.FacingBlock"): typeof Internal.FacingBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.time.zone.ZoneRules"): typeof Internal.ZoneRules;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2backpack.content.capability.DestroyMode"): typeof Internal.DestroyMode;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.chars.Char2ByteFunction"): Internal.Char2ByteFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.tree.ReturnStatement"): typeof Internal.ReturnStatement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.data.event.GatherDataEvent"): typeof Internal.GatherDataEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.chars.Char2CharFunction"): Internal.Char2CharFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.core.Holder$Kind"): typeof Internal.Holder$Kind;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.recipes.multiblock.block_matchers.ExactBlockMatcher"): typeof Internal.ExactBlockMatcher;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.BubbleColumnBlock"): typeof Internal.BubbleColumnBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.GpuRenderTarget"): typeof Internal.GpuRenderTarget;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.layout.Encoder"): org.apache.logging.log4j.core.layout.Encoder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.keksuccino.fancymenu.util.rendering.ui.widget.UniqueWidget"): Internal.UniqueWidget;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.message.ExitMessage"): Internal.ExitMessage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.BedItem"): typeof Internal.BedItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.InputEvent$MouseScrollingEvent"): typeof Internal.InputEvent$MouseScrollingEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.random.WeightedEntry$Wrapper"): typeof Internal.WeightedEntry$Wrapper;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.ints.IntBidirectionalIterator"): Internal.IntBidirectionalIterator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.level.structure.VolcanoStructure"): typeof Internal.VolcanoStructure;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.item.SeaStaffItem"): typeof Internal.SeaStaffItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.TrappedPresentBlock"): typeof Internal.TrappedPresentBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.client.MultipartBlockStateGenerator"): typeof Internal.MultipartBlockStateGenerator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.sensing.FrogAttackablesSensor"): typeof Internal.FrogAttackablesSensor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.objects.ObjectBidirectionalIterable"): Internal.ObjectBidirectionalIterable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.Engine"): Internal.Engine;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.kosmx.playerAnim.core.impl.AnimationProcessor"): typeof dev.kosmx.playerAnim.core.impl.AnimationProcessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.synchronization.brigadier.StringArgumentSerializer"): typeof Internal.StringArgumentSerializer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.templatesystem.AlwaysTrueTest"): typeof Internal.AlwaysTrueTest;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.message.FlowMessageFactory"): Internal.FlowMessageFactory;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.ThreadSafeCache"): typeof Internal.ThreadSafeCache;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.network.FilteredText"): typeof Internal.FilteredText;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.client.AtlasSpriteRegistryEventJS"): typeof Internal.AtlasSpriteRegistryEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.loot.Serializer"): Internal.Serializer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.behavior.OneShot"): typeof Internal.OneShot;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.PrintJob"): typeof Internal.PrintJob;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.SurfaceRules$ConditionSource"): Internal.SurfaceRules$ConditionSource;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.model.geom.builders.CubeDefinition"): typeof Internal.CubeDefinition;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.ObserverBlock"): typeof Internal.ObserverBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.item.InputItem"): typeof InputItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.HugeFungusConfiguration"): typeof Internal.HugeFungusConfiguration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.stream.Stream"): Internal.Stream;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.api.requirement.RequirementIOMode"): typeof Internal.RequirementIOMode;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.block.model.ItemTransform"): typeof Internal.ItemTransform;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "pie.ilikepiefoo.compat.jei.impl.CustomRecipeCategory"): typeof Internal.CustomRecipeCategory;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.rhino.WrapFactory"): typeof Internal.WrapFactory;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.chat.ChatType$Bound"): typeof Internal.ChatType$Bound;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.effect.AttackDamageMobEffect"): typeof Internal.AttackDamageMobEffect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "top.theillusivec4.curios.api.event.CurioChangeEvent"): typeof Internal.CurioChangeEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.artifice.ItemEnderguardAmulet"): typeof Internal.ItemEnderguardAmulet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.SculkSensorBlockEntity"): typeof Internal.SculkSensorBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.constructs.parts.arms.ConstructPartBladeArmRight"): typeof Internal.ConstructPartBladeArmRight;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.artifice.EldrinAltarBlock"): typeof Internal.EldrinAltarBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.server.item.MowzieArmorItem"): typeof Internal.MowzieArmorItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.FireBlock"): typeof Internal.FireBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.WeightedPlacedFeature"): typeof Internal.WeightedPlacedFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.api.network.ISyncableStuff"): Internal.ISyncableStuff;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.irisshaders.iris.helpers.VertexBufferHelper"): Internal.VertexBufferHelper;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.world.CMMobSpawnBiomeModifier"): typeof Internal.CMMobSpawnBiomeModifier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.recipe.ACRecipeRegistry$1"): typeof Internal.ACRecipeRegistry$1;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.common.base.Function"): com.google.common.base.Function;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.AbyssmarinePillarBlock"): typeof Internal.AbyssmarinePillarBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.material.LavaFluid$Source"): typeof Internal.LavaFluid$Source;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.PrioritizeChunkUpdates"): typeof Internal.PrioritizeChunkUpdates;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.gui.element.DelegatedStencilElement$ElementRenderer"): Internal.DelegatedStencilElement$ElementRenderer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.dnd.DropTargetEvent"): typeof Internal.DropTargetEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.level.feature.config.WhalefallFeatureConfiguration"): typeof Internal.WhalefallFeatureConfiguration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.objects.Object2DoubleFunction"): Internal.Object2DoubleFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.advancements.Advancement$Builder"): typeof Internal.Advancement$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.FireworkRocketItem$Shape"): typeof Internal.FireworkRocketItem$Shape;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.rhino.Function"): dev.latvian.mods.rhino.Function;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.maven.artifact.repository.ArtifactRepository"): Internal.ArtifactRepository;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.util.CronExpression"): typeof Internal.CronExpression;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.api.machine.MachineStatus"): typeof Internal.MachineStatus;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.templatesystem.AxisAlignedLinearPosTest"): typeof Internal.AxisAlignedLinearPosTest;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.SpelunkeryTableBlock"): typeof Internal.SpelunkeryTableBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.LevelTimeAccess"): Internal.LevelTimeAccess;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.PlayerWallHeadBlock"): typeof Internal.PlayerWallHeadBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.items.CageItem"): typeof Internal.CageItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.ResourceLoadStateTracker"): typeof Internal.ResourceLoadStateTracker;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.level.gen.properties.RemoveSpawnsProperties"): typeof Internal.RemoveSpawnsProperties;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.floats.Float2ShortFunction"): Internal.Float2ShortFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.almostreliable.ponderjs.particles.ParticleTransformation"): Internal.ParticleTransformation;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.BasePressurePlateBlock"): typeof Internal.BasePressurePlateBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.OpFlushState"): typeof Internal.OpFlushState;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$EntityBlockPosContext"): typeof Internal.ContextUtils$EntityBlockPosContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2backpack.content.bag.BookBag"): typeof Internal.BookBag;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.schema.RecipeConstructor"): typeof Internal.RecipeConstructor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.status.ServerStatus$Favicon"): typeof Internal.ServerStatus$Favicon;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.authlib.UserAuthentication"): Internal.UserAuthentication;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.item.FuelItem"): typeof Internal.FuelItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.TwistingVinesPlantBlock"): typeof Internal.TwistingVinesPlantBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.core.animation.AnimationController$ParticleKeyframeHandler"): Internal.AnimationController$ParticleKeyframeHandler;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.resources.model.ModelState"): Internal.ModelState;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.common.collect.Multiset$Entry"): Internal.Multiset$Entry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.beneficial.EffectPossession"): typeof Internal.EffectPossession;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.security.CodeSource"): typeof Internal.CodeSource;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.sorcery.ItemCrystalPhylactery"): typeof Internal.ItemCrystalPhylactery;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.ui.Widget$DrawLayer"): typeof Internal.Widget$DrawLayer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.constructs.parts.arms.ConstructPartBladeArmLeft"): typeof Internal.ConstructPartBladeArmLeft;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.gui.element.StencilElement"): typeof Internal.StencilElement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "snownee.jade.impl.Tooltip"): typeof snownee.jade.impl.Tooltip;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.artifice.ElementalSentryBlock"): typeof Internal.ElementalSentryBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.rhino.Script"): Internal.Script;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.util.IntProperty"): typeof Internal.IntProperty;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.integration.kubejs.requirements.BiomeRequirementJS"): Internal.BiomeRequirementJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.network.HandshakeMessages$LoginIndexedMessage"): typeof Internal.HandshakeMessages$LoginIndexedMessage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.generator.AssetJsonGenerator"): typeof Internal.AssetJsonGenerator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.world.CMMobSpawnStructureModifier"): typeof Internal.CMMobSpawnStructureModifier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.gui.GuiParent"): typeof Internal.GuiParent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.brigadier.builder.RequiredArgumentBuilder"): typeof Internal.RequiredArgumentBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.client.painter.screen.PaintScreenEventJS"): typeof Internal.PaintScreenEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.view.View$OnContextClickListener"): Internal.View$OnContextClickListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.GrowingPlantBodyBlock"): typeof Internal.GrowingPlantBodyBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.chunk.LightChunk"): Internal.LightChunk;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.almostreliable.ponderjs.PonderItemTagEventJS"): typeof Internal.PonderItemTagEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.stats.StatFormatter"): Internal.StatFormatter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.BellowsBlock"): typeof Internal.BellowsBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.beneficial.EffectChronoAnchor"): typeof Internal.EffectChronoAnchor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbchunks.core.BlockStateFTBC"): Internal.BlockStateFTBC;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.jmx.RingBufferAdminMBean"): Internal.RingBufferAdminMBean;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.Panda$Gene"): typeof Internal.Panda$Gene;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.blocks.Altar_Of_Amethyst_Block"): typeof Internal.Altar_Of_Amethyst_Block;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.sorcery.PulseBlock"): typeof Internal.PulseBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.core.NonNullList"): typeof Internal.NonNullList;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.item.custom.ArmorItemBuilder$Boots"): typeof Internal.ArmorItemBuilder$Boots;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.PipeBlock"): typeof Internal.PipeBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.items.Ignitium_Armor"): typeof Internal.Ignitium_Armor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.sorcery.TransitoryTileBlock"): typeof Internal.TransitoryTileBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.net.Advertiser"): Internal.Advertiser;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.objects.Reference2LongFunction"): Internal.Reference2LongFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.illusivesoulworks.comforts.common.block.HammockBlock"): typeof Internal.HammockBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.crafting.ShapelessRecipe$Serializer"): typeof Internal.ShapelessRecipe$Serializer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.LakeFeature"): typeof Internal.LakeFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.templatesystem.RuleTest"): typeof Internal.RuleTest;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.OpsRenderPass"): typeof Internal.OpsRenderPass;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.crafting.ShieldDecorationRecipe"): typeof Internal.ShieldDecorationRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.fragment.FragmentManager$OnBackStackChangedListener"): Internal.FragmentManager$OnBackStackChangedListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "top.theillusivec4.curios.api.type.capability.ICurio"): Internal.ICurio;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.item.MissingItem"): typeof Internal.MissingItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.level.structure.AbstractCaveGenerationStructure"): typeof Internal.AbstractCaveGenerationStructure;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$PassengerEntityContext"): typeof Internal.ContextUtils$PassengerEntityContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.GraphicsPipelineState"): typeof Internal.GraphicsPipelineState;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.LightningBolt"): typeof Internal.LightningBolt;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.SculkSpreader"): typeof Internal.SculkSpreader;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.TrappedChestBlock"): typeof Internal.TrappedChestBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.screens.worldselection.PresetEditor"): Internal.PresetEditor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.block.predicate.BlockIDPredicate$PropertyObject"): typeof Internal.BlockIDPredicate$PropertyObject;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "snownee.jade.api.callback.JadeTooltipCollectedCallback"): Internal.JadeTooltipCollectedCallback;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.config.ConfigurationScheduler"): typeof Internal.ConfigurationScheduler;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.longs.Long2LongFunction"): Internal.Long2LongFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.item.ScreenBlockItem"): typeof Internal.ScreenBlockItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.kosmx.playerAnim.mixin.firstPerson.CameraAccessor"): dev.kosmx.playerAnim.mixin.firstPerson.CameraAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.telemetry.ClientTelemetryManager"): typeof Internal.ClientTelemetryManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.event.ContainerEvent"): typeof Internal.ContainerEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.Display$TextDisplay$CachedInfo"): typeof Internal.Display$TextDisplay$CachedInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.packs.repository.PackRepository"): typeof Internal.PackRepository;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexthe666.citadel.server.generation.SpawnProbabilityModifier"): typeof Internal.SpawnProbabilityModifier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.objects.AbstractObjectCollection"): typeof Internal.AbstractObjectCollection;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.items.BlackboardItem"): typeof Internal.BlackboardItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.lwjgl.stb.STBIWriteCallbackI"): Internal.STBIWriteCallbackI;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.level.LevelEvent"): typeof Internal.LevelEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.util.ProgressChange"): typeof Internal.ProgressChange;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.security.PrivilegedExceptionAction"): Internal.PrivilegedExceptionAction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.artifice.SlipstreamGeneratorBlock"): typeof Internal.SlipstreamGeneratorBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.configurations.RandomPatchConfiguration"): typeof Internal.RandomPatchConfiguration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.arguments.ArgumentSignatures$Entry"): typeof Internal.ArgumentSignatures$Entry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.data.DataProvider$Factory"): Internal.DataProvider$Factory;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.level.gen.filter.mob.MobFilter"): Internal.MobFilter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.sensing.IsInWaterSensor"): typeof Internal.IsInWaterSensor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.resources.language.LanguageManager"): typeof Internal.LanguageManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.ints.IntOpenHashSet"): typeof Internal.IntOpenHashSet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.ConduitBlock"): typeof Internal.ConduitBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.bindings.UtilsWrapper"): Utils;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.LevelReader"): Internal.LevelReader;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.crafting.IShapedRecipe"): Internal.IShapedRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.Stack"): typeof Internal.Stack;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.recipes.runeforging.RuneforgingRecipe"): typeof Internal.RuneforgingRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.rhino.mod.wrapper.DirectionWrapper"): Facing;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.kosmx.playerAnim.api.firstPerson.FirstPersonConfiguration"): typeof Internal.FirstPersonConfiguration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.base.ItemBagBase"): typeof Internal.ItemBagBase;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.behavior.LongJumpToRandomPos"): typeof Internal.LongJumpToRandomPos;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.chat.LastSeenMessages$Packed"): typeof Internal.LastSeenMessages$Packed;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.PlayLevelSoundEvent"): typeof Internal.PlayLevelSoundEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.NoiseSettings"): typeof Internal.NoiseSettings;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.view.ViewTreeObserver$OnPreDrawListener"): Internal.ViewTreeObserver$OnPreDrawListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.SculkBehaviour"): Internal.SculkBehaviour;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.api.codec.NamedCodec"): Internal.NamedCodec;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.world.BiomeSpecialEffectsBuilder"): typeof Internal.BiomeSpecialEffectsBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.SpawnPlacementRegisterEvent$Operation"): typeof Internal.SpawnPlacementRegisterEvent$Operation;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.schedule.Activity"): typeof Internal.Activity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.constructs.parts.torso.ConstructPartStorageTorso"): typeof Internal.ConstructPartStorageTorso;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.RelayerBlock"): typeof Internal.RelayerBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.behavior.Behavior"): typeof Internal.Behavior;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.structures.Cursed_Pyramid_Structure"): typeof Internal.Cursed_Pyramid_Structure;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.BowlFoodItem"): typeof Internal.BowlFoodItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.living.vanilla.CowJSBuilder"): typeof Internal.CowJSBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.server.CommandEventJS"): typeof Internal.CommandEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.raid.Raider"): typeof Internal.Raider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.AbstractGolem"): typeof Internal.AbstractGolem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.misc.explosion.BombExplosion"): typeof Internal.BombExplosion;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ambient.Bat"): typeof Internal.Bat;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.architectury.hooks.level.biome.SpawnProperties"): Internal.SpawnProperties;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.runes.ItemMetalRitualRune"): typeof Internal.ItemMetalRitualRune;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.context.UseOnContext"): typeof Internal.UseOnContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "snownee.jade.api.theme.Theme"): typeof snownee.jade.api.theme.Theme;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.tags.TagLoader$EntryWithSource"): typeof Internal.TagLoader$EntryWithSource;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.TickablePacketListener"): Internal.TickablePacketListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.NoiseRouter"): typeof Internal.NoiseRouter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.component.OrRecipeComponent"): typeof Internal.OrRecipeComponent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.carver.CaveCarverConfiguration"): typeof Internal.CaveCarverConfiguration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.lodestar.lodestone.systems.easing.Easing$Elastic"): typeof Internal.Easing$Elastic;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.GpuResource"): typeof Internal.GpuResource;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.entity.util.WatcherPossessionAccessor"): Internal.WatcherPossessionAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.blaze3d.vertex.VertexFormat$Mode"): typeof Internal.VertexFormat$Mode;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.EnderEyeItem"): typeof Internal.EnderEyeItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.LingeringPotionItem"): typeof Internal.LingeringPotionItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.common.collect.Maps$IteratorBasedAbstractMap"): typeof Internal.Maps$IteratorBasedAbstractMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.architectury.hooks.level.biome.ClimateProperties"): Internal.ClimateProperties;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.objects.Reference2DoubleFunction"): Internal.Reference2DoubleFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.IFrameBlock"): Internal.IFrameBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.SuspiciousStewItem"): typeof Internal.SuspiciousStewItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.DoubleBlockCombiner$Combiner"): Internal.DoubleBlockCombiner$Combiner;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.UseAnim"): typeof Internal.UseAnim;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.item.CustomIconItem"): typeof Internal.CustomIconItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.api.network.ISyncable"): Internal.ISyncable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.level.DistanceManager"): typeof Internal.DistanceManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundSetBorderLerpSizePacket"): typeof Internal.ClientboundSetBorderLerpSizePacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.WorldgenRandom"): typeof Internal.WorldgenRandom;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.block.TaskScreenBlock"): typeof Internal.TaskScreenBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.shorts.ShortSpliterator"): Internal.ShortSpliterator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.irisshaders.iris.mixin.texture.SpriteContentsAnimatedTextureAccessor"): Internal.SpriteContentsAnimatedTextureAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.artifice.curio.ItemEmberglowBracelet"): typeof Internal.ItemEmberglowBracelet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.items.TieredBlockItem"): typeof Internal.TieredBlockItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.projectile.ThrownTrident"): typeof Internal.ThrownTrident;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.crafting.CampfireCookingRecipe"): typeof Internal.CampfireCookingRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.world.ModifiableBiomeInfo$BiomeInfo$Builder"): typeof Internal.ModifiableBiomeInfo$BiomeInfo$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.bettercombat.mixin.LivingEntityAccessor"): net.bettercombat.mixin.LivingEntityAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.text.UnicodeSet"): typeof Internal.UnicodeSet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.fluids.ForgeFlowingFluid$Source"): typeof Internal.ForgeFlowingFluid$Source;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.world.ModifiableBiomeInfo$BiomeInfo"): typeof Internal.ModifiableBiomeInfo$BiomeInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.commons.lang3.mutable.MutableObject"): typeof Internal.MutableObject;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbchunks.api.ClaimResult"): Internal.ClaimResult;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "kotlin.reflect.KVisibility"): typeof Internal.KVisibility;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.config.CustomLevelConfig"): typeof Internal.CustomLevelConfig;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.trunkplacers.DarkOakTrunkPlacer"): typeof Internal.DarkOakTrunkPlacer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.material.EmptyFluid"): typeof Internal.EmptyFluid;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.animatable.GeoItem"): Internal.GeoItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.recipes.manaweaving.ManaweavingPatternSerializer"): typeof Internal.ManaweavingPatternSerializer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.quest.task.CustomTask$Check"): Internal.CustomTask$Check;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.Packet"): Internal.Packet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundSetHealthPacket"): typeof Internal.ClientboundSetHealthPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.illusivesoulworks.comforts.common.block.SleepingBagBlock"): typeof Internal.SleepingBagBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.synchronization.brigadier.DoubleArgumentInfo$Template"): typeof Internal.DoubleArgumentInfo$Template;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.cerbon.bosses_of_mass_destruction.item.custom.BrimstoneNectarItem"): typeof Internal.BrimstoneNectarItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.doubles.DoubleConsumer"): it.unimi.dsi.fastutil.doubles.DoubleConsumer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.event.EventResult"): typeof Internal.EventResult;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.sensing.NearestItemSensor"): typeof Internal.NearestItemSensor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.chunk.ChunkGenerator"): typeof Internal.ChunkGenerator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.beneficial.EffectFireShield"): typeof Internal.EffectFireShield;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.NetherPortalBlock"): typeof Internal.NetherPortalBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.CreativeModeTab$Type"): typeof Internal.CreativeModeTab$Type;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.quest.reward.RewardAutoClaim"): typeof Internal.RewardAutoClaim;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.registries.IForgeRegistry$MissingFactory"): Internal.IForgeRegistry$MissingFactory;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.debug.BrainDebugRenderer$BrainDump"): typeof Internal.BrainDebugRenderer$BrainDump;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.registry.RegistryInfo"): typeof Internal.RegistryInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.ints.IntIterable"): Internal.IntIterable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.objects.AbstractObject2IntFunction"): typeof Internal.AbstractObject2IntFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.time.Duration"): typeof Duration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.recipes.multiblock.MultiblockRecipeSerializer"): typeof Internal.MultiblockRecipeSerializer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.level.feature.config.UndergroundRuinsFeatureConfiguration"): typeof Internal.UndergroundRuinsFeatureConfiguration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.StringSplitter$WidthProvider"): Internal.StringSplitter$WidthProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.OnDatapackSyncEvent"): typeof Internal.OnDatapackSyncEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.damagesource.DamageSources"): typeof Internal.DamageSources;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundCommandSuggestionsPacket"): typeof Internal.ClientboundCommandSuggestionsPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.core.WithAttachedData"): Internal.WithAttachedData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.graphics.BlendMode"): typeof icyllis.modernui.graphics.BlendMode;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.integration.kubejs.CustomMachineRecipeBuilderJS"): typeof Internal.CustomMachineRecipeBuilderJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.command.ArgumentTypeWrapper"): Internal.ArgumentTypeWrapper;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.SpringLauncherHeadBlock"): typeof Internal.SpringLauncherHeadBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.tileentities.wizard_lab.InscriptionTableTile"): typeof Internal.InscriptionTableTile;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.illusivesoulworks.comforts.common.item.RopeAndNailItem"): typeof Internal.RopeAndNailItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.items.Remnant_Skull"): typeof Internal.Remnant_Skull;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.interfaces.IDoubleTapEndEarly"): Internal.IDoubleTapEndEarly;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.ritual.RitualTeleportLocationBlock"): typeof Internal.RitualTeleportLocationBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.util.type.Color"): typeof team.creative.creativecore.common.util.type.Color;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.RenderGuiOverlayEvent$Post"): typeof Internal.RenderGuiOverlayEvent$Post;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.foliageplacers.FoliagePlacer$FoliageSetter"): Internal.FoliagePlacer$FoliageSetter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.block.custom.MultipartShapedBlockBuilder"): typeof Internal.MultipartShapedBlockBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.core.Direction$AxisDirection"): typeof Internal.Direction$AxisDirection;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.blaze3d.platform.InputConstants$Type"): typeof Internal.InputConstants$Type;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.ShoulderRidingEntity"): typeof Internal.ShoulderRidingEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.arguments.ResourceOrTagArgument$Info"): typeof Internal.ResourceOrTagArgument$Info;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.blockpredicates.HasSturdyFacePredicate"): typeof Internal.HasSturdyFacePredicate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.loot.functions.LootItemFunction$Builder"): Internal.LootItemFunction$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.ints.Int2ObjectFunction"): Internal.Int2ObjectFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.arguments.ResourceKeyArgument"): typeof Internal.ResourceKeyArgument;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.BlueIceFeature"): typeof Internal.BlueIceFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.graphics.drawable.Drawable$ConstantState"): typeof Internal.Drawable$ConstantState;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.monster.Phantom"): typeof Internal.Phantom;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "pie.ilikepiefoo.compat.jade.builder.BlockComponentProviderBuilder$IconRetriever"): Internal.BlockComponentProviderBuilder$IconRetriever;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ContainerScreenEvent$Render$Foreground"): typeof Internal.ContainerScreenEvent$Render$Foreground;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.events.AddGoalTargetsEventJS"): typeof Internal.AddGoalTargetsEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.caffeinemc.mods.sodium.api.vertex.format.VertexFormatDescription"): Internal.VertexFormatDescription;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.entities.construct.ai.ConstructAITask"): typeof Internal.ConstructAITask;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.tags.TagNetworkSerialization$NetworkPayload"): typeof Internal.TagNetworkSerialization$NetworkPayload;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.phys.AABB"): typeof Internal.AABB;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.registries.RegisterEvent$RegisterHelper"): Internal.RegisterEvent$RegisterHelper;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$ArrowLivingEntityContext"): typeof Internal.ContextUtils$ArrowLivingEntityContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.packs.repository.Pack$Position"): typeof Internal.Pack$Position;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.gui.flow.GuiStackY"): typeof Internal.GuiStackY;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundPickItemPacket"): typeof Internal.ServerboundPickItemPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.gui.VAlign"): typeof Internal.VAlign;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.maven.artifact.repository.Authentication"): typeof Internal.Authentication;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.level.structure.OceanTrenchStructure"): typeof Internal.OceanTrenchStructure;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.living.LivingAttackEvent"): typeof Internal.LivingAttackEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.living.LivingConversionEvent"): typeof Internal.LivingConversionEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.JukeboxBlockEntity"): typeof Internal.JukeboxBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplate"): typeof Internal.StructureTemplate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.extensions.common.IClientItemExtensions"): Internal.IClientItemExtensions;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.DyeableArmorItem"): typeof Internal.DyeableArmorItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jozufozu.flywheel.api.MaterialGroup"): Internal.MaterialGroup;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.EntityRenderersEvent$RegisterLayerDefinitions"): typeof Internal.EntityRenderersEvent$RegisterLayerDefinitions;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jozufozu.flywheel.util.transform.Translate"): Internal.Translate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.chunk.ChunkRenderDispatcher"): typeof Internal.ChunkRenderDispatcher;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.view.View$OnDragListener"): Internal.View$OnDragListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.almostreliable.ponderjs.api.AbstractPonderBuilder"): typeof Internal.AbstractPonderBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.entity.util.MagneticEntityAccessor"): Internal.MagneticEntityAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.prunoideae.powerfuljs.capabilities.forge.CapabilityBuilderForge"): typeof Internal.CapabilityBuilderForge;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.SplashPotionItem"): typeof Internal.SplashPotionItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.core.animation.AnimationController"): typeof Internal.AnimationController;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.core.Direction$Axis"): typeof Internal.Direction$Axis;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.core.object.DataTicket"): typeof Internal.DataTicket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.text.DateFormat"): typeof com.ibm.icu.text.DateFormat;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jozufozu.flywheel.core.layout.LayoutItem"): Internal.LayoutItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.util.math.matrix.Matrix4"): typeof team.creative.creativecore.common.util.math.matrix.Matrix4;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.bettercombat.client.collision.OrientedBoundingBox"): typeof Internal.OrientedBoundingBox;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.server.ServerEventJS"): typeof Internal.ServerEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.block.entity.ITaskScreen"): Internal.ITaskScreen;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.text.NumberFormat$NumberFormatFactory"): typeof Internal.NumberFormat$NumberFormatFactory;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "snownee.jade.api.callback.JadeBeforeRenderCallback"): Internal.JadeBeforeRenderCallback;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "pie.ilikepiefoo.compat.jei.impl.CustomRecipeCategoryDecorator$TooltipDecorator"): Internal.CustomRecipeCategoryDecorator$TooltipDecorator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.InputEvent$InteractionKeyMappingTriggered"): typeof Internal.InputEvent$InteractionKeyMappingTriggered;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "javax.swing.Icon"): javax.swing.Icon;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.CandleHolderBlock"): typeof Internal.CandleHolderBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.block.BlockLeftClickedEventJS"): typeof Internal.BlockLeftClickedEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.RedstoneWallTorchBlock"): typeof Internal.RedstoneWallTorchBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.item.ItemBuilder$ReleaseUsingCallback"): Internal.ItemBuilder$ReleaseUsingCallback;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.advancements.critereon.MinMaxBounds"): typeof Internal.MinMaxBounds;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.cerbon.bosses_of_mass_destruction.item.custom.MaterialItem"): typeof Internal.MaterialItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.SporeBlossomBlock"): typeof Internal.SporeBlossomBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.NeutralMob"): Internal.NeutralMob;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.ServerScoreboard"): typeof Internal.ServerScoreboard;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.config.ConfigWithVariants"): typeof Internal.ConfigWithVariants;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.artifice.ItemSpectralElytra"): typeof Internal.ItemSpectralElytra;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.architectury.utils.OptionalSupplier"): Internal.OptionalSupplier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.item.ModFishBucketItem"): typeof Internal.ModFishBucketItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.ritual.ItemPractitionersPatch"): typeof Internal.ItemPractitionersPatch;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.item.ExtinctionSpearItem"): typeof Internal.ExtinctionSpearItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.fnc.common.effect.beneficial.MaximizedMobEffect"): typeof Internal.MaximizedMobEffect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.schema.RecipeSchemaType"): typeof Internal.RecipeSchemaType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.prunoideae.powerfuljs.capabilities.forge.mods.curios.CapabilityCurios$ItemStackBuilder"): typeof Internal.CapabilityCurios$ItemStackBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.items.Necklace_Of_The_Desert"): typeof Internal.Necklace_Of_The_Desert;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.network.messages.IMAMessage"): Internal.IMAMessage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "top.theillusivec4.curios.api.type.capability.ICurio$DropRule"): typeof Internal.ICurio$DropRule;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.view.View$OnLayoutChangeListener"): Internal.View$OnLayoutChangeListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.ingredients.IIngredientRenderer"): Internal.IIngredientRenderer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundStopSoundPacket"): typeof Internal.ClientboundStopSoundPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.server.tag.TagEventJS"): typeof Internal.TagEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.network.CreativePacket"): typeof Internal.CreativePacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.nonliving.vanilla.BoatEntityBuilder"): typeof Internal.BoatEntityBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.dnd.DragSourceEvent"): typeof Internal.DragSourceEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.impl.units.MeasureUnitImpl$MeasureUnitImplWithIndex"): typeof Internal.MeasureUnitImpl$MeasureUnitImplWithIndex;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.EndPortalBlock"): typeof Internal.EndPortalBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.ImmutableCollections$AbstractImmutableMap"): typeof Internal.ImmutableCollections$AbstractImmutableMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.almostreliable.lootjs.forge.filters.ForgeItemFilter"): ForgeItemFilter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.serialization.MapCodec"): typeof Internal.MapCodec;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "io.ejekta.bountiful.bounty.DecreeData$Companion"): typeof Internal.DecreeData$Companion;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jozufozu.flywheel.util.box.CoordinateConsumer"): Internal.CoordinateConsumer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.Level$ExplosionInteraction"): typeof Internal.Level$ExplosionInteraction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.ElytraItem"): typeof Internal.ElytraItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.EntityJoinLevelEvent"): typeof Internal.EntityJoinLevelEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.core.LootTablesKJS"): Internal.LootTablesKJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.runtime.IIngredientVisibility$IListener"): Internal.IIngredientVisibility$IListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.world.ModifiableStructureInfo$StructureInfo$Builder"): typeof Internal.ModifiableStructureInfo$StructureInfo$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.integration.kubejs.requirements.ItemFilterRequirementJS"): Internal.ItemFilterRequirementJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.ritual.ItemPurifiedVinteumDust"): typeof Internal.ItemPurifiedVinteumDust;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.BitStorage"): Internal.BitStorage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.sound.SoundEvent"): typeof net.minecraftforge.client.event.sound.SoundEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.longs.Long2ByteFunction"): Internal.Long2ByteFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.player.PlayerInteractEvent$LeftClickBlock$Action"): typeof Internal.PlayerInteractEvent$LeftClickBlock$Action;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.enchantments.TransitoryStep"): typeof Internal.TransitoryStep;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.api.crafting.IRecipeBuilder"): Internal.IRecipeBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.gui.event.GuiControlEvent"): typeof Internal.GuiControlEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.advancements.critereon.MinMaxBounds$Ints"): typeof Internal.MinMaxBounds$Ints;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.dmnr.common.item.TheClickersCookieItem"): typeof Internal.TheClickersCookieItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.sorcery.bound.ItemBoundShield"): typeof Internal.ItemBoundShield;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.trading.MerchantOffers"): typeof Internal.MerchantOffers;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.constructs.parts.head.ConstructPartSmartHead"): typeof Internal.ConstructPartSmartHead;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundLevelChunkPacketData$BlockEntityTagOutput"): Internal.ClientboundLevelChunkPacketData$BlockEntityTagOutput;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.ScatteredOreFeature"): typeof Internal.ScatteredOreFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.Connection"): typeof Internal.Connection;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.VineBlock"): typeof Internal.VineBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.xylonity.knightquest.registry.KnightQuestItems$1"): typeof Internal.KnightQuestItems$1;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.common.collect.ForwardingObject"): typeof Internal.ForwardingObject;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.ArmorItem"): typeof Internal.ArmorItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.architectury.hooks.level.biome.GenerationProperties"): Internal.GenerationProperties;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.armor.FeyArmorItem"): typeof Internal.FeyArmorItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.common.base.Supplier"): com.google.common.base.Supplier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.particles.parameters.ParticleColor"): typeof Internal.ParticleColor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ScreenEvent$KeyReleased"): typeof Internal.ScreenEvent$KeyReleased;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.state.properties.StructureMode"): typeof Internal.StructureMode;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.artifice.charms.CharmBaseItem"): typeof Internal.CharmBaseItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$EntityAnimalContext"): typeof Internal.ContextUtils$EntityAnimalContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.client.painter.PainterObjectStorage"): typeof Internal.PainterObjectStorage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.illusivesoulworks.comforts.common.block.BaseComfortsBlock"): typeof Internal.BaseComfortsBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.MudBlock"): typeof Internal.MudBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.abdelaziz.canary.common.block.entity.inventory_comparator_tracking.ComparatorTracker"): Internal.ComparatorTracker;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.command.CommandRegistryEventJS"): typeof Internal.CommandRegistryEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.Processor"): typeof Internal.Processor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.blockpredicates.TrueBlockPredicate"): typeof Internal.TrueBlockPredicate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.joml.Vector2dc"): Internal.Vector2dc;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.text.DisplayContext"): typeof Internal.DisplayContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.state.properties.ComparatorMode"): typeof Internal.ComparatorMode;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.entities.living.vanilla.ChickenEntityJS"): typeof Internal.ChickenEntityJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "snownee.jade.api.ui.IElement$Align"): typeof Internal.IElement$Align;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.integration.forge.jei.HideJEIEventJS"): typeof Internal.HideJEIEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.chat.MessageSignatureCache"): typeof Internal.MessageSignatureCache;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "me.Thelnfamous1.mobplayeranimator.mixin.client.ModelPartAccessor"): Internal.ModelPartAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.raid.Raids"): typeof Internal.Raids;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbchunks.api.ProtectionPolicy"): typeof Internal.ProtectionPolicy;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jozufozu.flywheel.core.layout.BufferLayout"): typeof Internal.BufferLayout;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.recipes.progression.ProgressionCondition"): typeof Internal.ProgressionCondition;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.PacketFlow"): typeof Internal.PacketFlow;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.loot.predicates.LootItemCondition"): Internal.LootItemCondition;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.rhino.util.ValueUnwrapper"): Internal.ValueUnwrapper;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.sorcery.ItemAnimusDust"): typeof Internal.ItemAnimusDust;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jtorleonstudios.libraryferret.effect.StatusEffects$1"): typeof Internal.StatusEffects$1;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.blaze3d.font.GlyphInfo"): Internal.GlyphInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.function.IntToLongFunction"): Internal.IntToLongFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.living.vanilla.EvokerJSBuilder"): typeof Internal.EvokerJSBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "vazkii.patchouli.mixin.client.AccessorMultiBufferSource"): Internal.AccessorMultiBufferSource;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "snownee.jade.api.EntityAccessor$Builder"): Internal.EntityAccessor$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.crafting.FireworkStarRecipe"): typeof Internal.FireworkStarRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.DifficultyInstance"): typeof Internal.DifficultyInstance;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.component.RecipeComponent"): Internal.RecipeComponent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.component.NumberComponent"): Internal.NumberComponent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.ints.Int2CharFunction"): Internal.Int2CharFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.Unit"): typeof net.minecraft.util.Unit;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundChatPacket"): typeof Internal.ServerboundChatPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.core.MinecraftClientKJS"): Internal.MinecraftClientKJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.helpers.IGuiHelper"): Internal.IGuiHelper;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.entities.attributes.AttributeIntelligence"): typeof Internal.AttributeIntelligence;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.util.ULocale"): typeof Internal.ULocale;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.stream.LongStream$LongMapMultiConsumer"): Internal.LongStream$LongMapMultiConsumer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.DensityFunctions$PureTransformer"): Internal.DensityFunctions$PureTransformer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.ButtonBlock"): typeof Internal.ButtonBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.amendments.common.block.DirectionalCakeBlock"): typeof Internal.DirectionalCakeBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.manaweaving.ItemManaweaverWand"): typeof Internal.ItemManaweaverWand;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundJigsawGeneratePacket"): typeof Internal.ServerboundJigsawGeneratePacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.WitherRoseBlock"): typeof Internal.WitherRoseBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.impl.TextTrieMap"): typeof Internal.TextTrieMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.misc.EnchantmentBuilder$DamageProtectionFunction"): Internal.EnchantmentBuilder$DamageProtectionFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.core.ClientPlayerKJS"): Internal.ClientPlayerKJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.rootplacers.MangroveRootPlacer"): typeof Internal.MangroveRootPlacer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "vazkii.patchouli.mixin.client.AccessorClientAdvancements"): Internal.AccessorClientAdvancements;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexthe666.citadel.server.event.EventReplaceBiome"): typeof Internal.EventReplaceBiome;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.gui.chest.ChestMenuClickHandler"): typeof Internal.ChestMenuClickHandler;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.texture.TextureAtlasSprite$Ticker"): Internal.TextureAtlasSprite$Ticker;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "me.Thelnfamous1.mobplayeranimator.api.FirstPersonTracker"): Internal.FirstPersonTracker;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.lwjgl.system.MemoryStack"): typeof Internal.MemoryStack;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.OpticFinder"): Internal.OpticFinder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.tree.FunctionReference"): typeof Internal.FunctionReference;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.damagesource.DeathMessageType"): typeof Internal.DeathMessageType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.loot.LootBuilder"): typeof Internal.LootBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.joml.Vector2f"): typeof Internal.Vector2f;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.generator.ResourceGenerator"): typeof Internal.ResourceGenerator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.eventbus.api.IGenericEvent"): Internal.IGenericEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.blocks.PotionPylonBlock"): typeof Internal.PotionPylonBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.integration.kubejs.requirements.EntityRequirementJS"): Internal.EntityRequirementJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.starfish_studios.bbb.block.BlockBlock$Type"): Internal.BlockBlock$Type;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.SmallDripleafBlock"): typeof Internal.SmallDripleafBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.HollowBoneBlock"): typeof Internal.HollowBoneBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.server.item.ItemMobRemover"): typeof Internal.ItemMobRemover;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.monster.Ravager"): typeof Internal.Ravager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.block.ItemDisplayTile"): typeof Internal.ItemDisplayTile;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.common.cache.CacheStats"): typeof Internal.CacheStats;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.booleans.Boolean2ReferenceFunction"): Internal.Boolean2ReferenceFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.raphimc.immediatelyfast.feature.map_atlas_generation.MapAtlasTexture"): typeof Internal.MapAtlasTexture;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.almostreliable.ponderjs.particles.ParticleDataBuilder$DustParticleDataBuilder"): typeof Internal.ParticleDataBuilder$DustParticleDataBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.Chicken"): typeof Internal.Chicken;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.items.Athame"): typeof Internal.Athame;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.ModifyRecipeCraftingGrid"): typeof Internal.ModifyRecipeCraftingGrid;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.api.network.DataType"): typeof Internal.DataType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.MelonBlock"): typeof Internal.MelonBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.unit.Unit"): typeof Internal.Unit;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.nonliving.BaseEntityBuilder$ParticleKeyFrameEventJS"): typeof Internal.BaseEntityBuilder$ParticleKeyFrameEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.DiggerItem"): typeof Internal.DiggerItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$CalculateFallDamageContext"): typeof Internal.ContextUtils$CalculateFallDamageContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.Equipable"): Internal.Equipable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.ints.AbstractIntSet"): typeof Internal.AbstractIntSet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.MinecraftServer$ServerResourcePackInfo"): typeof Internal.MinecraftServer$ServerResourcePackInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.abdelaziz.canary.common.block.entity.inventory_change_tracking.InventoryChangeTracker"): Internal.InventoryChangeTracker;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.core.mixins.accessor.DispenserBlockAccessor"): Internal.DispenserBlockAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.core.RegistryAccess"): Internal.RegistryAccess;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.BannerItem"): typeof Internal.BannerItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.player.PlayerContainerEvent$Close"): typeof Internal.PlayerContainerEvent$Close;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.event.ActionListener"): Internal.ActionListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.ticks.TickPriority"): typeof Internal.TickPriority;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.common.collect.ImmutableSet"): typeof Internal.ImmutableSet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.SaplingBlock"): typeof Internal.SaplingBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.util.math.vec.VecNf"): typeof Internal.VecNf;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.map.markers.MapBlockMarker"): typeof Internal.MapBlockMarker;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.Stroke"): Internal.Stroke;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.RenderHandEvent"): typeof Internal.RenderHandEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.platform.forge.ingredient.KubeJSIngredient"): typeof Internal.KubeJSIngredient;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.capabilities.CapabilityProvider"): typeof Internal.CapabilityProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.stateproviders.RuleBasedBlockStateProvider$Rule"): typeof Internal.RuleBasedBlockStateProvider$Rule;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.ResourceProvider"): typeof icyllis.arc3d.engine.ResourceProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.particles.parameters.ParticleInt"): typeof Internal.ParticleInt;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "Tavi007.ElementalCombat.enchantments.ElementalWeaponEnchantment"): typeof Internal.ElementalWeaponEnchantment;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.entity.EntityRendererProvider"): Internal.EntityRendererProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.Aquifer$FluidPicker"): Internal.Aquifer$FluidPicker;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.recipes.spells.ComponentRecipeSerializer"): typeof Internal.ComponentRecipeSerializer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.irisshaders.batchedentityrendering.impl.BufferBuilderExt"): Internal.BufferBuilderExt;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.fragment.FragmentResultListener"): Internal.FragmentResultListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.level.carver.WaterBubbleCarver"): typeof Internal.WaterBubbleCarver;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.model.data.ModelData$Builder"): typeof Internal.ModelData$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.inventory.ChestMenu"): typeof Internal.ChestMenu;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.rhino.mod.util.CountingMap"): typeof Internal.CountingMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jozufozu.flywheel.api.InstanceData"): typeof Internal.InstanceData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.recipes.progression.ProgressionConditionSerializer"): typeof Internal.ProgressionConditionSerializer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.floats.Float2ObjectFunction"): Internal.Float2ObjectFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.objects.ReferenceSet"): Internal.ReferenceSet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.WorldGenerationContext"): typeof Internal.WorldGenerationContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.npc.Npc"): Internal.Npc;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.MinecraftServer"): typeof Internal.MinecraftServer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.ingredientaction.CustomIngredientActionCallback"): Internal.CustomIngredientActionCallback;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.util.NotificationBuilder"): typeof Notification;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.BufferCapabilities"): typeof Internal.BufferCapabilities;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.gui.overlay.NamedGuiOverlay"): typeof Internal.NamedGuiOverlay;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.block.predicate.BlockIDPredicate"): typeof Internal.BlockIDPredicate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.objects.Object2ReferenceFunction"): Internal.Object2ReferenceFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.Interaction"): typeof Internal.Interaction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.rhino.mod.util.NBTSerializable"): Internal.NBTSerializable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.SurfaceProxy"): typeof Internal.SurfaceProxy;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.quest.task.TaskType"): typeof Internal.TaskType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.RenderLivingEvent$Pre"): typeof Internal.RenderLivingEvent$Pre;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.brewing.ManaPotion"): typeof Internal.ManaPotion;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.FenceBlock"): typeof Internal.FenceBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "pie.ilikepiefoo.compat.jei.builder.RecipeCategoryBuilder$DrawHandler"): Internal.RecipeCategoryBuilder$DrawHandler;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.components.TabOrderedElement"): Internal.TabOrderedElement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.xylonity.knightquest.common.item.KQItem"): typeof Internal.KQItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.level.gen.RemoveWorldgenEventJS"): typeof Internal.RemoveWorldgenEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.rhino.mod.wrapper.UUIDWrapper"): UUID;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.PlanterBlock"): typeof Internal.PlanterBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.TargetApi"): typeof Internal.TargetApi;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.almostreliable.lootjs.filters.ItemFilter"): ItemFilter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.player.PlayerInteractEvent$RightClickEmpty"): typeof Internal.PlayerInteractEvent$RightClickEmpty;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.core.Matrix4"): typeof Internal.Matrix4;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.serialization.MapEncoder"): Internal.MapEncoder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "malte0811.ferritecore.mixin.dedupbakedquad.BakedQuadAccess"): Internal.BakedQuadAccess;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.StructureTempBlock"): typeof Internal.StructureTempBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.events.ComponentApplyingEvent"): typeof Internal.ComponentApplyingEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.enchantments.staves.Bludgeoning"): typeof Internal.Bludgeoning;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.Products$P1"): typeof Internal.Products$P1;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.FriendlyByteBuf$Reader"): Internal.FriendlyByteBuf$Reader;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.resources.sounds.Sound"): typeof Internal.Sound;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.PipelineStateCache$Stats"): typeof Internal.PipelineStateCache$Stats;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.Squid"): typeof Internal.Squid;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.BeehiveBlock"): typeof Internal.BeehiveBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "vazkii.patchouli.api.IVariable"): Internal.IVariable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.enchantments.ManaRepair"): typeof Internal.ManaRepair;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.resources.SplashManager"): typeof Internal.SplashManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.guidebook.RegisterGuidebooksEvent"): typeof Internal.RegisterGuidebooksEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.view.MenuItem"): icyllis.modernui.view.MenuItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.time.format.FormatStyle"): typeof Internal.FormatStyle;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundLightUpdatePacket"): typeof Internal.ClientboundLightUpdatePacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap"): typeof Internal.Long2ObjectLinkedOpenHashMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.EndGatewayFeature"): typeof Internal.EndGatewayFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.item.BlockTypeBasedItem"): typeof Internal.BlockTypeBasedItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.multiplayer.ClientAdvancements$Listener"): Internal.ClientAdvancements$Listener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.level.feature.AmberMonolithFeature"): typeof Internal.AmberMonolithFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.resources.sounds.Sound$Type"): typeof Internal.Sound$Type;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.integration.kubejs.requirements.EnergyRequirementJS"): Internal.EnergyRequirementJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.player.StackedContents"): typeof Internal.StackedContents;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.server.entity.grottol.EntityGrottol"): typeof Internal.EntityGrottol;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.inventory.LecternMenu"): typeof Internal.LecternMenu;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.effect.MobEffectInstance$FactorData"): typeof Internal.MobEffectInstance$FactorData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.blaze3d.platform.GlStateManager$SourceFactor"): typeof Internal.GlStateManager$SourceFactor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.world.ForgeBiomeModifiers$AddSpawnsBiomeModifier"): typeof Internal.ForgeBiomeModifiers$AddSpawnsBiomeModifier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.floats.FloatUnaryOperator"): Internal.FloatUnaryOperator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.fnc.compat.dmnr.common.item.DivineDragonMageArmorItem"): typeof Internal.DivineDragonMageArmorItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.BossEvent$BossBarOverlay"): typeof Internal.BossEvent$BossBarOverlay;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.item.LootCrateItem"): typeof Internal.LootCrateItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.bytes.Byte2ShortFunction"): Internal.Byte2ShortFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.components.CycleButton$ValueListSupplier"): Internal.CycleButton$ValueListSupplier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "io.ejekta.kambrik.serial.ItemData"): typeof Internal.ItemData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "pie.ilikepiefoo.compat.jade.builder.BlockComponentProviderBuilder$TooltipRetriever"): Internal.BlockComponentProviderBuilder$TooltipRetriever;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.tree.VariableReference"): typeof Internal.VariableReference;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.dmnr.common.item.RingOfPowerItem"): typeof Internal.RingOfPowerItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.events.GoalEventJS"): typeof Internal.GoalEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.block.predicate.BlockPredicate"): Internal.BlockPredicate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.biome.BiomeResolver"): Internal.BiomeResolver;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.extensions.IForgePlayer"): Internal.IForgePlayer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.time.temporal.ChronoUnit"): typeof Internal.ChronoUnit;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.quest.QuestLink"): typeof Internal.QuestLink;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.bytes.ByteList"): Internal.ByteList;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundSetSimulationDistancePacket"): typeof Internal.ClientboundSetSimulationDistancePacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.registration.IGuiHandlerRegistration"): Internal.IGuiHandlerRegistration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.bytes.ByteUnaryOperator"): Internal.ByteUnaryOperator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.resources.ResourceLocation"): typeof ResourceLocation;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.BarrelBlockEntity"): typeof Internal.BarrelBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.async.EventRoute"): typeof Internal.EventRoute;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.xylonity.knightquest.common.item.KQArmorItem"): typeof Internal.KQArmorItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.init.ModParticle$3"): typeof Internal.ModParticle$3;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.common.collect.ForwardingList"): typeof Internal.ForwardingList;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.objects.Reference2CharFunction"): Internal.Reference2CharFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.realmsclient.dto.ValueObject"): typeof Internal.ValueObject;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.core.HolderGetter$Provider"): Internal.HolderGetter$Provider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.gui.chest.ChestMenuClickEvent$Callback"): Internal.ChestMenuClickEvent$Callback;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.helpers.IModIdHelper"): Internal.IModIdHelper;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.core.ServerLevelKJS"): Internal.ServerLevelKJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.base.IBagItem"): Internal.IBagItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.templatesystem.BlockAgeProcessor"): typeof Internal.BlockAgeProcessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.extensions.IForgeHolderSet"): Internal.IForgeHolderSet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.GeometryProcessor"): typeof Internal.GeometryProcessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.placement.CountPlacement"): typeof Internal.CountPlacement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "me.fengming.renderjs.events.RenderEventJS"): typeof Internal.RenderEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.BambooSaplingBlock"): typeof Internal.BambooSaplingBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.finndog.mss.mixins.structures.StructureTemplateManagerAccessor"): Internal.StructureTemplateManagerAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "Tavi007.ElementalCombat.enchantments.IResistanceEnchantment"): Internal.IResistanceEnchantment;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.prunoideae.powerfuljs.capabilities.forge.CapabilityFluid$CustomTankBuilderBlockEntity"): typeof Internal.CapabilityFluid$CustomTankBuilderBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.init.CustomMachineItem"): typeof Internal.CustomMachineItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.lodestar.lodestone.systems.particle.world.LodestoneWorldParticle"): typeof Internal.LodestoneWorldParticle;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.sorcery.ManaCrystalBlock"): typeof Internal.ManaCrystalBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.TippedArrowItem"): typeof Internal.TippedArrowItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.serialization.codecs.UnboundedMapCodec"): typeof com.mojang.serialization.codecs.UnboundedMapCodec;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.bytes.Byte2ReferenceFunction"): Internal.Byte2ReferenceFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.core.mixins.accessor.BrainAccessor"): Internal.BrainAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.core.Direction$Plane"): typeof Internal.Direction$Plane;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.RegistryLayer"): typeof Internal.RegistryLayer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.authlib.BaseAuthenticationService"): typeof Internal.BaseAuthenticationService;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.NetheriteTrapdoorBlock"): typeof Internal.NetheriteTrapdoorBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.loot.parameters.LootContextParamSet"): typeof Internal.LootContextParamSet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.block.LiquidBlockRenderer"): typeof Internal.LiquidBlockRenderer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.objects.Reference2BooleanFunction"): Internal.Reference2BooleanFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.item.RadioactiveBlockItem"): typeof Internal.RadioactiveBlockItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.level.feature.ThornwoodTreeFeature"): typeof Internal.ThornwoodTreeFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.sensing.PiglinBruteSpecificSensor"): typeof Internal.PiglinBruteSpecificSensor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.DirectionalFacingBlock"): typeof Internal.DirectionalFacingBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.brigadier.AmbiguityConsumer"): Internal.AmbiguityConsumer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.event.EventExceptionHandler"): Internal.EventExceptionHandler;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.recipes.manaweaving.ManaweavingRecipe"): typeof Internal.ManaweavingRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.CommandStorage"): typeof Internal.CommandStorage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.item.FallingBlockEntity"): typeof Internal.FallingBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.CommandBuildContext$Configurable"): Internal.CommandBuildContext$Configurable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jozufozu.flywheel.api.vertex.VertexType"): Internal.VertexType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.BaseCommandBlock"): typeof Internal.BaseCommandBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.core.animation.Animation$Keyframes"): typeof Internal.Animation$Keyframes;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.gui.builder.IRecipeSlotBuilder"): Internal.IRecipeSlotBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.loot.LootParams$Builder"): typeof Internal.LootParams$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.ImmutableCollections$MapN"): typeof Internal.ImmutableCollections$MapN;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.WeatheringCopperFullBlock"): typeof Internal.WeatheringCopperFullBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.BlockGeneratorBlock"): typeof Internal.BlockGeneratorBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.living.entityjs.BaseLivingEntityJSBuilder"): typeof Internal.BaseLivingEntityJSBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.SpringFeature"): typeof Internal.SpringFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.starfish_studios.bbb.block.FacingConnectingBlock"): typeof Internal.FacingConnectingBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$ECanTrampleContext"): typeof Internal.ContextUtils$ECanTrampleContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.api.guielement.GuiElementType"): typeof Internal.GuiElementType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.configurations.ReplaceBlockConfiguration"): typeof Internal.ReplaceBlockConfiguration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.worldgen.StructureLocator$LocatedStruct"): typeof Internal.StructureLocator$LocatedStruct;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.trunkplacers.CherryTrunkPlacer"): typeof Internal.CherryTrunkPlacer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.blay09.mods.balm.api.entity.BalmEntity"): Internal.BalmEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.CoralFeature"): typeof Internal.CoralFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.RenderType"): typeof Internal.RenderType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.core.RegistryAccess$Frozen"): Internal.RegistryAccess$Frozen;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.security.Provider"): typeof Internal.Provider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.debug.BrainDebugRenderer"): typeof Internal.BrainDebugRenderer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.almostreliable.lootjs.mixin.LootItemConditionMixin"): Internal.LootItemConditionMixin;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.biome.Biome$TemperatureModifier"): typeof Internal.Biome$TemperatureModifier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.item.ClampedItemPropertyFunction"): Internal.ClampedItemPropertyFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.items.CuriosItem.CuriosItem"): typeof Internal.CuriosItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.mc.mixin.AccessPostChain"): Internal.AccessPostChain;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.PlaceOnWaterBlockItem"): typeof Internal.PlaceOnWaterBlockItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.state.properties.Tilt"): typeof Internal.Tilt;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.RenderStateShard$TexturingStateShard"): typeof Internal.RenderStateShard$TexturingStateShard;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "top.theillusivec4.curios.api.type.util.IIconHelper"): Internal.IIconHelper;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.starfish_studios.bbb.block.PalletBlock"): typeof Internal.PalletBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.gson.JsonNull"): typeof Internal.JsonNull;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.events.RegisterSpawnPlacementsEventJS"): typeof Internal.RegisterSpawnPlacementsEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.profiling.metrics.ProfilerMeasured"): Internal.ProfilerMeasured;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.ponder.instruction.PonderInstruction"): typeof Internal.PonderInstruction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundResourcePackPacket"): typeof Internal.ClientboundResourcePackPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.behavior.LongJumpMidJump"): typeof Internal.LongJumpMidJump;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.Graphics"): typeof Internal.Graphics;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.level.BlockEvent$BlockToolModificationEvent"): typeof Internal.BlockEvent$BlockToolModificationEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.implementation.EventBasedSpawnModifier"): typeof Internal.EventBasedSpawnModifier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.irisshaders.iris.vertices.IrisExtendedBufferBuilder"): Internal.IrisExtendedBufferBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.DoubleSummaryStatistics"): typeof Internal.DoubleSummaryStatistics;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.server.potion.EffectFrozen"): typeof Internal.EffectFrozen;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.starfish_studios.bbb.block.WoodenWallBlock"): typeof Internal.WoodenWallBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.artifice.ItemWitherguardAmulet"): typeof Internal.ItemWitherguardAmulet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.misc.OverencumberedEffect"): typeof Internal.OverencumberedEffect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.kosmx.playerAnim.impl.IPlayerModel"): Internal.IPlayerModel;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.SlimeBlock"): typeof Internal.SlimeBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.cerbon.bosses_of_mass_destruction.block.custom.VoidBlossomSummonBlock"): typeof Internal.VoidBlossomSummonBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.Heightmap"): typeof Internal.Heightmap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.ForgeConfigSpec$BooleanValue"): typeof Internal.ForgeConfigSpec$BooleanValue;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.MultiBufferSource"): Internal.MultiBufferSource;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.amendments.common.block.HangingFlowerPotBlock"): typeof Internal.HangingFlowerPotBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.loot.providers.nbt.NbtProvider"): Internal.NbtProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.prunoideae.powerfuljs.capabilities.forge.CapabilityFluid$NormalTankBuilderItemStack"): typeof Internal.CapabilityFluid$NormalTankBuilderItemStack;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.particles.emitter.EmitterData$ParticleTypes"): typeof Internal.EmitterData$ParticleTypes;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.Logger"): typeof Internal.Logger;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.monster.hoglin.HoglinBase"): Internal.HoglinBase;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.armor.BrokenMageArmor"): typeof Internal.BrokenMageArmor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.SurfaceProxy$LazyInstantiateCallback"): Internal.SurfaceProxy$LazyInstantiateCallback;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.util.DisplayMetrics"): typeof Internal.DisplayMetrics;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.integration.kubejs.requirements.ButtonRequirementJS"): Internal.ButtonRequirementJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.server.block.RakedSandBlock$RakedSandShape"): typeof Internal.RakedSandBlock$RakedSandShape;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.Display$TextDisplay$CachedLine"): typeof Internal.Display$TextDisplay$CachedLine;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.BannerPatternItem"): typeof Internal.BannerPatternItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.item.MagicConchItem"): typeof Internal.MagicConchItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.monster.ZombifiedPiglin"): typeof Internal.ZombifiedPiglin;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2backpack.content.render.ItemOnBackItem"): Internal.ItemOnBackItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.crafting.RecipeType$1"): typeof Internal.RecipeType$1;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "snownee.jade.api.fluid.JadeFluidObject"): typeof Internal.JadeFluidObject;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.living.vanilla.PiglinJSBuilder"): typeof Internal.PiglinJSBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.lodestar.lodestone.systems.easing.Easing$ElasticOut"): typeof Internal.Easing$ElasticOut;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.FlytrapBlock"): typeof Internal.FlytrapBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.blocks.ISpellInteractibleBlock"): Internal.ISpellInteractibleBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.texture.Tickable"): Internal.Tickable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2backpack.content.backpack.BackpackItem"): typeof Internal.BackpackItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.fluids.FluidStack"): typeof Internal.FluidStack;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.DiscFragmentItem"): typeof Internal.DiscFragmentItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.HalfTransparentBlock"): typeof Internal.HalfTransparentBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.artifice.RedstoneSpellTriggerBlock"): typeof Internal.RedstoneSpellTriggerBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.core.HolderSet$ListBacked"): typeof Internal.HolderSet$ListBacked;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.AnvilBlock"): typeof Internal.AnvilBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.ints.IntUnaryOperator"): it.unimi.dsi.fastutil.ints.IntUnaryOperator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.level.ChunkEvent$Load"): typeof Internal.ChunkEvent$Load;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.almostreliable.lootjs.kube.LootModificationEventJS"): typeof Internal.LootModificationEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.model.geom.ModelPart$Cube"): typeof Internal.ModelPart$Cube;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.ISurface"): Internal.ISurface;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.api.QuestFile"): Internal.QuestFile;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.ints.Int2IntMap$Entry"): Internal.Int2IntMap$Entry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.ShulkerBoxBlock"): typeof Internal.ShulkerBoxBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.ThrowablePotionItem"): typeof Internal.ThrowablePotionItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.monster.warden.Warden"): typeof Internal.Warden;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.valueproviders.SampledFloat"): Internal.SampledFloat;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundContainerClickPacket"): typeof Internal.ServerboundContainerClickPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.objects.ObjectBidirectionalIterator"): Internal.ObjectBidirectionalIterator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.player.PlayerEvent$SaveToFile"): typeof Internal.PlayerEvent$SaveToFile;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.core.Choreographer"): typeof Internal.Choreographer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.nick.chimes.item.WindBellItem"): typeof Internal.WindBellItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.util.Function3"): Internal.Function3;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.village.poi.PoiManager$Occupancy"): typeof Internal.PoiManager$Occupancy;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.HashSet"): typeof Internal.HashSet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.almostreliable.lootjs.kube.LootContextJS"): typeof Internal.LootContextJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.item.HolocoderItem"): typeof Internal.HolocoderItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.packs.repository.PackCompatibility"): typeof Internal.PackCompatibility;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.OutputReplacement"): Internal.OutputReplacement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "snownee.jade.api.BlockAccessor$Builder"): Internal.BlockAccessor$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ScreenEvent$Init"): typeof Internal.ScreenEvent$Init;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.structures.BuriedTreasureStructure"): typeof Internal.BuriedTreasureStructure;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.math.PixelBuffer"): typeof Internal.PixelBuffer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.biome.BiomeGenerationSettings"): typeof Internal.BiomeGenerationSettings;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.utility.Color"): typeof com.simibubi.create.foundation.utility.Color;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.rhino.JavaMembers$MethodInfo"): typeof Internal.JavaMembers$MethodInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.block.custom.FenceGateBlockBuilder"): typeof Internal.FenceGateBlockBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.graphics.RectF"): typeof Internal.RectF;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.time.chrono.Era"): Internal.Era;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.player.ProfilePublicKey$Data"): typeof Internal.ProfilePublicKey$Data;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.block.model.ItemTransforms"): typeof Internal.ItemTransforms;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.client.GenerateClientAssetsEventJS"): typeof Internal.GenerateClientAssetsEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.misc.MobEffectBuilder"): typeof Internal.MobEffectBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.prunoideae.powerfuljs.capabilities.forge.mods.curios.RendererCurios$RenderContext"): typeof Internal.RendererCurios$RenderContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.phys.Vec2"): typeof Internal.Vec2;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.event.GeoRenderEvent$Entity$Post"): typeof Internal.GeoRenderEvent$Entity$Post;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.eventbus.api.IEventBus"): Internal.IEventBus;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.impl.ThrowableProxy"): typeof Internal.ThrowableProxy;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.living.AnimalTameEvent"): typeof Internal.AnimalTameEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.mixin.VanillaPackResourcesAccessor"): Internal.VanillaPackResourcesAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.block.BlockModificationEventJS"): typeof Internal.BlockModificationEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.tileentities.wizard_lab.InscriptionTableTile$CraftCheckResult"): typeof Internal.InscriptionTableTile$CraftCheckResult;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.TextureVisitor"): Internal.TextureVisitor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "pie.ilikepiefoo.compat.jade.builder.EntityComponentProviderBuilder"): typeof Internal.EntityComponentProviderBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplate$StructureEntityInfo"): typeof Internal.StructureTemplate$StructureEntityInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.AbstractRopeKnotBlock"): typeof Internal.AbstractRopeKnotBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.SoundAction"): typeof Internal.SoundAction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ModelEvent$BakingCompleted"): typeof Internal.ModelEvent$BakingCompleted;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.navigation.ScreenPosition"): typeof Internal.ScreenPosition;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ScreenEvent$CharacterTyped$Pre"): typeof Internal.ScreenEvent$CharacterTyped$Pre;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.gameevent.GameEventListener"): Internal.GameEventListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.sorcery.VellumItem"): typeof Internal.VellumItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.longs.Long2CharFunction"): Internal.Long2CharFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.joml.Matrix2d"): typeof Internal.Matrix2d;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.attributes.AttributeSupplier"): typeof Internal.AttributeSupplier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ContainerScreenEvent$Render"): typeof Internal.ContainerScreenEvent$Render;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.quest.Movable"): Internal.Movable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.living.vanilla.EnderManJSBuilder"): typeof Internal.EnderManJSBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.extensions.IForgeBlockEntity"): Internal.IForgeBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.maven.artifact.Artifact"): Internal.Artifact;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.irisshaders.iris.targets.Blaze3dRenderTargetExt"): Internal.Blaze3dRenderTargetExt;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.ErrorHandler"): typeof Internal.ErrorHandler;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.artifice.charms.ItemCancelFatalFallCharm"): typeof Internal.ItemCancelFatalFallCharm;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.gson.JsonDeserializer"): Internal.JsonDeserializer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.LivingEntity$Fallsounds"): typeof Internal.LivingEntity$Fallsounds;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.thread.ReentrantBlockableEventLoop"): typeof Internal.ReentrantBlockableEventLoop;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.chat.RemoteChatSession"): typeof Internal.RemoteChatSession;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.unascribed.fabrication.interfaces.SetInvisNoGravReversible"): Internal.SetInvisNoGravReversible;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.Collection"): Internal.Collection;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.lodestar.lodestone.handlers.RenderHandler$LodestoneRenderLayer"): typeof Internal.RenderHandler$LodestoneRenderLayer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.shorts.Short2ShortFunction"): Internal.Short2ShortFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.Items"): typeof Items;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.util.BooleanConsumer"): Internal.BooleanConsumer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.geom.PathIterator"): Internal.PathIterator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.Date"): typeof Internal.Date;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.SimpleWaterloggedBlock"): Internal.SimpleWaterloggedBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.ColorResolver"): Internal.ColorResolver;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.brigadier.ImmutableStringReader"): Internal.ImmutableStringReader;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.culling.Frustum"): typeof Internal.Frustum;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.FrogVariant"): typeof Internal.FrogVariant;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.security.cert.Certificate"): typeof Internal.Certificate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.runtime.IJeiRuntime"): Internal.IJeiRuntime;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.state.properties.NoteBlockInstrument"): typeof Internal.NoteBlockInstrument;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.chat.HoverEvent$ItemStackInfo"): typeof Internal.HoverEvent$ItemStackInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.artifice.ItemThaumaturgicCompass$TrackType"): typeof Internal.ItemThaumaturgicCompass$TrackType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.FissurePrimalMagmaBlock"): typeof Internal.FissurePrimalMagmaBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.AbstractRopeBlock"): typeof Internal.AbstractRopeBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.gui.handlers.IGhostIngredientHandler"): Internal.IGhostIngredientHandler;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.serialization.codecs.RecordCodecBuilder"): typeof Internal.RecordCodecBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.components.Button$OnPress"): Internal.Button$OnPress;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.registration.IVanillaCategoryExtensionRegistration"): Internal.IVanillaCategoryExtensionRegistration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.architectury.event.CompoundEventResult"): typeof Internal.CompoundEventResult;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.bytes.Byte2FloatFunction"): Internal.Byte2FloatFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.MangroveRootsBlock"): typeof Internal.MangroveRootsBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.valueproviders.ConstantFloat"): typeof Internal.ConstantFloat;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.impl.TextTrieMap$ResultHandler"): Internal.TextTrieMap$ResultHandler;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.blaze3d.shaders.AbstractUniform"): typeof Internal.AbstractUniform;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.abdelaziz.canary.common.entity.EquipmentEntity"): Internal.EquipmentEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.utility.animation.LerpedFloat$Chaser"): Internal.LerpedFloat$Chaser;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.blocks.PlayerOwnershipRecord"): typeof Internal.PlayerOwnershipRecord;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.living.entityjs.TameableMobJSBuilder"): typeof Internal.TameableMobJSBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.function.BiFunction"): Internal.BiFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.entities.living.vanilla.AxolotlEntityJS"): typeof Internal.AxolotlEntityJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.loot.predicates.AnyOfCondition$Builder"): typeof Internal.AnyOfCondition$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.SignText"): typeof Internal.SignText;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.portal.PortalInfo"): typeof Internal.PortalInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.configurations.SimpleRandomFeatureConfiguration"): typeof Internal.SimpleRandomFeatureConfiguration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.irisshaders.batchedentityrendering.mixin.RenderStateShardAccessor"): Internal.RenderStateShardAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.level.progress.ChunkProgressListener"): Internal.ChunkProgressListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.BookItem"): typeof Internal.BookItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.doubles.Double2BooleanFunction"): Internal.Double2BooleanFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.util.Lazy"): typeof Internal.Lazy;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.state.BlockBehaviour$Properties"): typeof Internal.BlockBehaviour$Properties;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.electronwill.nightconfig.core.io.ParsingMode"): typeof Internal.ParsingMode;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.gui.Align"): typeof Internal.Align;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexthe666.citadel.client.event.EventLivingRenderer"): typeof Internal.EventLivingRenderer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.packs.repository.PackSource"): Internal.PackSource;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.stream.Stream$Builder"): Internal.Stream$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.vulkan.VkBackendContext"): typeof Internal.VkBackendContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.brutalbosses.entity.CustomEntityRenderData"): Internal.CustomEntityRenderData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.util.Parcelable$Creator"): Internal.Parcelable$Creator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.rituals.MatchedRitual"): typeof Internal.MatchedRitual;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.common.collect.ImmutableMultiset$Builder"): typeof Internal.ImmutableMultiset$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.yungnickyoung.minecraft.yungsapi.mixin.accessor.SinglePoolElementAccessor"): Internal.SinglePoolElementAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.amendments.common.block.BoilingWaterCauldronBlock"): typeof Internal.BoilingWaterCauldronBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.ForgeConfigSpec$IntValue"): typeof Internal.ForgeConfigSpec$IntValue;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.security.AlgorithmParameters"): typeof Internal.AlgorithmParameters;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.data.DataGenerator$PackGenerator"): typeof Internal.DataGenerator$PackGenerator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.monster.hoglin.Hoglin"): typeof Internal.Hoglin;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.graphics.Bitmap$SaveFormat"): typeof Internal.Bitmap$SaveFormat;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.objects.Reference2ByteFunction"): Internal.Reference2ByteFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.artifice.RefractionLensBlock"): typeof Internal.RefractionLensBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "vazkii.patchouli.common.book.Book"): typeof Internal.Book;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.resources.TextureAtlasHolder"): typeof Internal.TextureAtlasHolder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.RodBlock"): typeof Internal.RodBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.SculkVeinBlock"): typeof Internal.SculkVeinBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.animatable.GeoEntity"): Internal.GeoEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.UraniumFullBlock"): typeof Internal.UraniumFullBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.piston.PistonMovingBlockEntity"): typeof Internal.PistonMovingBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "pie.ilikepiefoo.compat.jei.events.RegisterRecipesEventJS"): typeof Internal.RegisterRecipesEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.item.RadioactiveItem"): typeof Internal.RadioactiveItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "pie.ilikepiefoo.events.custom.ArchEventRegisterEventJS"): typeof Internal.ArchEventRegisterEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.Products$P5"): typeof Internal.Products$P5;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.blay09.mods.balm.mixin.MouseHandlerAccessor"): Internal.MouseHandlerAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.transition.TransitionListener"): Internal.TransitionListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.item.custom.SwordItemBuilder"): typeof Internal.SwordItemBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.RenderTooltipEvent$GatherComponents"): typeof Internal.RenderTooltipEvent$GatherComponents;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundUpdateAttributesPacket$AttributeSnapshot"): typeof Internal.ClientboundUpdateAttributesPacket$AttributeSnapshot;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.village.poi.PoiManager"): typeof Internal.PoiManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.item.CaveMapItem"): typeof Internal.CaveMapItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.FireworkRocketItem"): typeof Internal.FireworkRocketItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.chunk.PalettedContainer$Configuration"): typeof Internal.PalettedContainer$Configuration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.client.particle.ParticleHandler$5"): typeof Internal.ParticleHandler$5;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.PathNavigationRegion"): typeof Internal.PathNavigationRegion;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.text2speech.Narrator"): Internal.Narrator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.event.InputMethodListener"): Internal.InputMethodListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.gui.inputs.IJeiUserInput"): Internal.IJeiUserInput;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.level.BlockEvent"): typeof Internal.BlockEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.shorts.ShortIterable"): Internal.ShortIterable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.configurations.VegetationPatchConfiguration"): typeof Internal.VegetationPatchConfiguration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.telemetry.TelemetryProperty$ServerType"): typeof Internal.TelemetryProperty$ServerType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.text.TimeZoneFormat$ParseOption"): typeof Internal.TimeZoneFormat$ParseOption;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.core.LevelKJS"): Internal.LevelKJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.MobCategory"): typeof Internal.MobCategory;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.affinity.Affinity"): typeof Internal.Affinity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.state.properties.BlockStateProperties"): typeof BlockProperties;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.components.Button$Builder"): typeof Internal.Button$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.monster.Spider"): typeof Internal.Spider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.authlib.yggdrasil.response.Response"): typeof Internal.Response;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.core.Handler$Callback"): Internal.Handler$Callback;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.stream.BaseStream"): Internal.BaseStream;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.VerticalAnchor"): Internal.VerticalAnchor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.events.ModifyAttributeEventJS$AttributeModificationHelper"): typeof Internal.ModifyAttributeEventJS$AttributeModificationHelper;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.gui.GuiControl"): typeof Internal.GuiControl;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.opengl.GLTextureInfo"): typeof Internal.GLTextureInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.ModBlockProperties$RakeDirection"): typeof Internal.ModBlockProperties$RakeDirection;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.foliageplacers.AcaciaFoliagePlacer"): typeof Internal.AcaciaFoliagePlacer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$EntityFluidStateContext"): typeof Internal.ContextUtils$EntityFluidStateContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2backpack.content.capability.PickupConfig"): typeof Internal.PickupConfig;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.RegisterClientCommandsEvent"): typeof Internal.RegisterClientCommandsEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.trunkplacers.MegaJungleTrunkPlacer"): typeof Internal.MegaJungleTrunkPlacer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bawnorton.neruina.mixin.accessor.WorldChunkAccessor"): Internal.WorldChunkAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.MapRenderer"): typeof Internal.MapRenderer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.view.View$OnCreateContextMenuListener"): Internal.View$OnCreateContextMenuListener;
        wait(): void;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.artifice.ItemRecipeCopyBook"): typeof Internal.ItemRecipeCopyBook;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.biome.BiomeSpecialEffects$GrassColorModifier$ColorModifier"): Internal.BiomeSpecialEffects$GrassColorModifier$ColorModifier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.WaterloggedVegetationPatchFeature"): typeof Internal.WaterloggedVegetationPatchFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.core.particles.ParticleTypes$1"): typeof Internal.ParticleTypes$1;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.irisshaders.iris.compat.sodium.mixin.shadow_map.SodiumWorldRendererAccessor"): Internal.SodiumWorldRendererAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.authlib.minecraft.report.ReportChatMessage"): typeof Internal.ReportChatMessage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.image.ColorModel"): typeof Internal.ColorModel;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.artifice.WellspringPillarBlock"): typeof Internal.WellspringPillarBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.lifecycle.Lifecycle$Event"): typeof Internal.Lifecycle$Event;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.model.data.ModelData"): typeof Internal.ModelData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.LeavesBlock"): typeof Internal.LeavesBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.keksuccino.fancymenu.util.resource.RenderableResource"): Internal.RenderableResource;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.resources.PaintingTextureManager"): typeof Internal.PaintingTextureManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.item.ProjectileItemBuilder"): typeof Internal.ProjectileItemBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.level.feature.CycadFeature"): typeof Internal.CycadFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.spells.targeting.SpellTarget"): typeof Internal.SpellTarget;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.entities.living.vanilla.ParrotEntityJS"): typeof Internal.ParrotEntityJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "kotlinx.serialization.encoding.CompositeDecoder"): Internal.CompositeDecoder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.Structure$GenerationContext"): typeof Internal.Structure$GenerationContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.SurfaceProxy$LazyCallbackResult"): typeof Internal.SurfaceProxy$LazyCallbackResult;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.Rarity"): typeof Internal.Rarity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.abdelaziz.canary.mixin.util.accessors.TransientEntitySectionManagerAccessor"): Internal.TransientEntitySectionManagerAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.block.BlockTintFunction"): Internal.BlockTintFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.particles.MAParticleType"): typeof Internal.MAParticleType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.beneficial.EffectSoar"): typeof Internal.EffectSoar;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.monster.piglin.PiglinBrute"): typeof Internal.PiglinBrute;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.player.PlayerEvent$ItemSmeltedEvent"): typeof Internal.PlayerEvent$ItemSmeltedEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.font.TextHitInfo"): typeof Internal.TextHitInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.event.FocusListener"): Internal.FocusListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.spells.ComponentApplicationResult"): typeof Internal.ComponentApplicationResult;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.projectile.EyeOfEnder"): typeof Internal.EyeOfEnder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.texture.SpriteContents$InterpolationData"): typeof Internal.SpriteContents$InterpolationData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.ponder.element.TextWindowElement$Builder"): typeof Internal.TextWindowElement$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.AbstractCandleBlock"): typeof Internal.AbstractCandleBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.ui.ModalPanel"): typeof Internal.ModalPanel;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.CaveVines"): Internal.CaveVines;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.sound.SoundEvent$SoundSourceEvent"): typeof Internal.SoundEvent$SoundSourceEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.transition.TransitionValues"): typeof Internal.TransitionValues;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.gui.sync.GuiSyncGlobal"): typeof Internal.GuiSyncGlobal;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.item.HazmatArmorItem"): typeof Internal.HazmatArmorItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.RenderType$CompositeRenderType"): typeof Internal.RenderType$CompositeRenderType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.recipes.multiblock.MultiblockConfiguration"): typeof Internal.MultiblockConfiguration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.treedecorators.TreeDecorator$Context"): typeof Internal.TreeDecorator$Context;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "vazkii.patchouli.api.IComponentProcessor"): Internal.IComponentProcessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.DSL$TypeReference"): Internal.DSL$TypeReference;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.players.ServerOpListEntry"): typeof Internal.ServerOpListEntry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.items.PancakeItem"): typeof Internal.PancakeItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.entities.nonliving.entityjs.IArrowEntityJS"): Internal.IArrowEntityJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.server.item.ItemCapturedGrottol"): typeof Internal.ItemCapturedGrottol;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.prunoideae.powerfuljs.capabilities.forge.CapabilityItem$ExtractItem"): Internal.CapabilityItem$ExtractItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.AbstractBannerBlock"): typeof Internal.AbstractBannerBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.Dialog$ModalityType"): typeof Internal.Dialog$ModalityType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.gui.element.RenderElement"): typeof Internal.RenderElement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.nonliving.BaseEntityBuilder$ISoundListenerJS"): Internal.BaseEntityBuilder$ISoundListenerJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.SlabBlock"): typeof Internal.SlabBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.blaze3d.platform.GlStateManager$DestFactor"): typeof Internal.GlStateManager$DestFactor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.npc.Villager"): typeof Internal.Villager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.special.ShapelessKubeJSRecipe$SerializerKJS"): typeof Internal.ShapelessKubeJSRecipe$SerializerKJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.tree.IndexExpression"): typeof Internal.IndexExpression;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.icon.MutableColor4I"): typeof Internal.MutableColor4I;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$EntityProjectileWeaponContext"): typeof Internal.ContextUtils$EntityProjectileWeaponContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.Products$P6"): typeof Internal.Products$P6;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.Level"): typeof Internal.Level;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.serialization.Decoder$Boxed"): Internal.Decoder$Boxed;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.quest.reward.Reward"): typeof Internal.Reward;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.spells.parts.Shape"): typeof com.mna.api.spells.parts.Shape;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.level.feature.NuclearSirenFeature"): typeof Internal.NuclearSirenFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.lifecycle.Lifecycle"): typeof icyllis.modernui.lifecycle.Lifecycle;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.recipes.eldrin.EldrinAltarRecipeSerializer"): typeof Internal.EldrinAltarRecipeSerializer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.artifice.ItemFactionHorn"): typeof Internal.ItemFactionHorn;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundPlayerLookAtPacket"): typeof Internal.ClientboundPlayerLookAtPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.GuiMessageTag"): typeof Internal.GuiMessageTag;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.BufferCapabilities$FlipContents"): typeof Internal.BufferCapabilities$FlipContents;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.AgeableMob"): typeof Internal.AgeableMob;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "vazkii.patchouli.mixin.AccessorSmithingTransformRecipe"): Internal.AccessorSmithingTransformRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.server.world.feature.structure.MowzieStructure"): typeof Internal.MowzieStructure;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.capabilities.CodexBreadcrumb$Type"): typeof Internal.CodexBreadcrumb$Type;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.SpikeFeature"): typeof Internal.SpikeFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.sorcery.ItemSpellGrimoire"): typeof Internal.ItemSpellGrimoire;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.util.math.geo.Ray3f"): typeof Internal.Ray3f;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.GLSLVersion"): typeof Internal.GLSLVersion;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$ProjectileBlockHitContext"): typeof Internal.ContextUtils$ProjectileBlockHitContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.common.reflect.TypeToken$TypeSet"): typeof Internal.TypeToken$TypeSet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.gui.flow.GuiStackX"): typeof Internal.GuiStackX;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "me.jellysquid.mods.sodium.client.render.vertex.buffer.SodiumBufferBuilder"): typeof Internal.SodiumBufferBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.capabilities.resource.ICastingResourceGuiRegistry"): Internal.ICastingResourceGuiRegistry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.PrimaryLevelData$SpecialWorldProperty"): typeof Internal.PrimaryLevelData$SpecialWorldProperty;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.PrimalMagmaBlock"): typeof Internal.PrimalMagmaBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.special.ShapedKubeJSRecipe"): typeof Internal.ShapedKubeJSRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.items.SoapItem"): typeof Internal.SoapItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.registration.IModIngredientRegistration"): Internal.IModIngredientRegistration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.graphics.Matrix"): typeof icyllis.modernui.graphics.Matrix;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.sounds.SoundEvent"): typeof Internal.SoundEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.item.ItemBuilder$UseCallback"): Internal.ItemBuilder$UseCallback;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.player.PlayerEvent$ItemPickupEvent"): typeof Internal.PlayerEvent$ItemPickupEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.BlockAndTintGetter"): Internal.BlockAndTintGetter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.block.custom.FallingBlockBuilder"): typeof Internal.FallingBlockBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.Toolkit"): typeof Internal.Toolkit;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.ints.IntIterator"): Internal.IntIterator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.biome.MobSpawnSettings$Builder"): typeof Internal.MobSpawnSettings$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.capabilities.IPlayerMagic"): Internal.IPlayerMagic;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.packs.resources.PreparableReloadListener$PreparationBarrier"): Internal.PreparableReloadListener$PreparationBarrier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.enchantment.SoulSpeedEnchantment"): typeof Internal.SoulSpeedEnchantment;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.artifice.ItemWardingAmulet"): typeof Internal.ItemWardingAmulet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.player.PlayerInteractEvent$RightClickBlock"): typeof Internal.PlayerInteractEvent$RightClickBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.items.FluteItem"): typeof Internal.FluteItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.AshenBasaltBlock"): typeof Internal.AshenBasaltBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.configurations.HugeMushroomFeatureConfiguration"): typeof Internal.HugeMushroomFeatureConfiguration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.JobAttributes$MultipleDocumentHandlingType"): typeof Internal.JobAttributes$MultipleDocumentHandlingType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$EntityBlockPosLevelContext"): typeof Internal.ContextUtils$EntityBlockPosLevelContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.ForgeConfigSpec$Builder"): typeof Internal.ForgeConfigSpec$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.item.MarineSnowItem"): typeof Internal.MarineSnowItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.RecipeJS"): typeof Internal.RecipeJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.ExtraCodecs$TagOrElementLocation"): typeof Internal.ExtraCodecs$TagOrElementLocation;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.illusivesoulworks.comforts.mixin.AccessorPlayer"): Internal.AccessorPlayer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.BlockEntityType"): typeof Internal.BlockEntityType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.EventObject"): typeof Internal.EventObject;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.config.ConfigValue"): typeof Internal.ConfigValue;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.rhino.IdFunctionObject"): typeof Internal.IdFunctionObject;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.irisshaders.batchedentityrendering.impl.DrawCallTrackingRenderBuffers"): Internal.DrawCallTrackingRenderBuffers;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.camel.Camel"): typeof Internal.Camel;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.blocks.tile.MultiblockTile"): typeof Internal.MultiblockTile;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.unascribed.fabrication.interfaces.GenerationSettingsAddEmeralds"): Internal.GenerationSettingsAddEmeralds;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.ForgeSpawnEggItem"): typeof Internal.ForgeSpawnEggItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.authlib.minecraft.report.AbuseReport"): typeof Internal.AbuseReport;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.core.Holder$Reference"): typeof Internal.Holder$Reference;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.boss.enderdragon.phases.DragonStrafePlayerPhase"): typeof Internal.DragonStrafePlayerPhase;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.image.Raster"): typeof Internal.Raster;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.chunk.ChunkAccess$TicksToSave"): typeof Internal.ChunkAccess$TicksToSave;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.memory.ExpirableValue"): typeof Internal.ExpirableValue;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.Display"): typeof Internal.Display;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.LevelSettings"): typeof Internal.LevelSettings;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.structures.NetherFossilStructure"): typeof Internal.NetherFossilStructure;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.bytes.ByteBidirectionalIterator"): Internal.ByteBidirectionalIterator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.entities.living.vanilla.GuardianEntityJS"): typeof Internal.GuardianEntityJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.objects.ObjectListIterator"): Internal.ObjectListIterator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.WitherWallSkullBlock"): typeof Internal.WitherWallSkullBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.block.custom.CropBlockBuilder"): typeof Internal.CropBlockBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.Operator"): typeof Internal.Operator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.configurations.BlockColumnConfiguration"): typeof Internal.BlockColumnConfiguration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.blocks.Cataclysm_Skull_Block$Type"): Internal.Cataclysm_Skull_Block$Type;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.dnd.DragSourceListener"): Internal.DragSourceListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.blockpredicates.MatchingBlocksPredicate"): typeof Internal.MatchingBlocksPredicate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.authlib.yggdrasil.ServicesKeyInfo"): Internal.ServicesKeyInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$EntityItemLevelContext"): typeof Internal.ContextUtils$EntityItemLevelContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.amendments.reg.ModBlockProperties$PostType"): typeof net.mehvahdjukaar.amendments.reg.ModBlockProperties$PostType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.joml.Vector4ic"): Internal.Vector4ic;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.Wolf"): typeof Internal.Wolf;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.decoration.ItemFrame"): typeof Internal.ItemFrame;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.harmful.SimpleHarmfulEffect"): typeof Internal.SimpleHarmfulEffect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundSetEntityMotionPacket"): typeof Internal.ClientboundSetEntityMotionPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.common.collect.ImmutableBiMap$Builder"): typeof Internal.ImmutableBiMap$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.api.crafting.IMachineRecipe"): Internal.IMachineRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.saveddata.maps.MapBanner"): typeof Internal.MapBanner;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.server.item.ItemEarthTalisman"): typeof Internal.ItemEarthTalisman;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.text.UnicodeMatcher"): Internal.UnicodeMatcher;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.items.Bloom_Stone_Pauldrons"): typeof Internal.Bloom_Stone_Pauldrons;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.server.potion.MowzieEffect"): typeof Internal.MowzieEffect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.events.IFireConsumeBlockEvent"): Internal.IFireConsumeBlockEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.event.WindowStateListener"): Internal.WindowStateListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.TickTask"): typeof Internal.TickTask;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.data.worldgen.Structures"): typeof Structures;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.events.CustomTaskEvent"): typeof Internal.CustomTaskEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundSeenAdvancementsPacket"): typeof Internal.ServerboundSeenAdvancementsPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.components.Renderable"): Internal.Renderable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.ponder.element.WorldSectionElement"): typeof Internal.WorldSectionElement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.RegisterKeyMappingsEvent"): typeof Internal.RegisterKeyMappingsEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.configurations.BlockColumnConfiguration$Layer"): typeof Internal.BlockColumnConfiguration$Layer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.chat.SignedMessageLink"): typeof Internal.SignedMessageLink;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.core.animatable.model.CoreBakedGeoModel"): Internal.CoreBakedGeoModel;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.network.messages.BaseServerMessage"): typeof Internal.BaseServerMessage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.core.BlockSource"): Internal.BlockSource;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.text.AttributedCharacterIterator"): Internal.AttributedCharacterIterator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.block.model.BlockElement"): typeof Internal.BlockElement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.function.ObjLongConsumer"): Internal.ObjLongConsumer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "top.theillusivec4.caelus.api.RenderCapeEvent"): typeof Internal.RenderCapeEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.fnc.common.effect.neutral.RandomSpellAdjustmentMobEffect"): typeof Internal.RandomSpellAdjustmentMobEffect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.kosmx.playerAnim.api.layered.IAnimation"): Internal.IAnimation;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.gui.widgets.IRecipeExtrasBuilder"): Internal.IRecipeExtrasBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundSignUpdatePacket"): typeof Internal.ServerboundSignUpdatePacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.amendments.common.block.ModCauldronBlock"): typeof Internal.ModCauldronBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.block.BlockModelShaper"): typeof Internal.BlockModelShaper;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2backpack.content.quickswap.merged.MultiSwitch"): typeof Internal.MultiSwitch;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.functions.PointFree"): typeof Internal.PointFree;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "cpw.mods.jarhandling.SecureJar$Status"): typeof Internal.SecureJar$Status;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.abdelaziz.canary.common.shapes.VoxelShapeSimpleCube"): typeof Internal.VoxelShapeSimpleCube;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.BambooStalkBlock"): typeof Internal.BambooStalkBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.AbstractSet"): typeof Internal.AbstractSet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.FurnaceBlock"): typeof Internal.FurnaceBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.blocks.IManaweaveNotifiable"): Internal.IManaweaveNotifiable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.init.ModParticle$4"): typeof Internal.ModParticle$4;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.Structure$GenerationStub"): typeof Internal.Structure$GenerationStub;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.heightproviders.ConstantHeight"): typeof Internal.ConstantHeight;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundAnimatePacket"): typeof Internal.ClientboundAnimatePacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.typings.desc.DescriptionContext"): Internal.DescriptionContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.concurrent.atomic.AtomicReferenceArray"): typeof Internal.AtomicReferenceArray;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.entity.EntityTypeTest"): Internal.EntityTypeTest;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.RenderGuiEvent"): typeof Internal.RenderGuiEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.server.block.ICopiedBlockProperties"): Internal.ICopiedBlockProperties;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.kosmx.playerAnim.impl.IMutableModel"): Internal.IMutableModel;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.BlockBlobFeature"): typeof Internal.BlockBlobFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.block.callbacks.BlockStateModifyPlacementCallbackJS"): typeof Internal.BlockStateModifyPlacementCallbackJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.players.ServerOpList"): typeof Internal.ServerOpList;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.item.custom.ArmorItemBuilder$Leggings"): typeof Internal.ArmorItemBuilder$Leggings;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ViewportEvent$RenderFog"): typeof Internal.ViewportEvent$RenderFog;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.boss.enderdragon.phases.AbstractDragonSittingPhase"): typeof Internal.AbstractDragonSittingPhase;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.view.ViewTreeObserver$OnGlobalLayoutListener"): Internal.ViewTreeObserver$OnGlobalLayoutListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.config.LoggerConfig$Builder"): typeof Internal.LoggerConfig$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.registries.IForgeRegistry"): Internal.IForgeRegistry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.network.ServerStatusPing"): typeof Internal.ServerStatusPing;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.lodestar.lodestone.systems.particle.data.GenericParticleData"): typeof Internal.GenericParticleData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.api.component.MachineComponentType"): typeof Internal.MachineComponentType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jozufozu.flywheel.backend.model.ElementBuffer"): typeof Internal.ElementBuffer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.IRopeConnection"): Internal.IRopeConnection;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.client.render.entity.LivingEntityRendererAccessor"): Internal.LivingEntityRendererAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.item.AlwaysCombinableOnAnvil"): Internal.AlwaysCombinableOnAnvil;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.memory.NearestVisibleLivingEntities"): typeof Internal.NearestVisibleLivingEntities;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "javax.accessibility.AccessibleText"): Internal.AccessibleText;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.math.OctahedralGroup"): typeof Internal.OctahedralGroup;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.TickEvent$Phase"): typeof Internal.TickEvent$Phase;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundPlayerInfoUpdatePacket$Action"): typeof Internal.ClientboundPlayerInfoUpdatePacket$Action;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.RegisterShadersEvent"): typeof Internal.RegisterShadersEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.item.SpawnEggItemBuilder"): typeof Internal.SpawnEggItemBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.dmnr.api.event.HasMaxFactionEvent"): typeof Internal.HasMaxFactionEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.recipe.RecipeType"): typeof mezz.jei.api.recipe.RecipeType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.item.EyeOfEnderItemBuilder"): typeof Internal.EyeOfEnderItemBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.objects.Object2IntMap"): Internal.Object2IntMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.functions.PointFreeRule"): Internal.PointFreeRule;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.kinds.Applicative"): Internal.Applicative;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.fluids.capability.IFluidHandler$FluidAction"): typeof Internal.IFluidHandler$FluidAction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "pie.ilikepiefoo.compat.jei.builder.RecipeCategoryBuilder$InputHandler"): Internal.RecipeCategoryBuilder$InputHandler;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.effects.EffectBone_Fracture"): typeof Internal.EffectBone_Fracture;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.item.BlockItemWithSupplierLore"): typeof Internal.BlockItemWithSupplierLore;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.HoneyBlock"): typeof Internal.HoneyBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.requirement.BlockRequirement$ACTION"): typeof Internal.BlockRequirement$ACTION;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.item.QuarrySmasherItem"): typeof Internal.QuarrySmasherItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ClientPlayerNetworkEvent$LoggingIn"): typeof Internal.ClientPlayerNetworkEvent$LoggingIn;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.present.IPresentItemBehavior"): Internal.IPresentItemBehavior;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.boss.enderdragon.phases.DragonHoverPhase"): typeof Internal.DragonHoverPhase;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.RenderGuiOverlayEvent$Pre"): typeof Internal.RenderGuiOverlayEvent$Pre;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.block.entity.LootCrateOpenerBlockEntity"): typeof Internal.LootCrateOpenerBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.TheEndPortalBlockEntity"): typeof Internal.TheEndPortalBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.RenderingHints$Key"): typeof Internal.RenderingHints$Key;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.gson.JsonPrimitive"): typeof Internal.JsonPrimitive;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.CoralWallFanBlock"): typeof Internal.CoralWallFanBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.common.collect.ImmutableBiMap"): typeof Internal.ImmutableBiMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.impl.util.IMachineModelLocation"): Internal.IMachineModelLocation;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.core.Looper$Observer"): Internal.Looper$Observer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.biome.BiomeSource"): typeof Internal.BiomeSource;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.brigadier.Command"): Internal.Command;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.OptionEnum"): Internal.OptionEnum;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.StructureVoidBlock"): typeof Internal.StructureVoidBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.fnc.common.effect.smite.CripplingSmite"): typeof Internal.CripplingSmite;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "top.theillusivec4.curios.api.event.SlotModifiersUpdatedEvent"): typeof Internal.SlotModifiersUpdatedEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.bytes.BytePredicate"): Internal.BytePredicate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.GoldDoorBlock"): typeof Internal.GoldDoorBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.debug.GoalSelectorDebugRenderer"): typeof Internal.GoalSelectorDebugRenderer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.client.VariantBlockStateGenerator$Model"): typeof Internal.VariantBlockStateGenerator$Model;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.graphics.CustomDrawable$DrawHandler"): Internal.CustomDrawable$DrawHandler;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.level.ExplosionEvent"): typeof Internal.ExplosionEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.blaze3d.audio.SoundBuffer"): typeof Internal.SoundBuffer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.bettercombat.logic.ItemStackNBTWeaponAttributes"): Internal.ItemStackNBTWeaponAttributes;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.time.OffsetDateTime"): typeof Internal.OffsetDateTime;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.state.properties.BellAttachType"): typeof Internal.BellAttachType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.living.LivingSwapItemsEvent"): typeof Internal.LivingSwapItemsEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.util.JsonIO"): typeof JsonIO;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.kosmx.playerAnim.core.util.SetableSupplier"): typeof Internal.SetableSupplier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.packs.resources.IoSupplier"): Internal.IoSupplier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.crafting.SmithingRecipe"): Internal.SmithingRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.chat.FilterMask"): typeof Internal.FilterMask;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.advancements.critereon.MinMaxBounds$Doubles"): typeof Internal.MinMaxBounds$Doubles;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.recipe.RecipeIngredientRole"): typeof Internal.RecipeIngredientRole;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.SpawnPlacements$SpawnPredicate"): Internal.SpawnPlacements$SpawnPredicate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundSetDefaultSpawnPositionPacket"): typeof Internal.ClientboundSetDefaultSpawnPositionPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "top.theillusivec4.curios.api.CuriosApi"): typeof Internal.CuriosApi;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.chat.Component"): net.minecraft.network.chat.Component;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.GameRules$IntegerValue"): typeof Internal.GameRules$IntegerValue;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.client.ClientInitEventJS"): typeof Internal.ClientInitEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.core.keyframe.event.KeyFrameEvent"): typeof Internal.KeyFrameEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.projectile.AbstractArrow$Pickup"): typeof Internal.AbstractArrow$Pickup;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.FrostedIceBlock"): typeof Internal.FrostedIceBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.neutral.EffectAmplifyMagic"): typeof Internal.EffectAmplifyMagic;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.irisshaders.iris.mixin.GameRendererAccessor"): net.irisshaders.iris.mixin.GameRendererAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.WallHangingSignBlock"): typeof Internal.WallHangingSignBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.brigadier.Message"): com.mojang.brigadier.Message;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.BonemealableBlock"): Internal.BonemealableBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.image.BufferedImageOp"): Internal.BufferedImageOp;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.network.NetworkEvent$ServerCustomPayloadEvent"): typeof Internal.NetworkEvent$ServerCustomPayloadEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.AbstractSequentialList"): typeof Internal.AbstractSequentialList;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.blaze3d.vertex.BufferBuilder"): typeof Internal.BufferBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.sosly.arcaneadditions.blocks.artifice.ScribesBenchBlock"): typeof Internal.ScribesBenchBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.ui.IOpenableScreen"): Internal.IOpenableScreen;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.gson.JsonArray"): typeof Internal.JsonArray;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.monster.Ghast"): typeof Internal.Ghast;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.starfish_studios.bbb.block.WallBlockBlock"): typeof Internal.WallBlockBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.templatesystem.JigsawReplacementProcessor"): typeof Internal.JigsawReplacementProcessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.material.FluidState"): typeof Internal.FluidState;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.WeatheringCopper"): Internal.WeatheringCopper;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.artifice.TranscriptionTableBlock"): typeof Internal.TranscriptionTableBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.config.NameMap"): typeof Internal.NameMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.dnd.DropTargetListener"): Internal.DropTargetListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.items.TieredItem"): typeof com.mna.api.items.TieredItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.loot.SerializerType"): typeof Internal.SerializerType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.MusselBlock"): typeof Internal.MusselBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.monster.ElderGuardian"): typeof Internal.ElderGuardian;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.IConvertableHorse"): Internal.IConvertableHorse;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.CycadBlock"): typeof Internal.CycadBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.util.Function4"): Internal.Function4;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.blocks.Altar_Of_Void_Block"): typeof Internal.Altar_Of_Void_Block;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.prunoideae.powerfuljs.capabilities.forge.CapabilityForgeEnergy$EnergyIOBlockEntity"): Internal.CapabilityForgeEnergy$EnergyIOBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.TintedGlassBlock"): typeof Internal.TintedGlassBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.ponder.PonderPalette"): typeof PonderPalette;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.CloudStatus"): typeof Internal.CloudStatus;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.api.network.IData"): Internal.IData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.nonliving.entityjs.BaseEntityJSBuilder"): typeof Internal.BaseEntityJSBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "vazkii.patchouli.api.IVariableProvider"): Internal.IVariableProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.artifice.TransitoryTunnelBlock"): typeof Internal.TransitoryTunnelBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.event.GeoRenderEvent$Entity"): typeof Internal.GeoRenderEvent$Entity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.abdelaziz.canary.mixin.util.accessors.PersistentEntitySectionManagerAccessor"): Internal.PersistentEntitySectionManagerAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.util.FloatProperty"): typeof Internal.FloatProperty;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.entities.living.vanilla.PiglinEntityJS"): typeof Internal.PiglinEntityJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.valueproviders.FloatProviderType"): Internal.FloatProviderType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.level.feature.config.GalenaHexagonFeatureConfiguration"): typeof Internal.GalenaHexagonFeatureConfiguration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.level.feature.DeepOnesRuinsFeature"): typeof Internal.DeepOnesRuinsFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbteams.api.TeamRank"): typeof Internal.TeamRank;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.registries.MissingMappingsEvent"): typeof Internal.MissingMappingsEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.unit.token.UnitToken"): Internal.UnitToken;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.constructs.BellOfBidding"): typeof Internal.BellOfBidding;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.WildFlaxBlock"): typeof Internal.WildFlaxBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.fnc.api.util.Quality"): typeof Internal.Quality;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.components.PlayerTabOverlay"): typeof Internal.PlayerTabOverlay;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.advancements.RequirementsStrategy"): Internal.RequirementsStrategy;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.crafting.CookingBookCategory"): typeof Internal.CookingBookCategory;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.JsonRecipeJS"): typeof Internal.JsonRecipeJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.level.ChunkDataEvent$Load"): typeof Internal.ChunkDataEvent$Load;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.block.custom.PressurePlateBlockBuilder"): typeof Internal.PressurePlateBlockBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jozufozu.flywheel.util.ClientLevelExtension"): Internal.ClientLevelExtension;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.lifecycle.LifecycleObserver"): Internal.LifecycleObserver;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.SpawnEggItem"): typeof Internal.SpawnEggItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundDisguisedChatPacket"): typeof Internal.ClientboundDisguisedChatPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.constructs.parts.arms.ConstructPartShieldArmRight"): typeof Internal.ConstructPartShieldArmRight;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.kosmx.playerAnim.core.util.Pair"): typeof Internal.Pair;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.SculkSpreader$ChargeCursor"): typeof Internal.SculkSpreader$ChargeCursor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "javax.accessibility.AccessibleValue"): Internal.AccessibleValue;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.RenderStateShard"): typeof Internal.RenderStateShard;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.tree.EmptyStatement"): typeof Internal.EmptyStatement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.resources.language.LanguageInfo"): typeof Internal.LanguageInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.ResourceBundle"): typeof Internal.ResourceBundle;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.client.particle.ParticleOrb$OrbData"): typeof Internal.ParticleOrb$OrbData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.view.ViewTreeObserver$OnGlobalFocusChangeListener"): Internal.ViewTreeObserver$OnGlobalFocusChangeListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.DensityFunction"): Internal.DensityFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.api.integration.jei.IDisplayInfo$TooltipPredicate"): TooltipPredicate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "Tavi007.ElementalCombat.capabilities.attack.AttackLayer"): typeof Internal.AttackLayer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.integration.kubejs.requirements.CommandRequirementJS"): Internal.CommandRequirementJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.Salmon"): typeof Internal.Salmon;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.script.AbstractScript"): typeof Internal.AbstractScript;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.recipes.ItemAndPatternRecipeSerializer"): typeof Internal.ItemAndPatternRecipeSerializer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.DataPackConfig"): typeof Internal.DataPackConfig;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.image.TileObserver"): Internal.TileObserver;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.joml.Vector3dc"): Internal.Vector3dc;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.time.LocalDateTime"): typeof Internal.LocalDateTime;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.gui.style.ControlFormatting$ControlStyleBorder"): typeof Internal.ControlFormatting$ControlStyleBorder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.security.Key"): Internal.Key;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.constructs.parts.legs.ConstructPartBasicLegs"): typeof Internal.ConstructPartBasicLegs;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.texture.Stitcher$Entry"): Internal.Stitcher$Entry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.MultifaceGrowthFeature"): typeof Internal.MultifaceGrowthFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.chars.Char2LongFunction"): Internal.Char2LongFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.lodestar.lodestone.systems.particle.SimpleParticleOptions$ParticleDiscardFunctionType"): typeof Internal.SimpleParticleOptions$ParticleDiscardFunctionType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.architectury.registry.registries.Registrar"): Internal.Registrar;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.util.TinyMap"): typeof Internal.TinyMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.core.registries.Registries"): typeof Internal.Registries;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.commons.lang3.mutable.Mutable"): Internal.Mutable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.lookup.StrMatcher"): typeof Internal.StrMatcher;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.RenderStateShard$DepthTestStateShard"): typeof Internal.RenderStateShard$DepthTestStateShard;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.integration.kubejs.CustomMachineUpgradeJSBuilder$UpgradeEvent"): typeof Internal.CustomMachineUpgradeJSBuilder$UpgradeEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.templatesystem.rule.blockentity.Passthrough"): typeof Internal.Passthrough;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.DepthGlassBlock"): typeof Internal.DepthGlassBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.PotionItem"): typeof Internal.PotionItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.ponder.element.AnimatedSceneElement"): typeof Internal.AnimatedSceneElement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.BitRandomSource"): Internal.BitRandomSource;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.chunk.LightChunkGetter"): Internal.LightChunkGetter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.security.PublicKey"): Internal.PublicKey;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.scores.ScoreboardSaveData"): typeof Internal.ScoreboardSaveData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ScreenEvent$KeyReleased$Post"): typeof Internal.ScreenEvent$KeyReleased$Post;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.ponder.element.PonderSceneElement"): typeof Internal.PonderSceneElement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.entities.IFactionEnemy"): Internal.IFactionEnemy;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.PlayerHeadBlock"): typeof Internal.PlayerHeadBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.core.RegistryAccess$ImmutableRegistryAccess"): typeof Internal.RegistryAccess$ImmutableRegistryAccess;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.bettercombat.logic.AnimatedHand"): typeof Internal.AnimatedHand;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.client.particle.ParticleHandler$7"): typeof Internal.ParticleHandler$7;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.ModCheck$Confidence"): typeof Internal.ModCheck$Confidence;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "me.jellysquid.mods.sodium.client.render.viewport.Viewport"): typeof Internal.Viewport;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.ui.WidgetLayout$_Simple"): typeof Internal.WidgetLayout$_Simple;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.FlintAndSteelItem"): typeof Internal.FlintAndSteelItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.SupportType"): typeof Internal.SupportType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.CalibratedSculkSensorBlock"): typeof Internal.CalibratedSculkSensorBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.Items$1"): typeof Internal.Items$1;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.AbstractChestBlock"): typeof Internal.AbstractChestBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.fnc.common.effect.neutral.WildMagicCooldownMobEffect"): typeof Internal.WildMagicCooldownMobEffect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.village.VillagerTradesEvent"): typeof Internal.VillagerTradesEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.serialization.DynamicLike"): typeof Internal.DynamicLike;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.RenderType$CompositeState$CompositeStateBuilder"): typeof Internal.RenderType$CompositeState$CompositeStateBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.irisshaders.iris.mixin.ProgramTypeAccessor"): Internal.ProgramTypeAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.RegisterCommandsEvent"): typeof Internal.RegisterCommandsEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.sorcery.IceSpikeBlock"): typeof Internal.IceSpikeBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.behavior.BlockPosTracker"): typeof Internal.BlockPosTracker;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.enchantments.staves.DurationModifier"): typeof Internal.DurationModifier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.server.command.EnumArgument"): typeof Internal.EnumArgument;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.spi.StandardLevel"): typeof Internal.StandardLevel;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.abdelaziz.canary.api.inventory.CanaryDefaultedList"): Internal.CanaryDefaultedList;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "malte0811.ferritecore.ducks.FastMapStateHolder"): Internal.FastMapStateHolder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.sosly.arcaneadditions.effects.neutral.IceBlockExhaustionEffect"): typeof Internal.IceBlockExhaustionEffect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.Font"): typeof net.minecraft.client.gui.Font;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.MagmaBlock"): typeof Internal.MagmaBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.model.geometry.BlockGeometryBakingContext$VisibilityData"): typeof Internal.BlockGeometryBakingContext$VisibilityData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.MultifaceSpreader"): typeof Internal.MultifaceSpreader;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.living.LivingKnockBackEvent"): typeof Internal.LivingKnockBackEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.architectury.event.forge.EventHandlerImplCommon$LevelEventAttachment"): Internal.EventHandlerImplCommon$LevelEventAttachment;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.event.InputMethodEvent"): typeof Internal.InputMethodEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.state.properties.SlabType"): typeof Internal.SlabType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.item.DarknessArmorItem"): typeof Internal.DarknessArmorItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.BookPileHorizontalBlock"): typeof Internal.BookPileHorizontalBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundOpenSignEditorPacket"): typeof Internal.ClientboundOpenSignEditorPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.items.CataclysmSkullItem"): typeof Internal.CataclysmSkullItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.loot.LootEventJS"): typeof Internal.LootEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.item.ArrowItemBuilder"): typeof Internal.ArrowItemBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.item.RaygunItem"): typeof Internal.RaygunItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.MultifaceSpreader$SpreadPredicate"): Internal.MultifaceSpreader$SpreadPredicate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.artifice.ItemPilgrimStaff"): typeof Internal.ItemPilgrimStaff;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.resources.SkinManager"): typeof Internal.SkinManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.dnd.DragSource"): typeof Internal.DragSource;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.model.ArmedModel"): Internal.ArmedModel;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "kotlinx.serialization.encoding.Encoder"): kotlinx.serialization.encoding.Encoder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.packs.resources.ResourceMetadata"): Internal.ResourceMetadata;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.MapItem"): typeof Internal.MapItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.enchantment.WaterWorkerEnchantment"): typeof Internal.WaterWorkerEnchantment;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.event.WindowFocusListener"): Internal.WindowFocusListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.integration.kubejs.requirements.ItemRequirementJS"): Internal.ItemRequirementJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.DebugQueryHandler"): typeof Internal.DebugQueryHandler;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.CrossCollisionBlock"): typeof Internal.CrossCollisionBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.gui.widgets.IScrollBoxWidget"): Internal.IScrollBoxWidget;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.ui.WidgetLayout$Horizontal"): typeof Internal.WidgetLayout$Horizontal;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.yungnickyoung.minecraft.yungsapi.world.structure.terrainadaptation.LargeCarvedTopNoBeardAdaptation"): typeof Internal.LargeCarvedTopNoBeardAdaptation;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.objects.Object2ByteFunction"): Internal.Object2ByteFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.AbyssmarineWallBlock"): typeof Internal.AbyssmarineWallBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.graphics.text.Font"): icyllis.modernui.graphics.text.Font;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.templatesystem.NopProcessor"): typeof Internal.NopProcessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.JobAttributes"): typeof Internal.JobAttributes;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.events.CastingResourceGuiRegistrationEvent"): typeof Internal.CastingResourceGuiRegistrationEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.level.ChunkMap"): typeof Internal.ChunkMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.common.collect.SetMultimap"): Internal.SetMultimap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.tree.Layout"): typeof Internal.Layout;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.ponder.instruction.EmitParticlesInstruction$Emitter"): Internal.EmitParticlesInstruction$Emitter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbchunks.api.ClaimedChunk"): Internal.ClaimedChunk;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.brigadier.tree.LiteralCommandNode"): typeof Internal.LiteralCommandNode;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.cerbon.bosses_of_mass_destruction.block.custom.VoidLilyBlock"): typeof Internal.VoidLilyBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.events.SpellCastEvent"): typeof Internal.SpellCastEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.CommandBlockEntity"): typeof Internal.CommandBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.registries.IdMappingEvent$IdRemapping"): typeof Internal.IdMappingEvent$IdRemapping;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.tree.ExpressionStatement"): typeof Internal.ExpressionStatement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.material.FlowingFluid"): typeof Internal.FlowingFluid;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "pie.ilikepiefoo.events.PlayerChangeDimensionEventJS"): typeof Internal.PlayerChangeDimensionEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbxmodcompat.ftbquests.kubejs.FTBQuestsKubeJSPlayerData"): typeof Internal.FTBQuestsKubeJSPlayerData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundSetCreativeModeSlotPacket"): typeof Internal.ServerboundSetCreativeModeSlotPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "snownee.jade.api.BlockAccessor"): Internal.BlockAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.monster.Evoker"): typeof Internal.Evoker;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.gui.event.GuiControlClickEvent"): typeof Internal.GuiControlClickEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.behavior.Swim"): typeof Internal.Swim;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.advancements.CriterionProgress"): typeof Internal.CriterionProgress;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.unit.function.FunctionFactory$Arg2"): Internal.FunctionFactory$Arg2;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.brigadier.suggestion.SuggestionsBuilder"): typeof Internal.SuggestionsBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.init.CustomMachineBlock"): typeof Internal.CustomMachineBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.DimensionSpecialEffects"): typeof Internal.DimensionSpecialEffects;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.entity.EntityRenderDispatcher"): typeof Internal.EntityRenderDispatcher;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.common.reflect.TypeCapture"): typeof Internal.TypeCapture;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.boss.enderdragon.phases.EnderDragonPhase"): typeof Internal.EnderDragonPhase;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.stats.RecipeBook"): typeof Internal.RecipeBook;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.server.config.ConfigHandler$ToolConfig"): typeof Internal.ConfigHandler$ToolConfig;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.item.UpdatesStackTags"): Internal.UpdatesStackTags;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.math.Axis"): com.mojang.math.Axis;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.api.integration.kubejs.RecipeJSBuilder"): Internal.RecipeJSBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$CollidingProjectileEntityContext"): typeof Internal.ContextUtils$CollidingProjectileEntityContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.nonliving.BaseEntityBuilder$SoundKeyFrameEventJS"): typeof Internal.BaseEntityBuilder$SoundKeyFrameEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.beneficial.EffectWaterWalking"): typeof Internal.EffectWaterWalking;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.monster.Witch"): typeof Internal.Witch;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.fragment.FragmentManager$BackStackEntry"): Internal.FragmentManager$BackStackEntry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.level.ExplosionEventJS$Before"): typeof Internal.ExplosionEventJS$Before;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundSetBorderCenterPacket"): typeof Internal.ClientboundSetBorderCenterPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.architectury.registry.registries.RegistrarBuilder"): Internal.RegistrarBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.gui.sync.GuiSyncLocal"): typeof Internal.GuiSyncLocal;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.registry.CustomBuilderObject"): typeof Internal.CustomBuilderObject;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.impl.codec.UnboundedMapCodec"): typeof Internal.UnboundedMapCodec;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.items.IRelic"): Internal.IRelic;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.border.WorldBorder$BorderExtent"): Internal.WorldBorder$BorderExtent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.server.item.ItemWroughtHelm"): typeof Internal.ItemWroughtHelm;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.realmsclient.gui.task.DataFetcher"): typeof Internal.DataFetcher;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.mixin.accessor.EntityAccessor"): Internal.EntityAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.Window$Type"): typeof Internal.Window$Type;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.realmsclient.dto.PlayerInfo"): typeof com.mojang.realmsclient.dto.PlayerInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.core.keyframe.event.ParticleKeyframeEvent"): typeof Internal.ParticleKeyframeEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.lwjgl.stb.STBTTFontinfo"): typeof Internal.STBTTFontinfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.kosmx.playerAnim.core.util.Vec3d"): typeof Internal.Vec3d;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.VerticalAnchor$BelowTop"): typeof Internal.VerticalAnchor$BelowTop;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.unascribed.fabrication.interfaces.WasShoved"): Internal.WasShoved;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.FenceMimicBlock"): typeof Internal.FenceMimicBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "vazkii.patchouli.common.recipe.BookRecipeSerializer"): typeof Internal.BookRecipeSerializer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.integration.kubejs.requirements.EffectRequirementJS"): Internal.EffectRequirementJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.crafting.ShapedRecipe$Serializer"): typeof Internal.ShapedRecipe$Serializer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.items.Gauntlet_of_Bulwark"): typeof Internal.Gauntlet_of_Bulwark;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.sensing.NearestBedSensor"): typeof Internal.NearestBedSensor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.core.animation.RawAnimation"): typeof Internal.RawAnimation;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.common.collect.ImmutableCollection$Builder"): typeof Internal.ImmutableCollection$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.authlib.minecraft.BanDetails"): typeof Internal.BanDetails;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.living.vanilla.IronGolemJSBuilder"): typeof Internal.IronGolemJSBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.network.PlayMessages$SpawnEntity"): typeof Internal.PlayMessages$SpawnEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.multiplayer.chat.report.ReportEnvironment"): typeof Internal.ReportEnvironment;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundHorseScreenOpenPacket"): typeof Internal.ClientboundHorseScreenOpenPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.registries.IForgeRegistry$ValidateCallback"): Internal.IForgeRegistry$ValidateCallback;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.quest.QuestObjectType"): typeof Internal.QuestObjectType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbteams.api.property.TeamPropertyArgument"): typeof Internal.TeamPropertyArgument;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.chat.ClickEvent$Action"): typeof Internal.ClickEvent$Action;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.amendments.common.tile.HangingSignTileExtension"): typeof Internal.HangingSignTileExtension;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "vazkii.patchouli.client.book.template.BookTemplate"): typeof Internal.BookTemplate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.placement.PlacementModifierType"): Internal.PlacementModifierType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.lwjgl.CLongBuffer"): typeof Internal.CLongBuffer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.items.DynamicItemFilter"): typeof Internal.DynamicItemFilter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.LevelAccessor"): Internal.LevelAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.constructs.parts.legs.ConstructPartEnderLegs"): typeof Internal.ConstructPartEnderLegs;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.maven.artifact.repository.ArtifactRepositoryPolicy"): typeof Internal.ArtifactRepositoryPolicy;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.prunoideae.powerfuljs.events.forge.DynamicAttachEventJS"): typeof Internal.DynamicAttachEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.TickEvent$ClientTickEvent"): typeof Internal.TickEvent$ClientTickEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "me.fengming.renderjs.events.level.RenderEntityEventJS"): typeof Internal.RenderEntityEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.StainedGlassBlock"): typeof Internal.StainedGlassBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.timers.TimerCallback"): Internal.TimerCallback;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.Dimension"): typeof Internal.Dimension;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.irisshaders.iris.mixin.texture.SpriteContentsFrameInfoAccessor"): Internal.SpriteContentsFrameInfoAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.InfestedRotatedPillarBlock"): typeof Internal.InfestedRotatedPillarBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.architectury.extensions.injected.InjectedItemPropertiesExtension"): Internal.InjectedItemPropertiesExtension;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.ArchaicVinePlantBlock"): typeof Internal.ArchaicVinePlantBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.time.ZoneId"): typeof Internal.ZoneId;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.profiling.ProfilerFiller"): Internal.ProfilerFiller;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.chat.HoverEvent$EntityTooltipInfo"): typeof Internal.HoverEvent$EntityTooltipInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.integration.forge.jei.AddJEIEventJS"): typeof Internal.AddJEIEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.settings.IKeyConflictContext"): Internal.IKeyConflictContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.navigation.PathNavigation"): typeof Internal.PathNavigation;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.HoeItem"): typeof Internal.HoeItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$EntityLevelContext"): typeof Internal.ContextUtils$EntityLevelContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.doubles.DoubleBidirectionalIterator"): Internal.DoubleBidirectionalIterator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.LightLayer"): typeof Internal.LightLayer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.fluids.FluidContainerList"): typeof Internal.FluidContainerList;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.HugeRedMushroomFeature"): typeof Internal.HugeRedMushroomFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.PrimitiveIterator"): Internal.PrimitiveIterator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.texture.TextureManager"): typeof Internal.TextureManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.sorcery.ItemSpellRecipe"): typeof Internal.ItemSpellRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.syncher.EntityDataSerializer"): Internal.EntityDataSerializer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.rituals.IRitualReagent"): Internal.IRitualReagent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.spi.ExtendedLogger"): Internal.ExtendedLogger;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.LightBlock"): typeof Internal.LightBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.impl.codec.NamedMapCodec"): typeof Internal.NamedMapCodec;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.PageAttributes$ColorType"): typeof Internal.PageAttributes$ColorType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.level.feature.ThornwoodRootsFeature"): typeof Internal.ThornwoodRootsFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.client.particle.MaledictusRingParticle$MaledictusRingData"): typeof Internal.MaledictusRingParticle$MaledictusRingData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.util.math.box.ABB"): typeof Internal.ABB;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.players.UserBanListEntry"): typeof Internal.UserBanListEntry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.view.ViewTreeObserver"): typeof Internal.ViewTreeObserver;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundResourcePackPacket"): typeof Internal.ServerboundResourcePackPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.BlockItem"): typeof Internal.BlockItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.image.renderable.RenderContext"): typeof Internal.RenderContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.Hopper"): Internal.Hopper;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jozufozu.flywheel.event.BeginFrameEvent"): typeof Internal.BeginFrameEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.biome.Climate$Sampler"): typeof Internal.Climate$Sampler;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.EnderChestBlockEntity"): typeof Internal.EnderChestBlockEntity;
        toString(): string;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.event.HierarchyListener"): Internal.HierarchyListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.chat.SignedMessageBody$Packed"): typeof Internal.SignedMessageBody$Packed;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.CandleBlock"): typeof Internal.CandleBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.kinds.Kind1$Mu"): Internal.Kind1$Mu;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.LifeCycle$State"): typeof Internal.LifeCycle$State;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.prunoideae.powerfuljs.capabilities.forge.CapabilityFluid"): typeof Internal.CapabilityFluid;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.gui.handlers.IGlobalGuiHandler"): Internal.IGlobalGuiHandler;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.Font"): typeof Internal.Font;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.HazmatBlock"): typeof Internal.HazmatBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.fluids.SoftFluid"): typeof Internal.SoftFluid;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.enchantments.staves.RangeModifier"): typeof Internal.RangeModifier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.fnc.common.item.DebugOrbSmiteItem"): typeof Internal.DebugOrbSmiteItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundSetTimePacket"): typeof Internal.ClientboundSetTimePacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.util.Pair$Mu"): typeof Internal.Pair$Mu;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.yungnickyoung.minecraft.yungsapi.world.structure.terrainadaptation.SmallCarvedTopNoBeardAdaptation"): typeof Internal.SmallCarvedTopNoBeardAdaptation;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.BrewingStandBlock"): typeof Internal.BrewingStandBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.ChangeOverTimeBlock"): Internal.ChangeOverTimeBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.ShaderKind"): typeof Internal.ShaderKind;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.core.animation.EasingType"): Internal.EasingType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.integration.kubejs.requirements.ChunkloadRequirementJS"): Internal.ChunkloadRequirementJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.loot.GiftLootEventJS"): typeof Internal.GiftLootEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.constructs.ItemMagicBroom"): typeof Internal.ItemMagicBroom;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$EPassengerEntityContext"): typeof Internal.ContextUtils$EPassengerEntityContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.geom.Rectangle2D"): typeof Internal.Rectangle2D;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.IceBlock"): typeof Internal.IceBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.SweetBerryBushBlock"): typeof Internal.SweetBerryBushBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.items.void_core"): typeof Internal.void_core;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.artifice.BookStandBlock"): typeof Internal.BookStandBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.DriverBugWorkarounds"): typeof Internal.DriverBugWorkarounds;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.players.StoredUserList"): typeof Internal.StoredUserList;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.BlockGetter"): Internal.BlockGetter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.potion.IrradiatedEffect"): typeof Internal.IrradiatedEffect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.finndog.mss.mixins.structures.StructurePieceAccessor"): com.finndog.mss.mixins.structures.StructurePieceAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.keksuccino.konkrete.mixin.client.IMixinScreen"): Internal.IMixinScreen;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.border.WorldBorder$Settings"): typeof Internal.WorldBorder$Settings;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.shorts.ShortConsumer"): Internal.ShortConsumer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.chat.MessageSignature"): typeof Internal.MessageSignature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout"): Internal.ArtifactRepositoryLayout;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.entities.nonliving.entityjs.ProjectileEntityJS"): typeof Internal.ProjectileEntityJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.amendments.common.tile.LiquidCauldronBlockTile"): typeof Internal.LiquidCauldronBlockTile;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.chunk.UpgradeData"): typeof Internal.UpgradeData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.Minecraft"): typeof Internal.Minecraft;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.blocks.interfaces.IOffsetPlace"): Internal.IOffsetPlace;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.ModCheck"): typeof Internal.ModCheck;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.SmokerBlockEntity"): typeof Internal.SmokerBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.Spliterator$OfInt"): Internal.Spliterator$OfInt;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.math.Transformation"): typeof Internal.Transformation;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.RenderTextureProxy"): typeof Internal.RenderTextureProxy;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.navigation.AmphibiousPathNavigation"): typeof Internal.AmphibiousPathNavigation;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.arguments.ScoreHolderArgument$Result"): Internal.ScoreHolderArgument$Result;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.configurations.RandomFeatureConfiguration"): typeof Internal.RandomFeatureConfiguration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.event.KeyEvent"): typeof Internal.KeyEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.resources.FileToIdConverter"): typeof Internal.FileToIdConverter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.gui.ingredient.IRecipeSlotsView"): Internal.IRecipeSlotsView;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.ResourceLoadStateTracker$ReloadReason"): typeof Internal.ResourceLoadStateTracker$ReloadReason;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.client.ModelGenerator$Face"): typeof Internal.ModelGenerator$Face;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.prunoideae.powerfuljs.capabilities.forge.CapabilityForgeEnergy$ItemStorageBuilder"): typeof Internal.CapabilityForgeEnergy$ItemStorageBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.electronwill.nightconfig.core.Config"): Internal.Config;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.artifice.ItemEnderDisk"): typeof Internal.ItemEnderDisk;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.irisshaders.iris.parsing.ExtendedBiome"): Internal.ExtendedBiome;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.text.AttributedCharacterIterator$Attribute"): typeof Internal.AttributedCharacterIterator$Attribute;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.types.Type$TypeMatcher"): Internal.Type$TypeMatcher;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.entities.living.vanilla.DonkeyEntityJS"): typeof Internal.DonkeyEntityJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.tree.ConstructorCall"): typeof Internal.ConstructorCall;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.brigadier.suggestion.Suggestions"): typeof Internal.Suggestions;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.level.BlockEvent$FluidPlaceBlockEvent"): typeof Internal.BlockEvent$FluidPlaceBlockEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.tree.Node$StatementKind"): typeof Internal.Node$StatementKind;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.configurations.UnderwaterMagmaConfiguration"): typeof Internal.UnderwaterMagmaConfiguration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.sensing.AdultSensor"): typeof Internal.AdultSensor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.slf4j.Logger"): org.slf4j.Logger;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.item.ItemEntity"): typeof Internal.ItemEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.function.LongPredicate"): Internal.LongPredicate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.lodestar.lodestone.systems.particle.world.type.LodestoneTerrainParticleType"): typeof Internal.LodestoneTerrainParticleType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.screens.Screen$NarratableSearchResult"): typeof Internal.Screen$NarratableSearchResult;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.blaze3d.vertex.VertexConsumer"): Internal.VertexConsumer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.common.collect.BiMap"): Internal.BiMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundSetPassengersPacket"): typeof Internal.ClientboundSetPassengersPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.config.ReliabilityStrategy"): Internal.ReliabilityStrategy;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.enchantment.ArrowPiercingEnchantment"): typeof Internal.ArrowPiercingEnchantment;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.almostreliable.lootjs.loot.condition.builder.DistancePredicateBuilder"): typeof Internal.DistancePredicateBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.Entity$MoveFunction"): Internal.Entity$MoveFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.filter.RecipeFilterParseEvent"): Internal.RecipeFilterParseEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "snownee.jade.api.view.FluidView"): typeof Internal.FluidView;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.core.ColorSpace$Rgb$TransferParameters"): typeof Internal.ColorSpace$Rgb$TransferParameters;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.WaterlilyBlock"): typeof Internal.WaterlilyBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.loot.entries.ComposableEntryContainer"): Internal.ComposableEntryContainer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.blaze3d.vertex.BufferBuilder$SortState"): typeof Internal.BufferBuilder$SortState;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplate$StructureBlockInfo"): typeof Internal.StructureTemplate$StructureBlockInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.crafting.BlastingRecipe"): typeof Internal.BlastingRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.living.LivingHealEvent"): typeof Internal.LivingHealEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.items.CandyItem"): typeof Internal.CandyItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.map.CustomMapDecoration"): typeof Internal.CustomMapDecoration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.NoiseChunk"): typeof Internal.NoiseChunk;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.RenderTypeGroup"): typeof Internal.RenderTypeGroup;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.effect.MobEffectInstance"): typeof Internal.MobEffectInstance;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.recipe.category.extensions.IRecipeCategoryExtension"): Internal.IRecipeCategoryExtension;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.capabilities.ChronoAnchorData"): typeof Internal.ChronoAnchorData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.bindings.TextWrapper"): typeof Component;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.WetSpongeBlock"): typeof Internal.WetSpongeBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.fnc.api.event.PerformSmiteEvent"): typeof Internal.PerformSmiteEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.monster.warden.AngerLevel"): typeof Internal.AngerLevel;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.templatesystem.RandomBlockMatchTest"): typeof Internal.RandomBlockMatchTest;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.puffish.attributesmod.attribute.DynamicEntityAttribute"): typeof Internal.DynamicEntityAttribute;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundChangeDifficultyPacket"): typeof Internal.ClientboundChangeDifficultyPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.TraceableEntity"): Internal.TraceableEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2itemselector.events.GenericKeyEvent"): typeof Internal.GenericKeyEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.entity.IExtraClientSpawnData"): Internal.IExtraClientSpawnData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.recipe.IFocus"): Internal.IFocus;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.CreativeCore$1"): typeof Internal.CreativeCore$1;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.piston.PistonBaseBlock"): typeof Internal.PistonBaseBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.blaze3d.platform.WindowEventHandler"): Internal.WindowEventHandler;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.FaucetBlock"): typeof Internal.FaucetBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.WoolCarpetBlock"): typeof Internal.WoolCarpetBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.floats.Float2CharFunction"): Internal.Float2CharFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.enchantment.UntouchingEnchantment"): typeof Internal.UntouchingEnchantment;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.damagesource.DamageType"): typeof Internal.DamageType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.Component$BaselineResizeBehavior"): typeof Internal.Component$BaselineResizeBehavior;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.control.LookControl"): typeof Internal.LookControl;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.nbt.ByteTag"): typeof Internal.ByteTag;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.Level"): typeof org.apache.logging.log4j.Level;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.FireChargeItem"): typeof Internal.FireChargeItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbxmodcompat.ftbteams.kubejs.KJSTeamWrapper"): typeof Internal.KJSTeamWrapper;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.entities.BombEntity"): typeof Internal.BombEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.realmsclient.dto.RealmsNews"): typeof Internal.RealmsNews;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.monster.EnderMan"): typeof Internal.EnderMan;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.base.IHellfireItem"): Internal.IHellfireItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.server.ServerStoppedEvent"): typeof Internal.ServerStoppedEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.cache.object.GeoBone"): typeof Internal.GeoBone;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.FarmBlock"): typeof Internal.FarmBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.core.animation.AnimationProcessor"): typeof Internal.AnimationProcessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2library.serial.recipe.AbstractShapelessRecipe"): typeof Internal.AbstractShapelessRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.prunoideae.powerfuljs.events.forge.DynamicBEEventJS"): typeof Internal.DynamicBEEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.config.ConfigurationAware"): Internal.ConfigurationAware;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.runes.ItemRunescribingRecipe"): typeof Internal.ItemRunescribingRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.color.item.ItemColors"): typeof Internal.ItemColors;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.lodestar.lodestone.systems.particle.world.options.WorldParticleOptions"): typeof Internal.WorldParticleOptions;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.biome.Climate$TargetPoint"): typeof Internal.Climate$TargetPoint;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.fragment.Fragment"): typeof Internal.Fragment;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.player.CriticalHitEvent"): typeof Internal.CriticalHitEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.structures.MineshaftStructure"): typeof Internal.MineshaftStructure;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.living.LivingChangeTargetEvent"): typeof Internal.LivingChangeTargetEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.spells.base.ISpellDefinition"): Internal.ISpellDefinition;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.loot.FishingLootEventJS"): typeof Internal.FishingLootEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.geom.Dimension2D"): typeof Internal.Dimension2D;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.nbt.StreamTagVisitor"): Internal.StreamTagVisitor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.common.collect.ImmutableMultimap"): typeof Internal.ImmutableMultimap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.item.ItemStackSet"): typeof Internal.ItemStackSet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.ReplaceBlobsFeature"): typeof Internal.ReplaceBlobsFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.network.TextFilter"): Internal.TextFilter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.EntityDimensions"): typeof Internal.EntityDimensions;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.RandomBooleanSelectorFeature"): typeof Internal.RandomBooleanSelectorFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.goal.WrappedGoal"): typeof Internal.WrappedGoal;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.layouts.LayoutElement"): Internal.LayoutElement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.level.feature.config.AbyssalFloraFeatureConfiguration"): typeof Internal.AbyssalFloraFeatureConfiguration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.nonliving.entityjs.PartBuilder"): typeof Internal.PartBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.dmnr.common.effects.beneficial.UltimateArmorMobEffect"): typeof Internal.UltimateArmorMobEffect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.debug.PathfindingRenderer"): typeof Internal.PathfindingRenderer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.effect.AbsoptionMobEffect"): typeof Internal.AbsoptionMobEffect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.extensions.IForgeKeyMapping"): Internal.IForgeKeyMapping;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.LevelStorageSource"): typeof Internal.LevelStorageSource;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.tree.FunctionCall"): typeof Internal.FunctionCall;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.flat.FlatLayerInfo"): typeof Internal.FlatLayerInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.Products$P13"): typeof Internal.Products$P13;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.player.PlayerEvent"): typeof Internal.PlayerEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.items.Blessed_Amethyst_Crab_Meat"): typeof Internal.Blessed_Amethyst_Crab_Meat;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.ThinGeothermalVentBlock"): typeof Internal.ThinGeothermalVentBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.time.chrono.ChronoZonedDateTime"): Internal.ChronoZonedDateTime;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.worldgen.MATarmaRootBlock"): typeof Internal.MATarmaRootBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.MangrovePropaguleBlock"): typeof Internal.MangrovePropaguleBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$PartEntityParams"): typeof Internal.ContextUtils$PartEntityParams;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.harmful.EffectChronoExhaustion"): typeof Internal.EffectChronoExhaustion;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.block.model.BlockModel"): typeof Internal.BlockModel;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.PrimitiveIterator$OfLong"): Internal.PrimitiveIterator$OfLong;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.runes.ItemStoneRune"): typeof Internal.ItemStoneRune;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.fnc.common.effect.beneficial.GoodWildMagicMobEffect"): typeof Internal.GoodWildMagicMobEffect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.Entity"): typeof Internal.Entity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.tree.GlobalVariableDecl"): typeof Internal.GlobalVariableDecl;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.level.NoteBlockEvent$Octave"): typeof Internal.NoteBlockEvent$Octave;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.longs.LongUnaryOperator"): it.unimi.dsi.fastutil.longs.LongUnaryOperator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.fluid.FlowingFluidBuilder"): typeof Internal.FlowingFluidBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.WeatheringCopper$WeatherState"): typeof Internal.WeatheringCopper$WeatherState;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.artifice.ItemHellfireTrident"): typeof Internal.ItemHellfireTrident;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "javax.swing.text.AttributeSet"): Internal.AttributeSet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.telemetry.TelemetryPropertyMap$Builder"): typeof Internal.TelemetryPropertyMap$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.lodestar.lodestone.systems.particle.data.GenericParticleDataBuilder"): typeof Internal.GenericParticleDataBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.behavior.DoNothing"): typeof Internal.DoNothing;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbxmodcompat.ftbquests.kubejs.CustomFilterItemEventJS"): typeof Internal.CustomFilterItemEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.ponder.Selection"): typeof Internal.Selection;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.rhino.mod.util.NBTUtils"): NBT;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.lighting.ChunkSkyLightSources"): typeof Internal.ChunkSkyLightSources;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.function.LongFunction"): Internal.LongFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.level.ServerChunkCache"): typeof Internal.ServerChunkCache;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.trunkplacers.StraightTrunkPlacer"): typeof Internal.StraightTrunkPlacer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.chunk.PaletteResize"): Internal.PaletteResize;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.event.HierarchyBoundsListener"): Internal.HierarchyBoundsListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.time.temporal.TemporalUnit"): Internal.TemporalUnit;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundCustomPayloadPacket"): typeof Internal.ClientboundCustomPayloadPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.enchantments.Returning"): typeof Internal.Returning;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.objects.ObjectCollection"): Internal.ObjectCollection;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.block.callbacks.BlockStateMirrorCallbackJS"): typeof Internal.BlockStateMirrorCallbackJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.monster.Stray"): typeof Internal.Stray;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.lifecycle.LiveData"): typeof Internal.LiveData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.CarrotBlock"): typeof Internal.CarrotBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.schema.RecipeComponentFactory"): Internal.RecipeComponentFactory;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "pie.ilikepiefoo.compat.jade.builder.BlockComponentProviderBuilder"): typeof Internal.BlockComponentProviderBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "javax.swing.text.StyleConstants$ColorConstants"): typeof Internal.StyleConstants$ColorConstants;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2backpack.content.bag.AbstractBag"): typeof Internal.AbstractBag;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.shading.UniformHandler"): typeof Internal.UniformHandler;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.util.math.geo.NormalPlaneD"): typeof Internal.NormalPlaneD;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.forgespi.locating.IModFile"): Internal.IModFile;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.config.Property"): typeof org.apache.logging.log4j.core.config.Property;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.lwjgl.system.Struct"): typeof Internal.Struct;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.entity.LivingEntityHurtEventJS"): typeof Internal.LivingEntityHurtEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.debug.GameTestDebugRenderer"): typeof Internal.GameTestDebugRenderer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.blay09.mods.balm.mixin.ScreenAccessor"): Internal.ScreenAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.StructurePiece"): typeof Internal.StructurePiece;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.living.vanilla.AllayJSBuilder"): typeof Internal.AllayJSBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.decoration.SimpleRotationalBlock"): typeof Internal.SimpleRotationalBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.PolarBear"): typeof Internal.PolarBear;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jozufozu.flywheel.core.layout.BufferLayout$Builder"): typeof Internal.BufferLayout$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "snownee.jade.api.ui.IBoxStyle"): Internal.IBoxStyle;
        equals(arg0: any): boolean;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.util.Function5"): Internal.Function5;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.SignatureUpdater$Output"): Internal.SignatureUpdater$Output;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.util.MutableHashedLinkedMap"): typeof Internal.MutableHashedLinkedMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.living.ShieldBlockEvent"): typeof Internal.ShieldBlockEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.arguments.TimeArgument"): typeof Internal.TimeArgument;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.monster.Shulker"): typeof Internal.Shulker;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundBlockChangedAckPacket"): typeof Internal.ClientboundBlockChangedAckPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.lwjgl.system.CallbackI"): Internal.CallbackI;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.entities.construct.IConstructConstruction"): Internal.IConstructConstruction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.ConfiguredFeature"): typeof Internal.ConfiguredFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.runtime.IScreenHelper"): Internal.IScreenHelper;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.fnc.api.event.PerformWildMagicEvent"): typeof Internal.PerformWildMagicEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.almostreliable.lootjs.kube.builder.EntityPredicateBuilderJS"): typeof Internal.EntityPredicateBuilderJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.EmptyMapItem"): typeof Internal.EmptyMapItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.item.ItemEntityInteractedEventJS"): typeof Internal.ItemEntityInteractedEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2backpack.content.quickswap.common.IQuickSwapItem"): Internal.IQuickSwapItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.ponder.SceneBuildingUtil"): typeof Internal.SceneBuildingUtil;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.Parrot$Variant"): typeof Internal.Parrot$Variant;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.configurations.TwistingVinesConfig"): typeof Internal.TwistingVinesConfig;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.joml.Quaternionfc"): Internal.Quaternionfc;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.nbt.LongArrayTag"): typeof Internal.LongArrayTag;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.GobletBlock"): typeof Internal.GobletBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.fnc.common.effect.smite.SilencingSmite"): typeof Internal.SilencingSmite;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.items.ItemInventoryOnly"): typeof Internal.ItemInventoryOnly;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.level.FullChunkStatus"): typeof Internal.FullChunkStatus;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.NaturalSpawner$SpawnState"): typeof Internal.NaturalSpawner$SpawnState;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundSoundPacket"): typeof Internal.ClientboundSoundPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.living.vanilla.CreeperJSBuilder"): typeof Internal.CreeperJSBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.network.messages.to_server.InscriptionTableCraftingUpdateMessage"): typeof Internal.InscriptionTableCraftingUpdateMessage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.crafting.ArmorDyeRecipe"): typeof Internal.ArmorDyeRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.core.HolderLookup$RegistryLookup"): Internal.HolderLookup$RegistryLookup;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.blocks.PylonBlock"): typeof Internal.PylonBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.block.render.BlockDestructionProgressExtension"): Internal.BlockDestructionProgressExtension;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.GeometryProcessor$Attribute"): typeof Internal.GeometryProcessor$Attribute;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.embeddedt.modernfix.chunk.SafeBlockGetter"): typeof Internal.SafeBlockGetter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.Structure"): typeof Internal.Structure;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.GpuResource$UniqueID"): typeof Internal.GpuResource$UniqueID;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.entities.construct.materials.ConstructMaterialStone"): typeof Internal.ConstructMaterialStone;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.stream.DoubleStream$DoubleMapMultiConsumer"): Internal.DoubleStream$DoubleMapMultiConsumer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.entities.construct.ConstructCapability"): typeof Internal.ConstructCapability;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.View"): typeof Internal.View;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.recipes.runeforging.RuneforgingRecipeSerializer"): typeof Internal.RuneforgingRecipeSerializer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ScreenEvent$KeyPressed$Pre"): typeof Internal.ScreenEvent$KeyPressed$Pre;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.client.living.KubeJSEntityRenderer"): typeof Internal.KubeJSEntityRenderer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.config.LongConfig"): typeof Internal.LongConfig;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.abdelaziz.canary.common.entity.PositionedEntityTrackingSection"): Internal.PositionedEntityTrackingSection;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.starfish_studios.bbb.block.BrazierBlock"): typeof Internal.BrazierBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.item.ItemBuilder$FinishUsingCallback"): Internal.ItemBuilder$FinishUsingCallback;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.forgespi.language.IModFileInfo$LanguageSpec"): typeof Internal.IModFileInfo$LanguageSpec;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.ImmutableCollections$ListN"): typeof Internal.ImmutableCollections$ListN;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.blaze3d.vertex.VertexFormat$IndexType"): typeof Internal.VertexFormat$IndexType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.unit.function.FunctionFactory$Arg1"): Internal.FunctionFactory$Arg1;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.ponder.element.EntityElement"): typeof Internal.EntityElement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.types.Type$TypeError"): typeof Internal.Type$TypeError;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "javax.security.auth.Destroyable"): Internal.Destroyable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.scores.Scoreboard"): typeof Internal.Scoreboard;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.horse.TraderLlama"): typeof Internal.TraderLlama;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.artifice.ItemDowsingRod"): typeof Internal.ItemDowsingRod;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.crafting.ConditionalRecipe$Serializer"): typeof Internal.ConditionalRecipe$Serializer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.artifice.StudyDeskBlock"): typeof Internal.StudyDeskBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.extensions.IForgeCommandSourceStack"): Internal.IForgeCommandSourceStack;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.carver.NetherWorldCarver"): typeof Internal.NetherWorldCarver;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.living.vanilla.IllusionerJSBuilder"): typeof Internal.IllusionerJSBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.recipe.vanilla.IVanillaRecipeFactory"): Internal.IVanillaRecipeFactory;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.chat.HoverEvent$Action"): typeof Internal.HoverEvent$Action;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundSetObjectivePacket"): typeof Internal.ClientboundSetObjectivePacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.item.ItemDroppedEventJS"): typeof Internal.ItemDroppedEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.recipe.vanilla.IJeiBrewingRecipe"): Internal.IJeiBrewingRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.harmful.EffectConfuse"): typeof Internal.EffectConfuse;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.entities.attributes.AttributeRangedDamage"): typeof Internal.AttributeRangedDamage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.loot.providers.number.LootNumberProviderType"): typeof Internal.LootNumberProviderType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundServerDataPacket"): typeof Internal.ClientboundServerDataPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.searchtree.SearchTree"): Internal.SearchTree;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundSetChunkCacheRadiusPacket"): typeof Internal.ClientboundSetChunkCacheRadiusPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.behavior.PrepareRamNearestTarget"): typeof Internal.PrepareRamNearestTarget;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.RecordItem"): typeof Internal.RecordItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.integration.forge.jei.JEISubtypesEventJS$Interpreter"): Internal.JEISubtypesEventJS$Interpreter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.debug.DebugRenderer$SimpleDebugRenderer"): Internal.DebugRenderer$SimpleDebugRenderer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.unit.token.CharStream"): typeof Internal.CharStream;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.realmsclient.dto.RealmsServerPlayerList"): typeof Internal.RealmsServerPlayerList;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.carver.CanyonCarverConfiguration"): typeof Internal.CanyonCarverConfiguration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.Commands$CommandSelection"): typeof Internal.Commands$CommandSelection;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.graphics.text.FontPaint"): typeof Internal.FontPaint;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.client.particle.util.ParticleRotation"): typeof Internal.ParticleRotation;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.GameNarrator"): typeof Internal.GameNarrator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.rhino.EvaluatorException"): typeof Internal.EvaluatorException;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.blockpredicates.AnyOfPredicate"): typeof Internal.AnyOfPredicate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.schema.RecipeConstructor$Factory"): Internal.RecipeConstructor$Factory;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.block.custom.CarpetBlockBuilder"): typeof Internal.CarpetBlockBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.lifecycle.ViewModel"): typeof Internal.ViewModel;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.items.Dungeon_Eye.AbyssEyeItem"): typeof Internal.AbyssEyeItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.state.properties.DirectionProperty"): typeof Internal.DirectionProperty;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.util.client.PositionedIngredient"): typeof Internal.PositionedIngredient;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.BundlerInfo"): Internal.BundlerInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.phys.BlockHitResult"): typeof Internal.BlockHitResult;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.authlib.Agent"): typeof Internal.Agent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.spi.LoggerContext"): org.apache.logging.log4j.spi.LoggerContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.boss.enderdragon.phases.DragonHoldingPatternPhase"): typeof Internal.DragonHoldingPatternPhase;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "kotlin.reflect.KTypeParameter"): Internal.KTypeParameter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.quickplay.QuickPlayLog"): typeof Internal.QuickPlayLog;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.brigadier.builder.ArgumentBuilder"): typeof Internal.ArgumentBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbteams.api.Team"): dev.ftb.mods.ftbteams.api.Team;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.carver.CarverConfiguration"): typeof Internal.CarverConfiguration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.starfish_studios.bbb.block.StoneFenceBlock"): typeof Internal.StoneFenceBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.living.BaseLivingEntityBuilder$ParticleKeyFrameEventJS"): typeof Internal.BaseLivingEntityBuilder$ParticleKeyFrameEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.multiplayer.ServerData"): typeof Internal.ServerData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "Tavi007.ElementalCombat.enchantments.ElementalResistanceEnchantment"): typeof Internal.ElementalResistanceEnchantment;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "me.Thelnfamous1.bettermobcombat.api.MobAttackWindup"): Internal.MobAttackWindup;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.ints.IntComparator"): Internal.IntComparator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundRenameItemPacket"): typeof Internal.ServerboundRenameItemPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.gson.TypeAdapterFactory"): Internal.TypeAdapterFactory;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.PickaxeItem"): typeof Internal.PickaxeItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.BoneNoduleBlock"): typeof Internal.BoneNoduleBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.serialization.MapCodec$MapCodecCodec"): typeof Internal.MapCodec$MapCodecCodec;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.chunk.Palette"): Internal.Palette;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.block.StageBarrierBlock"): typeof Internal.StageBarrierBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.RenderPlayerEvent$Post"): typeof Internal.RenderPlayerEvent$Post;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.misc.VillagerTypeBuilder"): typeof Internal.VillagerTypeBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.kostromdan.mods.netjs.utils.TrustAllCertificates"): typeof Internal.TrustAllCertificates;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundPlayerCommandPacket"): typeof Internal.ServerboundPlayerCommandPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.EntityJSUtils"): EntityJSUtils;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.entities.living.vanilla.DolphinEntityJS"): typeof Internal.DolphinEntityJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.SpyglassItem"): typeof Internal.SpyglassItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.pieces.StructurePieceType"): Internal.StructurePieceType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.recipes.runeforging.RunescribingRecipe"): typeof Internal.RunescribingRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "snownee.jade.api.IServerDataProvider"): Internal.IServerDataProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.irisshaders.iris.texture.pbr.PBRDumpable"): Internal.PBRDumpable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.abdelaziz.canary.common.ai.pathing.BlockStatePathingCache"): Internal.BlockStatePathingCache;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.registration.IAdvancedRegistration"): Internal.IAdvancedRegistration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.core.keyframe.AnimationPointQueue"): typeof Internal.AnimationPointQueue;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "pie.ilikepiefoo.compat.jei.events.RegisterFluidSubtypeEventJS"): typeof Internal.RegisterFluidSubtypeEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.AbstractList"): typeof Internal.AbstractList;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.RakedGravelBlock"): typeof Internal.RakedGravelBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.player.PlayerEvent$PlayerLoggedOutEvent"): typeof Internal.PlayerEvent$PlayerLoggedOutEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2backpack.network.DrawerInteractToServer$Callback"): typeof Internal.DrawerInteractToServer$Callback;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.ModuleUnit"): typeof Internal.ModuleUnit;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.treedecorators.BeehiveDecorator"): typeof Internal.BeehiveDecorator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.shorts.Short2BooleanFunction"): Internal.Short2BooleanFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.sounds.AudioStream"): Internal.AudioStream;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.BuildCreativeModeTabContentsEvent"): typeof Internal.BuildCreativeModeTabContentsEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.Dialog$ModalExclusionType"): typeof Internal.Dialog$ModalExclusionType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.resources.sounds.SoundInstance$Attenuation"): typeof Internal.SoundInstance$Attenuation;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.dnd.DragSourceDragEvent"): typeof Internal.DragSourceDragEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.fluid.OutputFluid"): Internal.OutputFluid;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.carver.CanyonWorldCarver"): typeof Internal.CanyonWorldCarver;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.projectile.ThrownPotion"): typeof Internal.ThrownPotion;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.level.BlockEvent$BreakEvent"): typeof Internal.BlockEvent$BreakEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.io.Closeable"): Internal.Closeable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.sorcery.ItemBookOfRote"): typeof Internal.ItemBookOfRote;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.sensing.PlayerSensor"): typeof Internal.PlayerSensor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.attributes.AttributeMap"): typeof Internal.AttributeMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.ritual.PractitionersPouchPatches"): typeof Internal.PractitionersPouchPatches;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.rhino.ScriptableObject"): typeof Internal.ScriptableObject;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$EntityLootContext"): typeof Internal.ContextUtils$EntityLootContext;
        getClass(): typeof any;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.constructs.parts.arms.ConstructPartGrabberArmLeft"): typeof Internal.ConstructPartGrabberArmLeft;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.EntityGetter"): Internal.EntityGetter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.horse.Mule"): typeof Internal.Mule;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.util.Currency$CurrencyStringInfo"): typeof Internal.Currency$CurrencyStringInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.enchantment.EnchantmentInstance"): typeof Internal.EnchantmentInstance;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.text.Format$Field"): typeof Internal.Format$Field;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.ponder.element.PonderElement"): typeof Internal.PonderElement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.biome.BiomeManager"): typeof Internal.BiomeManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.OptionalLong"): typeof Internal.OptionalLong;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.time.LocalTime"): typeof Internal.LocalTime;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.rhino.ClassShutter"): Internal.ClassShutter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.sensing.TemptingSensor"): typeof Internal.TemptingSensor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.brigadier.arguments.ArgumentType"): Internal.ArgumentType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.templatesystem.StructureProcessor"): typeof Internal.StructureProcessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.client.particle.util.RibbonParticleData"): typeof Internal.RibbonParticleData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.FriendlyByteBuf$Writer"): Internal.FriendlyByteBuf$Writer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.memory.WalkTarget"): typeof Internal.WalkTarget;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.CoralClawFeature"): typeof Internal.CoralClawFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.CoralMushroomFeature"): typeof Internal.CoralMushroomFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.validation.DirectoryValidator"): typeof Internal.DirectoryValidator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.RenderLevelStageEvent$Stage"): typeof Internal.RenderLevelStageEvent$Stage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.stateproviders.RuleBasedBlockStateProvider"): typeof Internal.RuleBasedBlockStateProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.vehicle.ChestBoat"): typeof Internal.ChestBoat;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.ints.IntStack"): Internal.IntStack;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.component.BooleanComponent"): typeof Internal.BooleanComponent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.serialization.DataResult"): typeof Internal.DataResult;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.ingredients.subtypes.UidContext"): typeof Internal.UidContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.RenderTargetProxy"): typeof Internal.RenderTargetProxy;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ScreenEvent$MouseDragged$Post"): typeof Internal.ScreenEvent$MouseDragged$Post;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.ChorusPlantBlock"): typeof Internal.ChorusPlantBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.DensityFunctions$TwoArgumentSimpleFunction$Type"): typeof Internal.DensityFunctions$TwoArgumentSimpleFunction$Type;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.misc.PoiTypeBuilder"): typeof Internal.PoiTypeBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbteams.data.TeamArgument$Info$Template"): typeof Internal.TeamArgument$Info$Template;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.tree.Type$Field"): typeof Internal.Type$Field;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.sorcery.ImpaleBlock"): typeof Internal.ImpaleBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.joml.Matrix4x3f"): typeof Internal.Matrix4x3f;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.util.INBTSerializable"): Internal.INBTSerializable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.fnc.common.effect.beneficial.EmpoweredMobEffect"): typeof Internal.EmpoweredMobEffect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.CommandSource"): Internal.CommandSource;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.material.WaterFluid$Source"): typeof Internal.WaterFluid$Source;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.AmbersolBlock"): typeof Internal.AmbersolBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.shorts.ShortIterator"): Internal.ShortIterator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.gameevent.EntityPositionSource$Type"): typeof Internal.EntityPositionSource$Type;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.RecipesEventJS"): typeof Internal.RecipesEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.fragment.FragmentFactory"): typeof Internal.FragmentFactory;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.block.callbacks.EntityFallenOnBlockCallbackJS"): typeof Internal.EntityFallenOnBlockCallbackJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.level.feature.ForlornRuinsFeature"): typeof Internal.ForlornRuinsFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.entities.living.vanilla.BeeEntityJS"): typeof Internal.BeeEntityJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.util.BlockSnapshot"): typeof Internal.BlockSnapshot;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.capabilities.resource.ICastingResource"): Internal.ICastingResource;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.data.worldgen.BootstapContext"): Internal.BootstapContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.cerbon.bosses_of_mass_destruction.block.custom.MobWardBlock"): typeof Internal.MobWardBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.AirItem"): typeof Internal.AirItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.almostreliable.ponderjs.particles.ParticleDataBuilder$Static"): typeof Internal.ParticleDataBuilder$Static;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.item.additional_placements.BlockPlacerItem"): typeof Internal.BlockPlacerItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.arguments.ResourceArgument$Info$Template"): typeof Internal.ResourceArgument$Info$Template;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.text.TimeZoneFormat$Style"): typeof Internal.TimeZoneFormat$Style;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.items.ManaBatteryItem"): typeof Internal.ManaBatteryItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.text.UnicodeSet$ComparisonStyle"): typeof Internal.UnicodeSet$ComparisonStyle;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundChunksBiomesPacket"): typeof Internal.ClientboundChunksBiomesPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ScreenEvent$Opening"): typeof Internal.ScreenEvent$Opening;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.state.properties.EnumProperty"): typeof Internal.EnumProperty;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.fnc.common.effect.harmful.HexMobEffect"): typeof Internal.HexMobEffect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.particle.ParticleEngine"): typeof Internal.ParticleEngine;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.artifice.curio.ItemCritImmunityAmulet"): typeof Internal.ItemCritImmunityAmulet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.BeaconBlockEntity"): typeof Internal.BeaconBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.screens.worldselection.WorldCreationContext$DimensionsUpdater"): Internal.WorldCreationContext$DimensionsUpdater;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.gui.sync.GuiSyncHolder$GuiSyncHolderLayer"): typeof Internal.GuiSyncHolder$GuiSyncHolderLayer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.templatesystem.rule.blockentity.RuleBlockEntityModifierType"): Internal.RuleBlockEntityModifierType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.map.CustomMapData"): Internal.CustomMapData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.unascribed.fabrication.interfaces.NoHungerAdd"): Internal.NoHungerAdd;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "me.jellysquid.mods.sodium.mixin.features.textures.animations.upload.SpriteContentsAnimatorImplAccessor"): Internal.SpriteContentsAnimatorImplAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.CropBlock"): typeof Internal.CropBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.animatable.GeoBlockEntity"): Internal.GeoBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.boss.enderdragon.phases.DragonSittingAttackingPhase"): typeof Internal.DragonSittingAttackingPhase;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.AbstractSchoolingFish"): typeof Internal.AbstractSchoolingFish;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.enchantments.Soulbound"): typeof Internal.Soulbound;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.view.AttachInfo$Callbacks"): Internal.AttachInfo$Callbacks;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.function.ObjDoubleConsumer"): Internal.ObjDoubleConsumer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.food.ItemClayMug"): typeof Internal.ItemClayMug;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.neutral.EffectDampenMagic"): typeof Internal.EffectDampenMagic;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.unascribed.fabrication.interfaces.RenderingAgeAccess"): Internal.RenderingAgeAccess;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.integration.kubejs.requirements.DimensionRequirementJS"): Internal.DimensionRequirementJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.ritual.ItemWorldCharm"): typeof Internal.ItemWorldCharm;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "vazkii.patchouli.client.book.BookEntry"): typeof Internal.BookEntry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.living.MobSpawnEvent"): typeof Internal.MobSpawnEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.xylonity.knightquest.registry.KnightQuestItems$3"): typeof Internal.KnightQuestItems$3;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.blocks.EMP_Block"): typeof Internal.EMP_Block;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.Menu"): typeof Internal.Menu;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.MinecraftServer$ReloadableResources"): typeof Internal.MinecraftServer$ReloadableResources;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.core.IngredientKJS"): Internal.IngredientKJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.synth.NormalNoise"): typeof Internal.NormalNoise;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.LargeDripstoneFeature"): typeof Internal.LargeDripstoneFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.analysis.SymbolUsage$VariableCounts"): typeof Internal.SymbolUsage$VariableCounts;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.starfish_studios.bbb.block.IronFenceBlock"): typeof Internal.IronFenceBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.floats.FloatConsumer"): Internal.FloatConsumer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.nbt.TagVisitor"): Internal.TagVisitor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.util.MachineShape"): typeof Internal.MachineShape;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.server.command.EnumArgument$Info$Template"): typeof Internal.EnumArgument$Info$Template;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.quest.Quest"): typeof Internal.Quest;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.ints.Int2ReferenceFunction"): Internal.Int2ReferenceFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "kotlinx.serialization.descriptors.SerialDescriptor"): Internal.SerialDescriptor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.RenderTask"): typeof Internal.RenderTask;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.blaze3d.shaders.Effect"): Internal.Effect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.core.ItemStackKJS"): Internal.ItemStackKJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.pools.ListPoolElement"): typeof Internal.ListPoolElement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.monster.AbstractSkeleton"): typeof Internal.AbstractSkeleton;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.item.CustomArmorPostRender"): Internal.CustomArmorPostRender;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.RenderType$CompositeState"): typeof Internal.RenderType$CompositeState;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.configurations.FeatureConfiguration"): Internal.FeatureConfiguration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.GameRules$GameRuleTypeVisitor"): Internal.GameRules$GameRuleTypeVisitor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.render.SuperByteBufferCache$Compartment"): typeof Internal.SuperByteBufferCache$Compartment;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.client.IScreenProvider"): Internal.IScreenProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.bytes.ByteArrayList"): typeof Internal.ByteArrayList;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.sorcery.ItemModifierBook"): typeof Internal.ItemModifierBook;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.tiles.BlackboardBlockTile"): typeof Internal.BlackboardBlockTile;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.item.ItemTossEvent"): typeof Internal.ItemTossEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.network.NetworkEvent$ClientCustomPayloadEvent"): typeof Internal.NetworkEvent$ClientCustomPayloadEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.prunoideae.powerfuljs.capabilities.forge.CapabilityItem$InsertItem"): Internal.CapabilityItem$InsertItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.lodestar.lodestone.systems.particle.world.behaviors.BillboardParticleBehavior"): typeof Internal.BillboardParticleBehavior;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.items.IItemHandlerModifiable"): Internal.IItemHandlerModifiable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.food.FoodData"): typeof Internal.FoodData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.util.ColorStateList"): typeof Internal.ColorStateList;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.PacketListener"): Internal.PacketListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.dnd.DropTarget"): typeof Internal.DropTarget;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.util.LazyOptional"): typeof Internal.LazyOptional;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.beneficial.EffectWindWall"): typeof Internal.EffectWindWall;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.objects.ObjectIterator"): Internal.ObjectIterator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.brigadier.builder.LiteralArgumentBuilder"): typeof Internal.LiteralArgumentBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.textures.ForgeTextureMetadata$Serializer"): typeof Internal.ForgeTextureMetadata$Serializer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.event.EventResult$Type"): typeof Internal.EventResult$Type;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.almostreliable.ponderjs.PonderRegistryEventJS"): typeof Internal.PonderRegistryEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.neutral.SimpleNeutralEffect"): typeof Internal.SimpleNeutralEffect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.RepeaterBlock"): typeof Internal.RepeaterBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.runtime.config.IJeiConfigValueSerializer$IDeserializeResult"): Internal.IJeiConfigValueSerializer$IDeserializeResult;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.runtime.IIngredientFilter"): Internal.IIngredientFilter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "Tavi007.ElementalCombat.enchantments.ElementalWeaponEnchantment$Type"): typeof Internal.ElementalWeaponEnchantment$Type;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.ingredients.ITypedIngredient"): Internal.ITypedIngredient;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.joml.Matrix3f"): typeof Matrix3f;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.loot.LootTable$Builder"): typeof Internal.LootTable$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.trunkplacers.GiantTrunkPlacer"): typeof Internal.GiantTrunkPlacer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "me.fengming.renderjs.events.level.RenderEntityEventJS$After"): typeof Internal.RenderEntityEventJS$After;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.block.BlockRenderDispatcher"): typeof Internal.BlockRenderDispatcher;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$ItemUseContext"): typeof Internal.ContextUtils$ItemUseContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.artifice.RunicTorchBlock"): typeof Internal.RunicTorchBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.synchronization.ArgumentTypeInfo"): Internal.ArgumentTypeInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.synchronization.SingletonArgumentInfo$Template"): typeof Internal.SingletonArgumentInfo$Template;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.arguments.EntityArgument"): typeof Internal.EntityArgument;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.starfish_studios.bbb.block.SupportBlock"): typeof Internal.SupportBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.monster.warden.WardenSpawnTracker"): typeof Internal.WardenSpawnTracker;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.level.gen.filter.biome.BiomeFilter"): Internal.BiomeFilter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.concurrent.Executor"): Internal.Executor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.core.ItemEntityKJS"): Internal.ItemEntityKJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.doubles.DoubleCollection"): Internal.DoubleCollection;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.CameraType"): typeof Internal.CameraType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.items.Tidal_Claws"): typeof Internal.Tidal_Claws;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.items.JarItem"): typeof Internal.JarItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.keksuccino.fancymenu.util.rendering.AspectRatio"): typeof Internal.AspectRatio;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.runtime.IJeiFeatures"): Internal.IJeiFeatures;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.border.BorderChangeListener"): Internal.BorderChangeListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.NetherSproutsBlock"): typeof Internal.NetherSproutsBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.time.Period"): typeof Internal.Period;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.recipe.IFocusGroup"): Internal.IFocusGroup;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.enchantments.auras.Aura"): typeof Internal.Aura;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.regex.MatchResult"): Internal.MatchResult;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.authlib.yggdrasil.response.KeyPairResponse"): typeof Internal.KeyPairResponse;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.regex.Pattern"): typeof Internal.Pattern;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.EntityRenderersEvent$AddLayers"): typeof Internal.EntityRenderersEvent$AddLayers;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.arguments.ArgumentSignatures"): typeof Internal.ArgumentSignatures;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.world.ModifiableStructureInfo"): typeof Internal.ModifiableStructureInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.block.model.ItemOverride"): typeof Internal.ItemOverride;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.level.feature.TubeWormFeature"): typeof Internal.TubeWormFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.artifice.FluidJugBlock"): typeof Internal.FluidJugBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.loot.functions.CopyNameFunction$NameSource"): typeof Internal.CopyNameFunction$NameSource;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.lifecycle.ViewModelStore"): typeof Internal.ViewModelStore;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.DyeableLeatherItem"): Internal.DyeableLeatherItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.level.ServerPlayerGameMode"): typeof Internal.ServerPlayerGameMode;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "snownee.jade.api.ui.IElementHelper"): Internal.IElementHelper;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.blocks.Mechanical_fusion_Anvil"): typeof Internal.Mechanical_fusion_Anvil;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.datatransfer.DataFlavor"): typeof Internal.DataFlavor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundRemoveEntitiesPacket"): typeof Internal.ClientboundRemoveEntitiesPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.optics.Optic"): Internal.Optic;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.spells.targeting.SpellSource"): typeof Internal.SpellSource;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.living.LivingExperienceDropEvent"): typeof Internal.LivingExperienceDropEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.irisshaders.iris.compat.sodium.mixin.vertex_format.CommonVertexAttributeAccessor"): Internal.CommonVertexAttributeAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.synchronization.ArgumentTypeInfo$Template"): Internal.ArgumentTypeInfo$Template;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.misc.CustomStatBuilder"): typeof Internal.CustomStatBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.Realms32BitWarningStatus"): typeof Internal.Realms32BitWarningStatus;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.network.HandshakeMessages$S2CRegistry"): typeof Internal.HandshakeMessages$S2CRegistry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.irisshaders.iris.mixin.LevelRendererAccessor"): net.irisshaders.iris.mixin.LevelRendererAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.architectury.extensions.injected.InjectedRegistryEntryExtension"): Internal.InjectedRegistryEntryExtension;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.kinds.App"): Internal.App;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jozufozu.flywheel.event.GatherContextEvent"): typeof Internal.GatherContextEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.extensions.IForgePoseStack"): Internal.IForgePoseStack;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.fluids.SoftFluid$TintMethod"): typeof Internal.SoftFluid$TintMethod;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.registries.RegistryObject"): typeof Internal.RegistryObject;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.BrushItem"): typeof Internal.BrushItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.function.DoubleBinaryOperator"): Internal.DoubleBinaryOperator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.manaweaving.ItemManaweaveBottle"): typeof Internal.ItemManaweaveBottle;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.events.BiomeSpawnsEventJS"): typeof Internal.BiomeSpawnsEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.maven.artifact.resolver.filter.ArtifactFilter"): Internal.ArtifactFilter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundBundlePacket"): typeof Internal.ClientboundBundlePacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.unascribed.fabrication.interfaces.ZombImmunizableEntity"): Internal.ZombImmunizableEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.GlowInkSacItem"): typeof Internal.GlowInkSacItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.horse.Markings"): typeof Internal.Markings;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.api.component.IMachineComponentTemplate"): Internal.IMachineComponentTemplate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.entities.construct.ai.ConstructTask"): typeof Internal.ConstructTask;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.integration.kubejs.requirements.FluidPerTickRequirementJS"): Internal.FluidPerTickRequirementJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.BlockColumnFeature"): typeof Internal.BlockColumnFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.items.Bulwark_of_the_flame"): typeof Internal.Bulwark_of_the_flame;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "cpw.mods.jarhandling.SecureJar$ModuleDataProvider"): Internal.SecureJar$ModuleDataProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.projectile.AbstractArrow"): typeof Internal.AbstractArrow;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.core.BlockStateKJS"): Internal.BlockStateKJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.nbt.TagType"): Internal.TagType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.tree.BreakStatement"): typeof Internal.BreakStatement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.ListIterator"): Internal.ListIterator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.electronwill.nightconfig.core.CommentedConfig$Entry"): Internal.CommentedConfig$Entry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.components.LerpingBossEvent"): typeof Internal.LerpingBossEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.client.particle.ParticleCloud$CloudData"): typeof Internal.ParticleCloud$CloudData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.VoidStartPlatformFeature"): typeof Internal.VoidStartPlatformFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.SaddleItem"): typeof Internal.SaddleItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.SnowAndFreezeFeature"): typeof Internal.SnowAndFreezeFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "pie.ilikepiefoo.compat.jei.events.RegisterGUIHandlersEventJS"): typeof Internal.RegisterGUIHandlersEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.LinkedList"): typeof Internal.LinkedList;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.tree.Symbol"): typeof icyllis.arc3d.compiler.tree.Symbol;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.templatesystem.LavaSubmergedBlockProcessor"): typeof Internal.LavaSubmergedBlockProcessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.upgrade.MachineUpgrade"): typeof Internal.MachineUpgrade;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.enchantments.base.ModifierEnchantment"): typeof Internal.ModifierEnchantment;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "top.theillusivec4.curios.api.CuriosCapability"): typeof CuriosCapabilities;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundKeepAlivePacket"): typeof Internal.ClientboundKeepAlivePacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.Locale$Category"): typeof Internal.Locale$Category;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.starfish_studios.bbb.block.WeatheringCopperLayerBlock"): typeof Internal.WeatheringCopperLayerBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.ponder.element.InputWindowElement"): typeof PonderInputWindowElement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundRecipeBookChangeSettingsPacket"): typeof Internal.ServerboundRecipeBookChangeSettingsPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.lang.AutoCloseable"): Internal.AutoCloseable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2backpack.content.quickswap.armorswap.ArmorSetSwap"): typeof Internal.ArmorSetSwap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.item.QuestBarrierBlockItem"): typeof Internal.QuestBarrierBlockItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.concurrent.ConcurrentHashMap$KeySetView"): typeof Internal.ConcurrentHashMap$KeySetView;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.state.BlockState"): typeof Internal.BlockState;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.math.MathContext"): typeof com.ibm.icu.math.MathContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.bytes.Byte2LongFunction"): Internal.Byte2LongFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.effects.EffectStun"): typeof Internal.EffectStun;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.network.messages.to_server.InscriptionTableSetModifierMessage"): typeof Internal.InscriptionTableSetModifierMessage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "pie.ilikepiefoo.compat.jade.builder.ClientExtensionProviderBuilder"): typeof Internal.ClientExtensionProviderBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.blaze3d.vertex.Tesselator"): typeof Tesselator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.SpeakerBlock"): typeof Internal.SpeakerBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.graphics.Bitmap$Format"): typeof Internal.Bitmap$Format;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.client.particle.ParticleHandler$3"): typeof Internal.ParticleHandler$3;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.electronwill.nightconfig.core.utils.UnmodifiableConfigWrapper"): typeof Internal.UnmodifiableConfigWrapper;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.core.animatable.GeoAnimatable"): Internal.GeoAnimatable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.common.collect.RegularImmutableMap"): typeof Internal.RegularImmutableMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.longs.Long2ObjectMap$Entry"): Internal.Long2ObjectMap$Entry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.ItemWandOfCloning"): typeof Internal.ItemWandOfCloning;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2library.serial.recipe.AbstractShapelessRecipe$Serializer"): typeof Internal.AbstractShapelessRecipe$Serializer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.gui.sync.GuiSyncLocalLayer"): typeof Internal.GuiSyncLocalLayer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.api.IQuiverEntity"): Internal.IQuiverEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.events.BuildBrainProviderEventJS"): typeof Internal.BuildBrainProviderEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.entities.attributes.AttributePerceptionDistance"): typeof Internal.AttributePerceptionDistance;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.player.PlayerEvent$Clone"): typeof Internal.PlayerEvent$Clone;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.Aquifer$FluidStatus"): typeof Internal.Aquifer$FluidStatus;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "me.jellysquid.mods.sodium.client.model.color.interop.BlockColorsExtended"): Internal.BlockColorsExtended;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.attributes.Attribute"): typeof Internal.Attribute;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.blocks.Sandstone_Ignite_Trap"): typeof Internal.Sandstone_Ignite_Trap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.state.properties.PistonType"): typeof Internal.PistonType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.common.reflect.TypeToken"): typeof Internal.TypeToken;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbxmodcompat.ftbchunks.kubejs.BeforeEventJS"): typeof Internal.BeforeEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.EndermanSkullBlock"): typeof Internal.EndermanSkullBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.IceSpikeFeature"): typeof Internal.IceSpikeFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "kotlin.jvm.internal.markers.KMappedMarker"): Internal.KMappedMarker;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.worldgen.ItemWakebloom"): typeof Internal.ItemWakebloom;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.living.vanilla.DonkeyJSBuilder"): typeof Internal.DonkeyJSBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.bytes.Byte2DoubleFunction"): Internal.Byte2DoubleFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.level.feature.FloatingOrbFeature"): typeof Internal.FloatingOrbFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.flag.FeatureFlag"): typeof Internal.FeatureFlag;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.Hashtable"): typeof Internal.Hashtable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.PiglinWallSkullBlock"): typeof Internal.PiglinWallSkullBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.sounds.Music"): typeof Internal.Music;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "snownee.jade.api.EntityAccessor"): snownee.jade.api.EntityAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.rhino.IdEnumerationIterator"): Internal.IdEnumerationIterator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.server.item.ItemEarthboreGauntlet"): typeof Internal.ItemEarthboreGauntlet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.electronwill.nightconfig.core.UnmodifiableCommentedConfig$Entry"): Internal.UnmodifiableCommentedConfig$Entry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.keksuccino.fancymenu.mixin.mixins.common.client.IMixinMinecraft"): de.keksuccino.fancymenu.mixin.mixins.common.client.IMixinMinecraft;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.living.vanilla.GhastJSBuilder"): typeof Internal.GhastJSBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.GpuTexture"): typeof Internal.GpuTexture;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.resources.model.UnbakedModel"): Internal.UnbakedModel;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.DoormatBlock"): typeof Internal.DoormatBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.beneficial.EffectInstantMana"): typeof Internal.EffectInstantMana;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.LecternBlock"): typeof Internal.LecternBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.chat.ChatTypeDecoration"): typeof Internal.ChatTypeDecoration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.monster.piglin.Piglin"): typeof Internal.Piglin;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.DebugStickItem"): typeof Internal.DebugStickItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.AxeItem"): typeof Internal.AxeItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundUseItemOnPacket"): typeof Internal.ServerboundUseItemOnPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.syncher.EntityDataSerializer$1"): typeof Internal.EntityDataSerializer$1;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ScreenEvent$RenderInventoryMobEffects"): typeof Internal.ScreenEvent$RenderInventoryMobEffects;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.CrankBlock"): typeof Internal.CrankBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.entities.construct.ConstructMaterial"): typeof Internal.ConstructMaterial;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.ints.Int2IntMap"): Internal.Int2IntMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.BellBlock"): typeof Internal.BellBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.common.collect.ImmutableSet$Builder"): typeof Internal.ImmutableSet$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.beans.PropertyChangeEvent"): typeof Internal.PropertyChangeEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.Event"): typeof Internal.Event;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.SnifferEggBlock"): typeof Internal.SnifferEggBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.text.DisplayContext$Type"): typeof Internal.DisplayContext$Type;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.keksuccino.konkrete.events.ScreenMouseClickedEvent"): typeof Internal.ScreenMouseClickedEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.monster.Pillager"): typeof Internal.Pillager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.async.AsyncLoggerConfig$Builder"): typeof Internal.AsyncLoggerConfig$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.util.math.base.Facing"): typeof Internal.Facing;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.fluids.ForgeFlowingFluid"): typeof Internal.ForgeFlowingFluid;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.templatesystem.RandomBlockStateMatchTest"): typeof Internal.RandomBlockStateMatchTest;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.floats.Float2IntFunction"): Internal.Float2IntFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.objects.Object2ObjectFunction"): Internal.Object2ObjectFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.harmful.EffectManaBurn"): typeof Internal.EffectManaBurn;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.api.component.IMachineComponentManager"): Internal.IMachineComponentManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.inventory.CraftingContainer"): Internal.CraftingContainer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.longs.LongList"): Internal.LongList;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.extensions.common.IClientItemExtensions$FontContext"): typeof Internal.IClientItemExtensions$FontContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.Products$P7"): typeof Internal.Products$P7;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.dmnr.common.effects.beneficial.ElytraMobEffect"): typeof Internal.ElytraMobEffect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.extensions.IForgeAdvancementBuilder"): Internal.IForgeAdvancementBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.api.machine.MachineAppearanceProperty"): typeof Internal.MachineAppearanceProperty;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.ToolAction"): typeof Internal.ToolAction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "me.jellysquid.mods.sodium.client.render.texture.SpriteContentsExtended"): Internal.SpriteContentsExtended;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.inventory.DataSlot"): typeof Internal.DataSlot;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.brigadier.suggestion.SuggestionProvider"): Internal.SuggestionProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.FishingRodItem"): typeof Internal.FishingRodItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.joml.Vector4d"): typeof Internal.Vector4d;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ScreenEvent$MouseButtonReleased$Pre"): typeof Internal.ScreenEvent$MouseButtonReleased$Pre;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.upgrade.RecipeModifier"): typeof Internal.RecipeModifier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.eventbus.api.GenericEvent"): typeof Internal.GenericEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.function.IntConsumer"): Internal.IntConsumer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.joml.Matrix3dc"): Internal.Matrix3dc;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.player.PlayerInteractEvent$EntityInteract"): typeof Internal.PlayerInteractEvent$EntityInteract;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "top.theillusivec4.curios.api.type.capability.ICuriosItemHandler"): Internal.ICuriosItemHandler;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.lodestar.lodestone.systems.particle.world.behaviors.LodestoneParticleBehavior"): Internal.LodestoneParticleBehavior;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbxmodcompat.ftbquests.kubejs.CustomTaskEventJS"): typeof Internal.CustomTaskEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.util.Function6"): Internal.Function6;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.living.LivingGetProjectileEvent"): typeof Internal.LivingGetProjectileEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.RenderTooltipEvent"): typeof Internal.RenderTooltipEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.EndLampBlock"): typeof Internal.EndLampBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.chunk.PalettedContainer$Strategy"): typeof Internal.PalettedContainer$Strategy;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.gson.LongSerializationPolicy"): typeof Internal.LongSerializationPolicy;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.SnowyDirtBlock"): typeof Internal.SnowyDirtBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.RenderLevelStageEvent$RegisterStageEvent"): typeof Internal.RenderLevelStageEvent$RegisterStageEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.BackendRenderTarget"): typeof Internal.BackendRenderTarget;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.items.ILeftClick"): Internal.ILeftClick;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.function.LongConsumer"): Internal.LongConsumer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.UraniumRodBlock"): typeof Internal.UraniumRodBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.LivingEntity"): typeof Internal.LivingEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.kosmx.playerAnim.api.TransformType"): typeof Internal.TransformType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.npc.AbstractVillager"): typeof Internal.AbstractVillager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.monster.Skeleton"): typeof Internal.Skeleton;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.lwjgl.system.Pointer"): Internal.Pointer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.sensing.NearestLivingEntitySensor"): typeof Internal.NearestLivingEntitySensor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "snownee.jade.api.Accessor"): Internal.Accessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.HoneyBottleItem"): typeof Internal.HoneyBottleItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.particles.emitter.EmitterData"): typeof Internal.EmitterData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.Vector"): typeof Internal.Vector;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.beans.PropertyChangeListener"): Internal.PropertyChangeListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.settings.KeyModifier"): typeof Internal.KeyModifier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.living.LivingEquipmentChangeEvent"): typeof Internal.LivingEquipmentChangeEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexthe666.citadel.item.ItemCitadelDebug"): typeof Internal.ItemCitadelDebug;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.gui.chest.ChestMenuSlot"): typeof Internal.ChestMenuSlot;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.treedecorators.AttachedToLeavesDecorator"): typeof Internal.AttachedToLeavesDecorator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.shorts.ShortUnaryOperator"): Internal.ShortUnaryOperator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.entities.nonliving.entityjs.ArrowEntityJS"): typeof Internal.ArrowEntityJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.crafting.craft.CustomCraftRecipeBuilder"): typeof Internal.CustomCraftRecipeBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.entities.living.entityjs.MobEntityJS"): typeof Internal.MobEntityJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.gui.sync.GuiSyncGlobalLayer"): typeof Internal.GuiSyncGlobalLayer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.core.misc.IHoldingPlayerExtension"): Internal.IHoldingPlayerExtension;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.gui.integration.ScreenEventListener"): typeof Internal.ScreenEventListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.RenderType$OutlineProperty"): typeof Internal.RenderType$OutlineProperty;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.typings.desc.TypeDescJS"): Internal.TypeDescJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.impl.crafting.AbstractRecipeBuilder"): typeof Internal.AbstractRecipeBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.render.SuperRenderTypeBuffer"): typeof Internal.SuperRenderTypeBuffer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundKeepAlivePacket"): typeof Internal.ServerboundKeepAlivePacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.multiplayer.chat.report.ChatReportBuilder$ChatReport"): typeof Internal.ChatReportBuilder$ChatReport;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.ticks.ContainerSingleItem"): Internal.ContainerSingleItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbxmodcompat.ftbquests.kubejs.FTBQuestsKubeJSTeamDataWrapper"): typeof Internal.FTBQuestsKubeJSTeamDataWrapper;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.TypeRewriteRule"): Internal.TypeRewriteRule;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.api.machine.ICustomMachine"): Internal.ICustomMachine;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jtorleonstudios.libraryferret.blocks.Blocks$5"): typeof Internal.Blocks$5;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.loot.predicates.LootItemCondition$Builder"): Internal.LootItemCondition$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.shorts.Short2ObjectFunction"): Internal.Short2ObjectFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.extensions.IForgeItemStack"): Internal.IForgeItemStack;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.artifice.charms.ItemCancelDrownCharm"): typeof Internal.ItemCancelDrownCharm;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbxmodcompat.ftbquests.kubejs.FTBQuestsKubeJSTeamData"): typeof Internal.FTBQuestsKubeJSTeamData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.bytes.ByteCollection"): Internal.ByteCollection;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.Collections$SynchronizedMap"): typeof Internal.Collections$SynchronizedMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.time.ZonedDateTime"): typeof Internal.ZonedDateTime;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.shorts.Short2ByteFunction"): Internal.Short2ByteFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.tree.ConditionalExpression"): typeof Internal.ConditionalExpression;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.yungnickyoung.minecraft.yungsapi.world.structure.YungJigsawStructure"): typeof Internal.YungJigsawStructure;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.ProjectileWeaponItem"): typeof Internal.ProjectileWeaponItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.biome.AmbientMoodSettings"): typeof Internal.AmbientMoodSettings;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.effects.EffectBlazing_Brand"): typeof Internal.EffectBlazing_Brand;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.GeometryProcessor$ProgramImpl"): typeof Internal.GeometryProcessor$ProgramImpl;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.heightproviders.BiasedToBottomHeight"): typeof Internal.BiasedToBottomHeight;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ClientPlayerNetworkEvent"): typeof Internal.ClientPlayerNetworkEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.bettercombat.api.WeaponAttributes$HitBoxShape"): typeof Internal.WeaponAttributes$HitBoxShape;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "vazkii.patchouli.client.book.BookContents"): typeof Internal.BookContents;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2backpack.content.click.VanillaQuickInsert"): Internal.VanillaQuickInsert;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.platform.forge.IngredientForgeHelper"): typeof Internal.IngredientForgeHelper;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.enchantment.SwiftSneakEnchantment"): typeof Internal.SwiftSneakEnchantment;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.FrameBlock"): typeof Internal.FrameBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.player.PlayerEvent$StopTracking"): typeof Internal.PlayerEvent$StopTracking;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.Filter"): Internal.Filter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.frog.Frog"): typeof Internal.Frog;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.AreaEffectCloud"): typeof Internal.AreaEffectCloud;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.Composite"): Internal.Composite;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplateManager"): typeof Internal.StructureTemplateManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundGameEventPacket"): typeof Internal.ClientboundGameEventPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.rhino.mod.util.Object2LongEntry"): typeof Internal.Object2LongEntry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.components.BossHealthOverlay"): typeof Internal.BossHealthOverlay;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.embeddedt.modernfix.forge.registry.DelegateHolder"): Internal.DelegateHolder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.level.feature.GuanoPileFeature"): typeof Internal.GuanoPileFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundPlayerInfoRemovePacket"): typeof Internal.ClientboundPlayerInfoRemovePacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.StructureSet$StructureSelectionEntry"): typeof Internal.StructureSet$StructureSelectionEntry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.core.Holder$Reference$Type"): typeof Internal.Holder$Reference$Type;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.content.schematics.SchematicWorld"): typeof Internal.SchematicWorld;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.multiplayer.ClientChunkCache$Storage"): typeof Internal.ClientChunkCache$Storage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.LevelResource"): typeof Internal.LevelResource;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.NarratorStatus"): typeof Internal.NarratorStatus;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.bossevents.CustomBossEvents"): typeof Internal.CustomBossEvents;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.registry.BuilderBase"): typeof Internal.BuilderBase;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.rhino.Callable"): dev.latvian.mods.rhino.Callable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.unascribed.fabrication.interfaces.TagStrayArrow"): Internal.TagStrayArrow;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.item.ItemBuilder$HurtEnemyContext"): typeof Internal.ItemBuilder$HurtEnemyContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.harmful.EffectEntangle"): typeof Internal.EffectEntangle;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "me.jellysquid.mods.sodium.client.render.chunk.map.ChunkTracker$ChunkEventHandler"): Internal.ChunkTracker$ChunkEventHandler;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.dmnr.common.item.dragonmagearmor.ArchDragonMageArmorItem"): typeof Internal.ArchDragonMageArmorItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.blaze3d.shaders.Program"): typeof Internal.Program;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "kotlin.reflect.KAnnotatedElement"): Internal.KAnnotatedElement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.random.WeightedEntry$IntrusiveBase"): typeof Internal.WeightedEntry$IntrusiveBase;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "me.jellysquid.mods.sodium.mixin.features.textures.animations.tracking.SpriteContentsAnimationAccessor"): Internal.SpriteContentsAnimationAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.horse.ZombieHorse"): typeof Internal.ZombieHorse;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.ThinBoneBlock"): typeof Internal.ThinBoneBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.block.model.BlockElementFace"): typeof Internal.BlockElementFace;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.abdelaziz.canary.common.hopper.NotifyingItemStack"): Internal.NotifyingItemStack;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.block.custom.StairBlockBuilder"): typeof Internal.StairBlockBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.blay09.mods.netherportalfix.mixin.EntityAccessor"): net.blay09.mods.netherportalfix.mixin.EntityAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.kinds.App2"): Internal.App2;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.IntSummaryStatistics"): typeof Internal.IntSummaryStatistics;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.nonliving.BaseNonAnimatableEntityBuilder"): typeof Internal.BaseNonAnimatableEntityBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.longs.Long2ReferenceFunction"): Internal.Long2ReferenceFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.item.creativetab.CreativeTabEvent"): typeof Internal.CreativeTabEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.configurations.NoneFeatureConfiguration"): typeof Internal.NoneFeatureConfiguration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.cerbon.cerbons_api.mixin.multipart_entities.InvokerArrayVoxelShape"): Internal.InvokerArrayVoxelShape;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.enchantments.base.MAEnchantmentBase"): typeof Internal.MAEnchantmentBase;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.player.ChatVisiblity"): typeof Internal.ChatVisiblity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.biome.Climate$ParameterList"): typeof Internal.Climate$ParameterList;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "snownee.jade.impl.Tooltip$Line"): typeof Internal.Tooltip$Line;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.special.KubeJSCraftingRecipe"): Internal.KubeJSCraftingRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.enchantment.QuickChargeEnchantment"): typeof Internal.QuickChargeEnchantment;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.booleans.Boolean2ObjectFunction"): Internal.Boolean2ObjectFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.BrewingStandBlockEntity"): typeof Internal.BrewingStandBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.WaterAnimal"): typeof Internal.WaterAnimal;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.templatesystem.PosRuleTestType"): Internal.PosRuleTestType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.items.EndermanHeadItem"): typeof Internal.EndermanHeadItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.MyceliumBlock"): typeof Internal.MyceliumBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.util.ScheduledEvents"): typeof Internal.ScheduledEvents;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.GameMasterBlock"): Internal.GameMasterBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.util.Lazy$Fast"): typeof Internal.Lazy$Fast;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.monster.SpellcasterIllager$IllagerSpell"): typeof Internal.SpellcasterIllager$IllagerSpell;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.joml.Matrix3x2f"): typeof Internal.Matrix3x2f;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.templatesystem.BlockStateMatchTest"): typeof Internal.BlockStateMatchTest;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.vehicle.AbstractMinecart"): typeof Internal.AbstractMinecart;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.fluids.capability.IFluidHandlerItem"): Internal.IFluidHandlerItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.blockpredicates.WouldSurvivePredicate"): typeof Internal.WouldSurvivePredicate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundRecipePacket$State"): typeof Internal.ClientboundRecipePacket$State;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.scores.criteria.ObjectiveCriteria$RenderType"): typeof Internal.ObjectiveCriteria$RenderType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.core.keyframe.event.data.KeyFrameData"): typeof Internal.KeyFrameData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.extensions.IForgePotion"): Internal.IForgePotion;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.structures.SoulBlackSmithStructure"): typeof Internal.SoulBlackSmithStructure;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.lodestar.lodestone.systems.particle.world.type.AbstractLodestoneParticleType"): typeof Internal.AbstractLodestoneParticleType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.state.properties.RedstoneSide"): typeof Internal.RedstoneSide;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.keksuccino.konkrete.events.ScreenKeyPressedEvent"): typeof Internal.ScreenKeyPressedEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.DeltaFeature"): typeof Internal.DeltaFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.LockBlock"): typeof Internal.LockBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.FlushInfo"): typeof Internal.FlushInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.unascribed.fabrication.interfaces.TickSourceIFrames"): Internal.TickSourceIFrames;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.core.animation.AnimationController$CustomKeyframeHandler"): Internal.AnimationController$CustomKeyframeHandler;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.bettercombat.logic.knockback.ConfigurableKnockback"): Internal.ConfigurableKnockback;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.bettercombat.api.WeaponAttributes$Attack"): typeof Internal.WeaponAttributes$Attack;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.enchantment.FrostWalkerEnchantment"): typeof Internal.FrostWalkerEnchantment;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.doubles.DoubleIterator"): Internal.DoubleIterator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.WorldOptions"): typeof Internal.WorldOptions;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.traderefresh.mixin.VillagerAccessor"): Internal.VillagerAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.templatesystem.BlockIgnoreProcessor"): typeof Internal.BlockIgnoreProcessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.objects.Object2ObjectMap$FastEntrySet"): Internal.Object2ObjectMap$FastEntrySet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.inventory.ItemCombinerMenu"): typeof Internal.ItemCombinerMenu;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.gui.IGuiParent"): Internal.IGuiParent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.RootSystemFeature"): typeof Internal.RootSystemFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.core.animation.Animation"): typeof software.bernie.geckolib.core.animation.Animation;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.chars.Char2IntFunction"): Internal.Char2IntFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.living.entityjs.AnimalEntityJSBuilder"): typeof Internal.AnimalEntityJSBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.component.RecipeComponentBuilder"): typeof Internal.RecipeComponentBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.TorchBlock"): typeof Internal.TorchBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.Optional"): typeof Internal.Optional;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.TallFlowerBlock"): typeof Internal.TallFlowerBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.recipes.IManaweavePattern"): Internal.IManaweavePattern;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.state.BlockBehaviour$BlockStateBase"): typeof Internal.BlockBehaviour$BlockStateBase;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.longs.LongBidirectionalIterable"): Internal.LongBidirectionalIterable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.DensityFunctions$YClampedGradient"): typeof Internal.DensityFunctions$YClampedGradient;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.players.GameProfileCache$GameProfileInfo"): typeof Internal.GameProfileCache$GameProfileInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.brigadier.suggestion.Suggestion"): typeof Internal.Suggestion;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.nonliving.vanilla.EyeOfEnderJSBuilder"): typeof Internal.EyeOfEnderJSBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.gui.sync.GuiSyncHolder"): typeof Internal.GuiSyncHolder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.unascribed.fabrication.mixin.i_woina.old_sheep_shear.AccessorSheepEntity"): Internal.AccessorSheepEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.item.custom.SmithingTemplateItemBuilder"): typeof Internal.SmithingTemplateItemBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.architectury.hooks.level.biome.EffectsProperties"): Internal.EffectsProperties;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.forgespi.locating.ForgeFeature$Bound"): typeof Internal.ForgeFeature$Bound;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.core.Rect2ic"): Internal.Rect2ic;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.CommandBlockEntity$Mode"): typeof Internal.CommandBlockEntity$Mode;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.almostreliable.lootjs.loot.AddAttributesFunction"): typeof Internal.AddAttributesFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.core.AxisCycle"): typeof Internal.AxisCycle;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.FungusBlock"): typeof Internal.FungusBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.amendments.common.block.ToolHookBlock"): typeof Internal.ToolHookBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.SugarCaneBlock"): typeof Internal.SugarCaneBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.math.BigDecimal"): typeof com.ibm.icu.math.BigDecimal;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.bytes.Byte2ByteFunction"): Internal.Byte2ByteFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.yungnickyoung.minecraft.betterjungletemples.mixin.accessor.StructureProcessorAccessor"): com.yungnickyoung.minecraft.betterjungletemples.mixin.accessor.StructureProcessorAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.crafting.FireworkRocketRecipe"): typeof Internal.FireworkRocketRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.graphics.Point"): typeof icyllis.modernui.graphics.Point;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.entity.EntityEventJS"): typeof Internal.EntityEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.yungnickyoung.minecraft.betterdeserttemples.mixin.accessor.ChunkGeneratorStructureStateAccessor"): com.yungnickyoung.minecraft.betterdeserttemples.mixin.accessor.ChunkGeneratorStructureStateAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.lookup.LookupResult"): Internal.LookupResult;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.rhino.mod.util.OrderedCompoundTag"): typeof Internal.OrderedCompoundTag;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.pools.FeaturePoolElement"): typeof Internal.FeaturePoolElement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.blay09.mods.balm.mixin.KeyMappingAccessor"): Internal.KeyMappingAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.text.TimeZoneNames$NameType"): typeof Internal.TimeZoneNames$NameType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.gui.chest.ChestMenuInventoryClickEvent"): typeof Internal.ChestMenuInventoryClickEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.unascribed.fabrication.interfaces.SetPreZombified"): Internal.SetPreZombified;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.effects.EffectAbyssal_Curse"): typeof Internal.EffectAbyssal_Curse;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.event.AWTEventListener"): Internal.AWTEventListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.PageAttributes$PrintQualityType"): typeof Internal.PageAttributes$PrintQualityType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.artifice.ItemArcaneCrown"): typeof Internal.ItemArcaneCrown;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.artifice.ThesisDeskBlock"): typeof Internal.ThesisDeskBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.component.BlockStateComponent"): typeof Internal.BlockStateComponent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.bettercombat.mixin.client.MinecraftClientAccessor"): Internal.MinecraftClientAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.component.MappingRecipeComponent"): typeof Internal.MappingRecipeComponent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.armor.DemonArmorItem"): typeof Internal.DemonArmorItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.floats.FloatBinaryOperator"): Internal.FloatBinaryOperator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$EntityPoseDimensionsContext"): typeof Internal.ContextUtils$EntityPoseDimensionsContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.items.final_fractal"): typeof Internal.final_fractal;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.nbt.IntTag"): typeof Internal.IntTag;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.integration.kubejs.requirements.ExperienceRequirementJS"): Internal.ExperienceRequirementJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.core.Rotations"): typeof Internal.Rotations;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jozufozu.flywheel.light.TickingLightListener"): Internal.TickingLightListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.util.Calendar"): typeof com.ibm.icu.util.Calendar;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.quest.ProgressionMode"): typeof Internal.ProgressionMode;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.entity.PartEntity"): typeof Internal.PartEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.util.Builder"): Internal.Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.particles.parameters.ParticleFloat"): typeof Internal.ParticleFloat;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.placement.SurfaceRelativeThresholdFilter"): typeof Internal.SurfaceRelativeThresholdFilter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.loot.LootDataType"): typeof Internal.LootDataType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.EndIslandFeature"): typeof Internal.EndIslandFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.AbstractSkullBlock"): typeof Internal.AbstractSkullBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.gui.flow.GuiFlow"): typeof Internal.GuiFlow;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.item.SubmarineItem"): typeof Internal.SubmarineItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2backpack.content.quickswap.merged.EnderSwitch"): typeof Internal.EnderSwitch;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.extensions.IForgeBlockGetter"): Internal.IForgeBlockGetter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.monster.Monster"): typeof Internal.Monster;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.navigation.FocusNavigationEvent"): Internal.FocusNavigationEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundMoveVehiclePacket"): typeof Internal.ClientboundMoveVehiclePacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.constructs.parts.arms.ConstructPartShieldArmLeft"): typeof Internal.ConstructPartShieldArmLeft;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.valueproviders.FloatProvider"): typeof Internal.FloatProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "me.jellysquid.mods.sodium.client.model.quad.properties.ModelQuadFacing"): typeof Internal.ModelQuadFacing;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.component.ItemComponents$3"): typeof Internal.ItemComponents$3;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.irisshaders.batchedentityrendering.impl.MemoryTrackingRenderBuffers"): Internal.MemoryTrackingRenderBuffers;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.init.ModParticle$1"): typeof Internal.ModParticle$1;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.tree.DiscardStatement"): typeof Internal.DiscardStatement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.GraphicsDevice$WindowTranslucency"): typeof Internal.GraphicsDevice$WindowTranslucency;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexthe666.citadel.client.event.EventRenderSplashText$Pre"): typeof Internal.EventRenderSplashText$Pre;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.async.AsyncWaitStrategyFactory"): Internal.AsyncWaitStrategyFactory;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.ponder.SceneBuilder$OverlayInstructions"): typeof Internal.SceneBuilder$OverlayInstructions;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.MobBucketItem"): typeof Internal.MobBucketItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.arguments.ResourceOrTagArgument"): typeof Internal.ResourceOrTagArgument;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "snownee.jade.api.view.IServerExtensionProvider"): Internal.IServerExtensionProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ScreenEvent$MouseInput"): typeof Internal.ScreenEvent$MouseInput;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.tree.Swizzle"): typeof Internal.Swizzle;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.loading.json.raw.ModelProperties"): typeof Internal.ModelProperties;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.config.ConfigGroup"): typeof Internal.ConfigGroup;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.entity.IEntityAdditionalSpawnData"): Internal.IEntityAdditionalSpawnData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.LevelVersion"): typeof Internal.LevelVersion;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.items.KeybindUsingArmor"): Internal.KeybindUsingArmor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.HashMap"): typeof Internal.HashMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.living.vanilla.BlazeJSBuilder"): typeof Internal.BlazeJSBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.PowerableMob"): Internal.PowerableMob;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundPongPacket"): typeof Internal.ServerboundPongPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.ImmutableCollections$AbstractImmutableList"): typeof Internal.ImmutableCollections$AbstractImmutableList;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.security.PrivateKey"): Internal.PrivateKey;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2backpack.content.quickswap.scabbard.Scabbard"): typeof Internal.Scabbard;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.ritual.CircleOfPowerBlock"): typeof Internal.CircleOfPowerBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.font.FontManager$Preparation"): typeof Internal.FontManager$Preparation;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.CustomizeGuiOverlayEvent$BossEventProgress"): typeof Internal.CustomizeGuiOverlayEvent$BossEventProgress;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.particle.ParticleEngine$SpriteParticleRegistration"): Internal.ParticleEngine$SpriteParticleRegistration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.event.FocusEvent$Cause"): typeof Internal.FocusEvent$Cause;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.Properties"): typeof Internal.Properties;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.util.Lazy"): net.minecraftforge.common.util.Lazy;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.synth.NormalNoise$NoiseParameters"): typeof Internal.NormalNoise$NoiseParameters;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.lighting.LayerLightEventListener"): Internal.LayerLightEventListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.templatesystem.PosAlwaysTrueTest"): typeof Internal.PosAlwaysTrueTest;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.image.WritableRaster"): typeof Internal.WritableRaster;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.chat.RemoteChatSession$Data"): typeof Internal.RemoteChatSession$Data;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.ChorusFruitItem"): typeof Internal.ChorusFruitItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.extensions.IForgeFont"): Internal.IForgeFont;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.core.PlayerKJS"): Internal.PlayerKJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "Tavi007.ElementalCombat.api.GainDefenseFromEquipmentEvent"): typeof Internal.GainDefenseFromEquipmentEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.time.temporal.Temporal"): Internal.Temporal;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.config.ConfigurationSource"): typeof Internal.ConfigurationSource;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.irisshaders.iris.mixin.texture.TextureAtlasAccessor"): Internal.TextureAtlasAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.stats.StatType"): typeof Internal.StatType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.ItemShelfBlock"): typeof Internal.ItemShelfBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.filters.ItemFilter"): typeof Internal.ItemFilter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.harmful.EffectDisjunction"): typeof Internal.EffectDisjunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.kosmx.playerAnim.impl.IAnimatedPlayer"): Internal.IAnimatedPlayer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "pie.ilikepiefoo.events.EntityEnterChunkEventJS"): typeof Internal.EntityEnterChunkEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.player.InventoryEventJS"): typeof Internal.InventoryEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.modification.ModifyEntityBuilder"): typeof Internal.ModifyEntityBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.view.View$OnClickListener"): Internal.View$OnClickListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.stream.DoubleStream"): Internal.DoubleStream;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.joml.Matrix4x3fc"): Internal.Matrix4x3fc;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "questsadditions.blocks.LootCrateTileEntity"): typeof Internal.LootCrateTileEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.fragment.FragmentTransaction"): typeof Internal.FragmentTransaction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.featuresize.FeatureSizeType"): typeof Internal.FeatureSizeType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.pylon.RechargePylonBlock"): typeof Internal.RechargePylonBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.configurations.CountConfiguration"): typeof Internal.CountConfiguration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.boss.enderdragon.EnderDragon"): typeof Internal.EnderDragon;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.enchantments.staves.SpeedModifier"): typeof Internal.SpeedModifier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.navigation.FlyingPathNavigation"): typeof Internal.FlyingPathNavigation;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.spectator.SpectatorMenu"): typeof Internal.SpectatorMenu;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.brigadier.exceptions.SimpleCommandExceptionType"): typeof Internal.SimpleCommandExceptionType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.RootedDirtBlock"): typeof Internal.RootedDirtBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.multiplayer.ProfileKeyPairManager"): Internal.ProfileKeyPairManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.valueproviders.IntProvider"): typeof Internal.IntProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.block.entity.TaskScreenAuxBlockEntity"): typeof Internal.TaskScreenAuxBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.chat.Style"): typeof Internal.Style;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.PedestalBlock"): typeof Internal.PedestalBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: string): any;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.InputEvent$Key"): typeof Internal.InputEvent$Key;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.embeddedt.modernfix.duck.IChunkGenerator"): Internal.IChunkGenerator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.blaze3d.font.SheetGlyphInfo"): Internal.SheetGlyphInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.gson.JsonSerializationContext"): Internal.JsonSerializationContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.WeightedPressurePlateBlock"): typeof Internal.WeightedPressurePlateBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.enchantment.ArrowInfiniteEnchantment"): typeof Internal.ArrowInfiniteEnchantment;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.telemetry.TelemetryProperty$GameMode"): typeof Internal.TelemetryProperty$GameMode;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.unascribed.fabrication.interfaces.DidJustAbsorp"): Internal.DidJustAbsorp;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.sorcery.SpectralCraftingTableBlock"): typeof Internal.SpectralCraftingTableBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.rituals.RitualBlockPos"): typeof Internal.RitualBlockPos;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.ponder.element.PonderOverlayElement"): typeof Internal.PonderOverlayElement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.maven.artifact.versioning.VersionRange"): typeof Internal.VersionRange;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.architectury.fluid.FluidStack"): typeof dev.architectury.fluid.FluidStack;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.entities.construct.ItemConstructPart"): typeof Internal.ItemConstructPart;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.living.LivingEvent$LivingJumpEvent"): typeof Internal.LivingEvent$LivingJumpEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.shorts.Short2LongFunction"): Internal.Short2LongFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.model.PlayerModel"): typeof Internal.PlayerModel;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.item.OccultGemItem"): typeof Internal.OccultGemItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.stages.StageCreationEvent"): typeof Internal.StageCreationEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.level.feature.config.CoveredBlockBlobConfiguration"): typeof Internal.CoveredBlockBlobConfiguration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.brigadier.context.CommandContextBuilder"): typeof Internal.CommandContextBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.BitSet"): typeof Internal.BitSet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.phys.HitResult"): typeof Internal.HitResult;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundHurtAnimationPacket"): typeof Internal.ClientboundHurtAnimationPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.view.ActionProvider$VisibilityListener"): Internal.ActionProvider$VisibilityListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.loot.entries.SequentialEntry$Builder"): typeof Internal.SequentialEntry$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.blocks.tile.TileEntityWithInventory"): typeof Internal.TileEntityWithInventory;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.util.ConsoleJS"): typeof Internal.ConsoleJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.recipes.crush.CrushingRecipe"): typeof Internal.CrushingRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.border.WorldBorder"): typeof Internal.WorldBorder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.client.particle.RingParticle$EnumRingBehavior"): typeof Internal.RingParticle$EnumRingBehavior;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.DensityFunctions$TwoArgumentSimpleFunction"): Internal.DensityFunctions$TwoArgumentSimpleFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.gui.chest.ChestMenuData"): typeof Internal.ChestMenuData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.ItemDisplayContext"): typeof Internal.ItemDisplayContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.blay09.mods.balm.forge.world.BalmBiomeModifier"): typeof Internal.BalmBiomeModifier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.blocks.PurpurVoidRuneTrapBlock"): typeof Internal.PurpurVoidRuneTrapBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.doubles.Double2ReferenceFunction"): Internal.Double2ReferenceFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.SeaPickleFeature"): typeof Internal.SeaPickleFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.text.DateFormatSymbols"): typeof Internal.DateFormatSymbols;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.booleans.Boolean2IntFunction"): Internal.Boolean2IntFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.core.MinecraftEnvironmentKJS"): Internal.MinecraftEnvironmentKJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbteams.api.TeamManager"): Internal.TeamManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.core.particles.SimpleParticleType"): typeof Internal.SimpleParticleType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "me.jellysquid.mods.sodium.client.buffer.ExtendedVertexFormat"): Internal.ExtendedVertexFormat;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundBlockDestructionPacket"): typeof Internal.ClientboundBlockDestructionPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.living.LivingChangeTargetEvent$ILivingTargetType"): Internal.LivingChangeTargetEvent$ILivingTargetType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.constructs.parts.torso.ConstructPartManaTorso"): typeof Internal.ConstructPartManaTorso;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.TextureStitchEvent"): typeof Internal.TextureStitchEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.CogBlock"): typeof Internal.CogBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.SpawnPlacements$Type"): typeof Internal.SpawnPlacements$Type;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "snownee.jade.gui.JadeFont"): Internal.JadeFont;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.fluid.FluidStackJS"): typeof Internal.FluidStackJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.Map"): Internal.Map;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.serialization.KeyCompressor"): typeof Internal.KeyCompressor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.sounds.SoundEventListener"): Internal.SoundEventListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.Caps$BlendEquationSupport"): typeof Internal.Caps$BlendEquationSupport;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.crafting.RecipeType$2"): typeof Internal.RecipeType$2;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.font.GlyphVector"): typeof Internal.GlyphVector;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.Marker"): org.apache.logging.log4j.Marker;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.ServerFunctionManager$TraceCallbacks"): Internal.ServerFunctionManager$TraceCallbacks;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.integration.kubejs.requirements.DropRequirementJS"): Internal.DropRequirementJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.block.BlockBrokenEventJS"): typeof Internal.BlockBrokenEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.brigadier.context.ParsedCommandNode"): typeof Internal.ParsedCommandNode;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.PresentBlock"): typeof Internal.PresentBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "vazkii.patchouli.common.item.ItemModBook"): typeof Internal.ItemModBook;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.placement.ConcentricRingsStructurePlacement"): typeof Internal.ConcentricRingsStructurePlacement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.scores.Team"): typeof Internal.Team;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.EntityAttributeCreationEvent"): typeof Internal.EntityAttributeCreationEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.registries.RegistryManager"): typeof Internal.RegistryManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundSetCommandBlockPacket"): typeof Internal.ServerboundSetCommandBlockPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.network.messages.to_server.InscriptionTableSetComponentMessage"): typeof Internal.InscriptionTableSetComponentMessage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.font.GlyphJustificationInfo"): typeof Internal.GlyphJustificationInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.Container"): net.minecraft.world.Container;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.finndog.mss.mixins.structures.StructureProcessorAccessor"): com.finndog.mss.mixins.structures.StructureProcessorAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.NoOpFeature"): typeof Internal.NoOpFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ScreenEvent$KeyInput"): typeof Internal.ScreenEvent$KeyInput;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.pathfinder.Target"): typeof Internal.Target;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.tree.Modifiers"): typeof Internal.Modifiers;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.resources.metadata.animation.AnimationMetadataSection"): typeof Internal.AnimationMetadataSection;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.events.ModifyAttributeEventJS"): typeof Internal.ModifyAttributeEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.decoration.BookshelfBlock"): typeof Internal.BookshelfBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.beneficial.EffectBurningRage"): typeof Internal.EffectBurningRage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2backpack.content.tool.IBagTool"): Internal.IBagTool;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.time.format.DecimalStyle"): typeof Internal.DecimalStyle;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.crafting.DecoratedPotRecipe"): typeof Internal.DecoratedPotRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.floats.FloatIterator"): Internal.FloatIterator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.serialization.codecs.RecordCodecBuilder$Instance"): typeof Internal.RecordCodecBuilder$Instance;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.structures.DesertPyramidStructure"): typeof Internal.DesertPyramidStructure;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.franckyi.ibeeditor.mixin.CompoundTagMixin"): Internal.CompoundTagMixin;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2backpack.content.remote.drawer.EnderDrawerItem"): typeof Internal.EnderDrawerItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.syncher.EntityDataSerializer$ForValueType"): Internal.EntityDataSerializer$ForValueType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.sosly.arcaneadditions.effects.harmful.EnragedEffect"): typeof Internal.EnragedEffect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.dnd.DragSourceDropEvent"): typeof Internal.DragSourceDropEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.recipes.manaweaving.ManaweavingPattern"): typeof Internal.ManaweavingPattern;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.living.LivingEvent"): typeof Internal.LivingEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.SignatureValidator"): Internal.SignatureValidator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.RenderBlockScreenEffectEvent"): typeof Internal.RenderBlockScreenEffectEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.KeyMapping"): typeof Internal.KeyMapping;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "Tavi007.ElementalCombat.enchantments.StyleResistanceEnchantment"): typeof Internal.StyleResistanceEnchantment;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.kinds.Functor$Mu"): Internal.Functor$Mu;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ilexiconn.llibrary.server.animation.IAnimatedEntity"): Internal.IAnimatedEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.telemetry.TelemetryProperty"): typeof Internal.TelemetryProperty;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.MoverType"): typeof Internal.MoverType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.bettercombat.api.WeaponAttributes"): typeof Internal.WeaponAttributes;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.doubles.DoubleComparator"): Internal.DoubleComparator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.lifecycle.Lifecycle$State"): typeof Internal.Lifecycle$State;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.foliageplacers.FoliagePlacer"): typeof Internal.FoliagePlacer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.searchtree.SearchRegistry$TreeBuilderSupplier"): Internal.SearchRegistry$TreeBuilderSupplier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.structures.EndCityStructure"): typeof Internal.EndCityStructure;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.longs.LongSpliterator"): Internal.LongSpliterator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.maven.repository.Proxy"): typeof org.apache.maven.repository.Proxy;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ScreenEvent$Render$Pre"): typeof Internal.ScreenEvent$Render$Pre;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.text.UnicodeSet$EntryRange"): typeof Internal.UnicodeSet$EntryRange;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.resources.Resources"): typeof Internal.Resources;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "snownee.jade.api.IJadeProvider"): Internal.IJadeProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.amendments.common.block.WallLanternBlock"): typeof Internal.WallLanternBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.items.Dungeon_Eye.DesertEyeItem"): typeof Internal.DesertEyeItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.items.inventory.SpellInventory"): typeof Internal.SpellInventory;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.entities.construct.ConstructSlot"): typeof Internal.ConstructSlot;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.unascribed.fabrication.interfaces.SetFabricationConfigAware"): Internal.SetFabricationConfigAware;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.CreativeModeTab$Builder"): typeof Internal.CreativeModeTab$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.Dolphin"): typeof Internal.Dolphin;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.lifecycle.Observer"): Internal.Observer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.registries.MissingMappingsEvent$Mapping"): typeof Internal.MissingMappingsEvent$Mapping;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.AbortableIterationConsumer"): Internal.AbortableIterationConsumer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.server.ServerStartedEvent"): typeof Internal.ServerStartedEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.block.entity.BlockEntityInfo"): typeof Internal.BlockEntityInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.StructureStart"): typeof Internal.StructureStart;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.realmsclient.gui.task.DataFetcher$Subscription"): typeof Internal.DataFetcher$Subscription;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.CrashReportDetail"): Internal.CrashReportDetail;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.inventory.StonecutterMenu"): typeof Internal.StonecutterMenu;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.shorts.ShortComparator"): Internal.ShortComparator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.SkullBlock"): typeof Internal.SkullBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$ArrowPlayerContext"): typeof Internal.ContextUtils$ArrowPlayerContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.Display$BlockDisplay$BlockRenderState"): typeof Internal.Display$BlockDisplay$BlockRenderState;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.block.model.BlockElementRotation"): typeof Internal.BlockElementRotation;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.blamejared.controlling.mixin.AccessInputConstantsKey"): Internal.AccessInputConstantsKey;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.AcidicRadrockBlock"): typeof Internal.AcidicRadrockBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.client.painter.Painter"): typeof Internal.Painter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.model.Model"): typeof Internal.Model;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$EntityFallDamageContext"): typeof Internal.ContextUtils$EntityFallDamageContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2backpack.content.drawer.BaseDrawerItem"): Internal.BaseDrawerItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.loot.predicates.ConditionUserBuilder"): Internal.ConditionUserBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.blaze3d.vertex.PoseStack"): typeof Internal.PoseStack;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.rhino.RhinoException"): typeof Internal.RhinoException;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.starfish_studios.bbb.block.BBBLadderBlock"): typeof Internal.BBBLadderBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.objects.AbstractObject2FloatFunction"): typeof Internal.AbstractObject2FloatFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.level.BlockEvent$FarmlandTrampleEvent"): typeof Internal.BlockEvent$FarmlandTrampleEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.ui.Widget"): typeof Internal.Widget;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.core.ImageFilter"): typeof Internal.ImageFilter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.time.temporal.ValueRange"): typeof Internal.ValueRange;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.EnchantedBookItem"): typeof Internal.EnchantedBookItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.fluid.FluidBucketItemBuilder"): typeof Internal.FluidBucketItemBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.fnc.common.item.BlessedBowItem"): typeof Internal.BlessedBowItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.im.InputMethodRequests"): Internal.InputMethodRequests;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.util.Function7"): Internal.Function7;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.DispenserBlock"): typeof Internal.DispenserBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.DaylightDetectorBlockEntity"): typeof Internal.DaylightDetectorBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.misc.mob_container.IMobContainerProvider"): Internal.IMobContainerProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ReputationEventHandler"): Internal.ReputationEventHandler;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.ItemGuideBook"): typeof Internal.ItemGuideBook;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.nbt.CollectionTag"): typeof Internal.CollectionTag;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundContainerSetContentPacket"): typeof Internal.ClientboundContainerSetContentPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.EntityMobGriefingEvent"): typeof Internal.EntityMobGriefingEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.filter.RecipeFilter"): Internal.RecipeFilter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.npc.VillagerDataHolder"): Internal.VillagerDataHolder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.function.ObjIntConsumer"): Internal.ObjIntConsumer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.irisshaders.batchedentityrendering.mixin.CompositeStateAccessor"): Internal.CompositeStateAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.items.ChargeableItem"): typeof Internal.ChargeableItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.NetherWartBlock"): typeof Internal.NetherWartBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.joml.Matrix4fc"): Internal.Matrix4fc;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.screens.worldselection.WorldCreationContext"): typeof Internal.WorldCreationContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.packs.resources.PreparableReloadListener"): Internal.PreparableReloadListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.Typed"): typeof Internal.Typed;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.worldgen.RoadSignFeature$Config"): typeof Internal.RoadSignFeature$Config;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.config.IntConfig"): typeof Internal.IntConfig;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.recipe.advanced.IRecipeManagerPlugin"): Internal.IRecipeManagerPlugin;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "javax.swing.text.StyleConstants"): typeof Internal.StyleConstants;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.ints.IntList"): Internal.IntList;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.goal.Goal"): typeof Internal.Goal;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.core.keyframe.AnimationPoint"): typeof Internal.AnimationPoint;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.mc.mixin.AccessOptions"): Internal.AccessOptions;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.gui.inputs.IJeiInputHandler"): Internal.IJeiInputHandler;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.block.DetectorBlock$Builder"): typeof Internal.DetectorBlock$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.recipe.IRecipeCategoriesLookup"): Internal.IRecipeCategoriesLookup;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.floats.Float2BooleanFunction"): Internal.Float2BooleanFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.fluids.SoftFluidTank"): typeof Internal.SoftFluidTank;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.network.SerializableDataTicket"): typeof Internal.SerializableDataTicket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.effects.EffectMonstrous"): typeof Internal.EffectMonstrous;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.fnc.common.effect.beneficial.PaladinSmiteMobEffect"): typeof Internal.PaladinSmiteMobEffect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.server.item.ItemNagaFangDagger"): typeof Internal.ItemNagaFangDagger;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.blending.Blender"): typeof Internal.Blender;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.common.hash.HashCode"): typeof Internal.HashCode;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.boss.enderdragon.EndCrystal"): typeof Internal.EndCrystal;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.inventory.PlayerEnderChestContainer"): typeof Internal.PlayerEnderChestContainer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.almostreliable.ponderjs.api.ExtendedSceneBuilder"): typeof Internal.ExtendedSceneBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.longs.LongCollection"): Internal.LongCollection;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.blaze3d.platform.IconSet"): typeof Internal.IconSet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.unit.UnitVariables"): Internal.UnitVariables;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.Collections$UnmodifiableMap"): typeof Internal.Collections$UnmodifiableMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.animatable.SingletonGeoAnimatable"): Internal.SingletonGeoAnimatable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.starfish_studios.bbb.block.WoodenLanternBlock"): typeof Internal.WoodenLanternBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.xylonity.knightquest.common.block.ChaliceBlock"): typeof Internal.ChaliceBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.Display$IntInterpolator"): Internal.Display$IntInterpolator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.extensions.IForgeDispensibleContainerItem"): Internal.IForgeDispensibleContainerItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.text.CharacterIterator"): Internal.CharacterIterator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.client.model.ModelDataKey"): typeof Internal.ModelDataKey;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.text.NumberFormat$Style"): typeof Internal.NumberFormat$Style;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.lionfishapi.client.event.EventGetFluidRenderType"): typeof Internal.EventGetFluidRenderType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.SurfaceAllocator"): typeof Internal.SurfaceAllocator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.InputReplacementTransformer$Replacement"): typeof Internal.InputReplacementTransformer$Replacement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundTakeItemEntityPacket"): typeof Internal.ClientboundTakeItemEntityPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.multiplayer.chat.report.ReportEnvironment$Server"): Internal.ReportEnvironment$Server;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.serialization.Dynamic"): typeof Internal.Dynamic;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.GlowSquid"): typeof Internal.GlowSquid;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.templatesystem.rule.blockentity.AppendStatic"): typeof Internal.AppendStatic;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.Instrument"): typeof Internal.Instrument;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.util.Function10"): Internal.Function10;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.material.FogType"): typeof Internal.FogType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.gson.FieldNamingStrategy"): Internal.FieldNamingStrategy;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.font.LineMetrics"): typeof Internal.LineMetrics;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.texture.SpriteContents$FrameInfo"): typeof Internal.SpriteContents$FrameInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.entities.nonliving.entityjs.BaseEntityJS"): typeof Internal.BaseEntityJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.recipes.rituals.RitualRecipeSerializer"): typeof Internal.RitualRecipeSerializer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.types.families.TypeFamily"): Internal.TypeFamily;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.MultiBufferSource$BufferSource"): typeof Internal.MultiBufferSource$BufferSource;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.sounds.Weighted"): Internal.Weighted;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.HangingSignBlockEntity"): typeof Internal.HangingSignBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.image.SampleModel"): typeof Internal.SampleModel;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.level.LevelEvent$Load"): typeof Internal.LevelEvent$Load;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.blockentity.BlockEntityRenderer"): Internal.BlockEntityRenderer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.rhino.ErrorReporter"): Internal.ErrorReporter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.doubles.Double2CharFunction"): Internal.Double2CharFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.brigadier.context.CommandContext"): typeof Internal.CommandContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.TurnTableBlock"): typeof Internal.TurnTableBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.RewriteResult"): typeof Internal.RewriteResult;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.SurfaceRules$SurfaceRule"): Internal.SurfaceRules$SurfaceRule;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.resources.ResourceKey"): typeof Internal.ResourceKey;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.HugeFungusFeature"): typeof Internal.HugeFungusFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.AmethystClusterBlock"): typeof Internal.AmethystClusterBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.tree.ForLoop"): typeof Internal.ForLoop;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.bindings.IngredientWrapper"): Ingredient;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.unascribed.fabrication.mixin.b_utility.lenient_command_suggestions.MixinCommandSource"): Internal.MixinCommandSource;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies"): typeof Internal.ImmutableMultisetGwtSerializationDependencies;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.slf4j.spi.LocationAwareLogger"): org.slf4j.spi.LocationAwareLogger;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.inventory.SmithingMenu"): typeof Internal.SmithingMenu;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.items.Coral_Spear"): typeof Internal.Coral_Spear;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.quest.reward.RewardType$GuiProvider"): Internal.RewardType$GuiProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.extensions.IForgeBlockState"): Internal.IForgeBlockState;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.multiplayer.chat.LoggedChatEvent"): Internal.LoggedChatEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.Products$P2"): typeof Internal.Products$P2;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.map.type.CustomDecorationType"): typeof Internal.CustomDecorationType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.Display$BillboardConstraints"): typeof Internal.Display$BillboardConstraints;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.authlib.minecraft.TelemetryEvent"): Internal.TelemetryEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.script.ScriptManager"): typeof Internal.ScriptManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.component.TimeComponent"): typeof Internal.TimeComponent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.WorldDataConfiguration"): typeof Internal.WorldDataConfiguration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.CollisionGetter"): Internal.CollisionGetter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.shorts.Short2ReferenceFunction"): Internal.Short2ReferenceFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.chunk.ImposterProtoChunk"): typeof Internal.ImposterProtoChunk;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.items.ModernRemantBucket"): typeof Internal.ModernRemantBucket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.graphics.Canvas$VertexMode"): typeof Internal.Canvas$VertexMode;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.util.ReadOnlyStringMap"): Internal.ReadOnlyStringMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundAwardStatsPacket"): typeof Internal.ClientboundAwardStatsPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundRotateHeadPacket"): typeof Internal.ClientboundRotateHeadPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.function.ToDoubleBiFunction"): Internal.ToDoubleBiFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.ModBlockProperties$DisplayStatus"): typeof Internal.ModBlockProperties$DisplayStatus;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.artifice.ItemInfiniteFluidJug"): typeof Internal.ItemInfiniteFluidJug;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.WeepingVinesPlantBlock"): typeof Internal.WeepingVinesPlantBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.FodderBlock"): typeof Internal.FodderBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.BeehiveBlockEntity"): typeof Internal.BeehiveBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.recipes.manaweaving.ManaweavingRecipeSerializer"): typeof Internal.ManaweavingRecipeSerializer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.model.geom.ModelLayerLocation"): typeof Internal.ModelLayerLocation;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.crafting.CustomRecipe"): typeof Internal.CustomRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.interfaces.IInputDisable"): Internal.IInputDisable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.recipe.IRecipeManager"): Internal.IRecipeManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.mixin.StructureManagerAccessor"): com.github.L_Ender.cataclysm.mixin.StructureManagerAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.level.ExplosionEventJS"): typeof Internal.ExplosionEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.util.Calendar$WeekData"): typeof Internal.Calendar$WeekData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jozufozu.flywheel.backend.instancing.blockentity.BlockEntityInstance"): typeof Internal.BlockEntityInstance;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.tree.Literal"): typeof Internal.Literal;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.LevelStorageSource$LevelCandidates"): typeof Internal.LevelStorageSource$LevelCandidates;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.block.model.ItemOverride$Predicate"): typeof Internal.ItemOverride$Predicate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.ritual.ChimeriteCrystalBlock"): typeof Internal.ChimeriteCrystalBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.model.geometry.IGeometryLoader"): Internal.IGeometryLoader;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.forgespi.language.ModFileScanData"): typeof Internal.ModFileScanData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.inventory.MenuConstructor"): Internal.MenuConstructor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.CopperValveBlock"): typeof Internal.CopperValveBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "pie.ilikepiefoo.compat.jei.events.OnRuntimeAvailableEventJS"): typeof Internal.OnRuntimeAvailableEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.horse.AbstractHorse"): typeof Internal.AbstractHorse;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.api.integration.jei.IRecipeHelper"): Internal.IRecipeHelper;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.nbt.ListTag"): typeof Internal.ListTag;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.StonecutterBlock"): typeof Internal.StonecutterBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.level.ServerBossEvent"): typeof Internal.ServerBossEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.yungnickyoung.minecraft.betterdeserttemples.world.state.TempleStateRegion"): typeof Internal.TempleStateRegion;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.npc.VillagerData"): typeof Internal.VillagerData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "lio.playeranimatorapi.data.PlayerParts"): typeof Internal.PlayerParts;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.ints.IntListIterator"): Internal.IntListIterator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.components.AbstractWidget"): typeof Internal.AbstractWidget;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.util.math.box.BoxCorner"): typeof Internal.BoxCorner;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.client.DebugInfoEventJS"): typeof Internal.DebugInfoEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.placement.RandomSpreadStructurePlacement"): typeof Internal.RandomSpreadStructurePlacement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ScreenEvent"): typeof Internal.ScreenEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.advancements.critereon.ContextAwarePredicate"): typeof Internal.ContextAwarePredicate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.GeodeLayerSettings"): typeof Internal.GeodeLayerSettings;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.ticks.TickAccess"): Internal.TickAccess;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.sounds.MusicManager"): typeof Internal.MusicManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.configurations.ColumnFeatureConfiguration"): typeof Internal.ColumnFeatureConfiguration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.artifice.ItemThaumaturgicCompass"): typeof Internal.ItemThaumaturgicCompass;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.RootsBlock"): typeof Internal.RootsBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.GameMasterBlockItem"): typeof Internal.GameMasterBlockItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.telepathicgrunt.tact.mixin.MobEffectInstanceAccessor"): Internal.MobEffectInstanceAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.blaze3d.shaders.Program$Type"): typeof Internal.Program$Type;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.time.format.DateTimeFormatter"): typeof Internal.DateTimeFormatter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.api.requirement.RequirementType"): typeof Internal.RequirementType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.BushBlock"): typeof Internal.BushBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.bytes.ByteComparator"): Internal.ByteComparator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ScreenEvent$Closing"): typeof Internal.ScreenEvent$Closing;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.ItemModelShaper"): typeof Internal.ItemModelShaper;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.item.forge.ItemDestroyedEventJS"): typeof Internal.ItemDestroyedEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.monster.WitherSkeleton"): typeof Internal.WitherSkeleton;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.sensing.Sensor"): typeof Internal.Sensor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.CrashReport"): typeof Internal.CrashReport;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.loot.EntityLootEventJS"): typeof Internal.EntityLootEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.ponder.PonderTag"): typeof Internal.PonderTag;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.templatesystem.StructureProcessorList"): typeof Internal.StructureProcessorList;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.player.EntityArrayList"): typeof Internal.EntityArrayList;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.client.particle.ParticleVanillaCloudExtended$VanillaCloudData"): typeof Internal.ParticleVanillaCloudExtended$VanillaCloudData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.ServerFunctionManager"): typeof Internal.ServerFunctionManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.TierSortingRegistry"): typeof Internal.TierSortingRegistry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.floats.FloatIterable"): Internal.FloatIterable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.GuiGraphics"): typeof Internal.GuiGraphics;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.misc.SoundEventBuilder"): typeof Internal.SoundEventBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.event.GeoRenderEvent"): Internal.GeoRenderEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.WorldData"): Internal.WorldData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.chunk.DataLayer"): typeof Internal.DataLayer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.tileentities.EldrinAltarTile$Stage"): typeof Internal.EldrinAltarTile$Stage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.ui.WidgetLayout$Padding"): typeof Internal.WidgetLayout$Padding;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.FlushInfo$FinishedCallback"): Internal.FlushInfo$FinishedCallback;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.UserStencilSettings"): typeof Internal.UserStencilSettings;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.item.PrehistoricMixtureItem"): typeof Internal.PrehistoricMixtureItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.dmnr.common.item.spellstoring.RingOfCooldownSpellStoringItem"): typeof Internal.RingOfCooldownSpellStoringItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.List"): Internal.List;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ClientPlayerNetworkEvent$LoggingOut"): typeof Internal.ClientPlayerNetworkEvent$LoggingOut;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.nonliving.entityjs.ArrowEntityBuilder"): typeof Internal.ArrowEntityBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.api.integration.jei.DisplayInfoTemplate"): typeof Internal.DisplayInfoTemplate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.misc.PotionBuilder"): typeof Internal.PotionBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.living.MobEffectEvent$Applicable"): typeof Internal.MobEffectEvent$Applicable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.prunoideae.powerfuljs.capabilities.forge.CapabilityForgeEnergy"): typeof Internal.CapabilityForgeEnergy;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.RenderPlayerEvent"): typeof Internal.RenderPlayerEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.packs.metadata.MetadataSectionSerializer"): Internal.MetadataSectionSerializer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.longs.LongComparator"): Internal.LongComparator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundUpdateAdvancementsPacket"): typeof Internal.ClientboundUpdateAdvancementsPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.BelowZeroRetrogen"): typeof Internal.BelowZeroRetrogen;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.worldgen.ItemCloudBottle"): typeof Internal.ItemCloudBottle;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.registry.BuilderType"): typeof Internal.BuilderType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.icon.Icon"): typeof Internal.Icon;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.types.Type$Mu"): typeof Internal.Type$Mu;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.DensityFunction$Visitor"): Internal.DensityFunction$Visitor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.function.DoubleConsumer"): Internal.DoubleConsumer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.gui.drawable.IDrawableBuilder"): Internal.IDrawableBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.floats.FloatArrayList"): typeof Internal.FloatArrayList;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.view.KeyEvent"): typeof icyllis.modernui.view.KeyEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.core.MessageQueue"): typeof Internal.MessageQueue;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.amendments.common.SwingAnimation"): typeof Internal.SwingAnimation;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.artifice.ItemFluidJug"): typeof Internal.ItemFluidJug;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.network.PacketDistributor$PacketTarget"): typeof Internal.PacketDistributor$PacketTarget;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.level.structure.AcidPitStructure"): typeof Internal.AcidPitStructure;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.axolotl.Axolotl$Variant"): typeof Internal.Axolotl$Variant;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.yungnickyoung.minecraft.betterdeserttemples.world.state.TempleStateCache"): typeof Internal.TempleStateCache;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.GrowingPlantBlock"): typeof Internal.GrowingPlantBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.client.model.ExtraModelData"): Internal.ExtraModelData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.tree.FieldAccess"): typeof Internal.FieldAccess;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.events.forge.FireConsumeBlockEvent"): typeof Internal.FireConsumeBlockEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundSectionBlocksUpdatePacket"): typeof Internal.ClientboundSectionBlocksUpdatePacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.CavePaintingBlock"): typeof Internal.CavePaintingBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.ForgeMod$4"): typeof Internal.ForgeMod$4;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.abdelaziz.canary.common.world.ChunkRandomSource"): Internal.ChunkRandomSource;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.living.MobSpawnEvent$PositionCheck"): typeof Internal.MobSpawnEvent$PositionCheck;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.core.CraftingContainerKJS"): Internal.CraftingContainerKJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.SignItem"): typeof Internal.SignItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "Tavi007.ElementalCombat.enchantments.StyleResistanceEnchantment$Type"): typeof Internal.StyleResistanceEnchantment$Type;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.prunoideae.powerfuljs.capabilities.forge.CapabilityFluid$FluidIOItemStack"): Internal.CapabilityFluid$FluidIOItemStack;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.biome.MobSpawnSettings$SpawnerData"): typeof Internal.MobSpawnSettings$SpawnerData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.state.pattern.BlockPattern"): typeof Internal.BlockPattern;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbteams.api.property.TeamProperty"): typeof Internal.TeamProperty;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.sensing.SecondaryPoiSensor"): typeof Internal.SecondaryPoiSensor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.ProjectileImpactEvent$ImpactResult"): typeof Internal.ProjectileImpactEvent$ImpactResult;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.BaleenBoneBlock"): typeof Internal.BaleenBoneBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "lio.playeranimatorapi.data.PlayerPart"): typeof Internal.PlayerPart;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.block.custom.SlabBlockBuilder"): typeof Internal.SlabBlockBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.debug.BeeDebugRenderer"): typeof Internal.BeeDebugRenderer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.configurations.DiskConfiguration"): typeof Internal.DiskConfiguration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.lang.CharSequence"): Internal.CharSequence;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.EndCrystalItem"): typeof Internal.EndCrystalItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.PageAttributes$MediaType"): typeof Internal.PageAttributes$MediaType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.ponder.PonderChapter"): typeof Internal.PonderChapter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2backpack.content.remote.common.StorageContainer"): typeof Internal.StorageContainer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.sensing.AxolotlAttackablesSensor"): typeof Internal.AxolotlAttackablesSensor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.BannerBlockEntity"): typeof Internal.BannerBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.quest.ChapterImage"): typeof Internal.ChapterImage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.FlyingAnimal"): Internal.FlyingAnimal;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.WasteDrumBlock"): typeof Internal.WasteDrumBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.tiles.JarBlockTile"): typeof Internal.JarBlockTile;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.registries.ForgeRegistry"): typeof Internal.ForgeRegistry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.gui.integration.IGuiIntegratedParent"): Internal.IGuiIntegratedParent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.SculkCatalystBlockEntity$CatalystListener"): typeof Internal.SculkCatalystBlockEntity$CatalystListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.yungnickyoung.minecraft.yungsapi.mixin.accessor.StructureTemplatePoolAccessor"): Internal.StructureTemplatePoolAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.Products$P16"): typeof Internal.Products$P16;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.biome.MultiNoiseBiomeSourceParameterList"): typeof Internal.MultiNoiseBiomeSourceParameterList;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.almostreliable.lootjs.loot.action.ModifyLootAction$Callback"): Internal.ModifyLootAction$Callback;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.worldgen.MAWaterFlowerBlock"): typeof Internal.MAWaterFlowerBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.world.ClimateSettingsBuilder"): typeof Internal.ClimateSettingsBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.MarkerManager$Log4jMarker"): typeof Internal.MarkerManager$Log4jMarker;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.PressurePlateBlock"): typeof Internal.PressurePlateBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.living.vanilla.BatJSBuilder"): typeof Internal.BatJSBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.border.BorderStatus"): typeof Internal.BorderStatus;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.armor.CouncilArmorItem"): typeof Internal.CouncilArmorItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.helpers.IJeiHelpers"): Internal.IJeiHelpers;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundCustomChatCompletionsPacket"): typeof Internal.ClientboundCustomChatCompletionsPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.spi.AbstractLogger"): typeof Internal.AbstractLogger;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.bytes.ByteListIterator"): Internal.ByteListIterator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.keksuccino.melody.mixin.mixins.common.client.IMixinSoundManager"): Internal.IMixinSoundManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.gui.drawable.IDrawableStatic"): Internal.IDrawableStatic;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.irisshaders.iris.fantastic.ParticleRenderingPhase"): typeof Internal.ParticleRenderingPhase;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.joml.Matrix4d"): typeof Internal.Matrix4d;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.schema.DynamicRecipeComponent"): typeof Internal.DynamicRecipeComponent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.behavior.LookAtTargetSink"): typeof Internal.LookAtTargetSink;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.RenderGuiEvent$Post"): typeof Internal.RenderGuiEvent$Post;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jozufozu.flywheel.util.transform.Rotate"): Internal.Rotate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.ops.DrawOp"): typeof Internal.DrawOp;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.config.plugins.util.PluginType"): typeof Internal.PluginType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$PartHurtContext"): typeof Internal.ContextUtils$PartHurtContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.concurrent.ScheduledExecutorService"): Internal.ScheduledExecutorService;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.longs.Long2IntFunction"): Internal.Long2IntFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "snownee.jade.api.view.ClientViewGroup"): typeof Internal.ClientViewGroup;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.architectury.event.Event"): dev.architectury.event.Event;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.level.FireworksJS"): typeof Internal.FireworksJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.spi.LoggerRegistry"): typeof Internal.LoggerRegistry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.icon.Drawable"): Internal.Drawable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.slf4j.spi.LoggingEventBuilder"): Internal.LoggingEventBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.capabilities.ForgeCapabilities"): typeof ForgeCapabilities;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.WorldDimensions"): typeof Internal.WorldDimensions;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.BundlerInfo$Bundler"): Internal.BundlerInfo$Bundler;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.recipes.AMRecipeBaseSerializer"): typeof Internal.AMRecipeBaseSerializer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.forgespi.language.IModLanguageProvider$IModLanguageLoader"): Internal.IModLanguageProvider$IModLanguageLoader;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.extensions.IForgeFriendlyByteBuf"): Internal.IForgeFriendlyByteBuf;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.architectury.event.EventActor"): Internal.EventActor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.longs.Long2ObjectFunction"): Internal.Long2ObjectFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.RenderingHints"): typeof Internal.RenderingHints;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.shorts.ShortCollection"): Internal.ShortCollection;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jozufozu.flywheel.util.transform.TStack"): Internal.TStack;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.enchantment.DamageEnchantment"): typeof Internal.DamageEnchantment;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.LidBlockEntity"): Internal.LidBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.LayoutManager"): Internal.LayoutManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.api.component.ISerializableComponent"): Internal.ISerializableComponent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.enchantment.Enchantment"): typeof Internal.Enchantment;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.GlowingAbyssmarineBlock"): typeof Internal.GlowingAbyssmarineBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.manaweaving.ManaweaveProjectorBlock"): typeof Internal.ManaweaveProjectorBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.almostreliable.lootjs.kube.LootEntryWrapper"): typeof LootEntry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ContainerScreenEvent$Render$Background"): typeof Internal.ContainerScreenEvent$Render$Background;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.HasCustomInventoryScreen"): Internal.HasCustomInventoryScreen;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.resources.model.ModelBakery$BakedCacheKey"): typeof Internal.ModelBakery$BakedCacheKey;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.command.ArgumentTypeWrappers"): typeof Internal.ArgumentTypeWrappers;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.abdelaziz.canary.common.block.entity.inventory_change_tracking.InventoryChangeListener"): Internal.InventoryChangeListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.material.LavaFluid"): typeof Internal.LavaFluid;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.multiplayer.PlayerInfo"): typeof Internal.PlayerInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.VolcanicCoreBlock"): typeof Internal.VolcanicCoreBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.stream.Collector"): Internal.Collector;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.item.RadioactiveOnDestroyedBlockItem"): typeof Internal.RadioactiveOnDestroyedBlockItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.projectile.FishingHook"): typeof Internal.FishingHook;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.configurations.DripstoneClusterConfiguration"): typeof Internal.DripstoneClusterConfiguration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.util.CurrencyAmount"): typeof Internal.CurrencyAmount;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.Panda"): typeof Internal.Panda;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.Set"): Internal.Set;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.registries.IForgeRegistryModifiable"): Internal.IForgeRegistryModifiable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.joml.Matrix2f"): typeof Internal.Matrix2f;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.data.DataGenerator"): typeof Internal.DataGenerator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.sorcery.ItemStaff"): typeof Internal.ItemStaff;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.keksuccino.konkrete.events.ScreenCharTypedEvent"): typeof Internal.ScreenCharTypedEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.blockpredicates.MatchingFluidsPredicate"): typeof Internal.MatchingFluidsPredicate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.recipes.IManaweavingRecipe"): Internal.IManaweavingRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.lwjgl.stb.STBTTFontinfo$Buffer"): typeof Internal.STBTTFontinfo$Buffer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.abdelaziz.canary.common.entity.EquipmentEntity$EquipmentTrackingEntity"): Internal.EquipmentEntity$EquipmentTrackingEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundSetPlayerTeamPacket"): typeof Internal.ClientboundSetPlayerTeamPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.SignPostBlock"): typeof Internal.SignPostBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.BackendFormat"): typeof Internal.BackendFormat;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.communi.suggestu.saecularia.caudices.core.block.IBlockWithWorldlyProperties"): Internal.IBlockWithWorldlyProperties;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.ChestBlock"): typeof Internal.ChestBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.text.Format"): typeof Internal.Format;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.chat.SignedMessageChain$Decoder"): Internal.SignedMessageChain$Decoder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.block.predicate.BlockEntityPredicate"): typeof Internal.BlockEntityPredicate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$HurtContext"): typeof Internal.ContextUtils$HurtContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.InteractionHand"): typeof Internal.InteractionHand;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.starfish_studios.bbb.block.properties.ColumnType"): typeof Internal.ColumnType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.gson.TypeAdapter"): typeof Internal.TypeAdapter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.vehicle.MinecartChest"): typeof Internal.MinecartChest;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$LevelAnimalContext"): typeof Internal.ContextUtils$LevelAnimalContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.util.ULocale$Type"): typeof Internal.ULocale$Type;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.time.zone.ZoneOffsetTransitionRule$TimeDefinition"): typeof Internal.ZoneOffsetTransitionRule$TimeDefinition;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.ponder.SceneBuilder$EffectInstructions"): typeof Internal.SceneBuilder$EffectInstructions;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.sniffer.Sniffer"): typeof Internal.Sniffer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.model.HumanoidModel$ArmPose"): typeof Internal.HumanoidModel$ArmPose;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.inventory.StackedContentsCompatible"): Internal.StackedContentsCompatible;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.particle.SingleQuadParticle"): typeof Internal.SingleQuadParticle;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.text.SymbolTable"): Internal.SymbolTable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.StairBlock"): typeof Internal.StairBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.screens.worldselection.WorldOpenFlows"): typeof Internal.WorldOpenFlows;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.ponder.PonderWorld"): typeof Internal.PonderWorld;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.forgespi.locating.IModFile$Type"): typeof Internal.IModFile$Type;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.objects.Object2ObjectMap"): Internal.Object2ObjectMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.ui.WidgetLayout$Vertical"): typeof Internal.WidgetLayout$Vertical;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.extensions.common.IClientFluidTypeExtensions"): Internal.IClientFluidTypeExtensions;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.level.gen.AddWorldgenEventJS"): typeof Internal.AddWorldgenEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "me.jellysquid.mods.sodium.client.model.quad.ModelQuadView"): Internal.ModelQuadView;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.AttachedStemBlock"): typeof Internal.AttachedStemBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.CalibratedSculkSensorBlockEntity"): typeof Internal.CalibratedSculkSensorBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.RegisterItemDecorationsEvent"): typeof Internal.RegisterItemDecorationsEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.saveddata.maps.MapItemSavedData$MapPatch"): typeof Internal.MapItemSavedData$MapPatch;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.floats.FloatPredicate"): Internal.FloatPredicate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.unascribed.fabrication.mixin.c_tweaks.no_sneak_bypass.MixinVibrationListener"): Internal.MixinVibrationListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.LevelSimulatedRW"): Internal.LevelSimulatedRW;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.brutalbosses.world.RegionAwareTE"): Internal.RegionAwareTE;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.blaze3d.systems.RenderSystem"): typeof RenderSystem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "me.Thelnfamous1.bettermobcombat.api.MobAttackStrength"): Internal.MobAttackStrength;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.components.spectator.SpectatorGui"): typeof Internal.SpectatorGui;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.inventory.InventoryMenu"): typeof Internal.InventoryMenu;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.image.RenderedImage"): Internal.RenderedImage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.gui.chest.ChestMenuClickEvent"): typeof Internal.ChestMenuClickEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.server.block.GongBlock$GongPart"): typeof Internal.GongBlock$GongPart;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.ui.ContextMenu"): typeof dev.ftb.mods.ftblibrary.ui.ContextMenu;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.util.ScheduledEvents$ScheduledEvent"): typeof Internal.ScheduledEvents$ScheduledEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.StructureManager"): typeof Internal.StructureManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.recipes.manaweaving.TransmutationRecipeSerializer"): typeof Internal.TransmutationRecipeSerializer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.player.InventoryChangedEventJS"): typeof Internal.InventoryChangedEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.items.Void_Assault_SHoulder_Weapon"): typeof Internal.Void_Assault_SHoulder_Weapon;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.FlyingMob"): typeof Internal.FlyingMob;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.enchantment.TridentRiptideEnchantment"): typeof Internal.TridentRiptideEnchantment;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.player.PlayerChatDecorateEventJS"): typeof Internal.PlayerChatDecorateEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.level.gen.properties.RemoveOresProperties"): typeof Internal.RemoveOresProperties;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.OptionInstance$CycleableValueSet$ValueSetter"): Internal.OptionInstance$CycleableValueSet$ValueSetter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.DoublePlantWithRotationBlock"): typeof Internal.DoublePlantWithRotationBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.recipes.multiblock.block_matchers.RefractionLensBlockMatcher"): typeof Internal.RefractionLensBlockMatcher;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.regex.Matcher"): typeof Internal.Matcher;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.constructs.parts.arms.ConstructPartFluidNozzleRight"): typeof Internal.ConstructPartFluidNozzleRight;
        notifyAll(): void;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.armor.BoneArmorItem"): typeof Internal.BoneArmorItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.Display$ItemDisplay"): typeof Internal.Display$ItemDisplay;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.config.ColorConfig"): typeof Internal.ColorConfig;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "noobanidus.mods.lootr.item.LootrShulkerBlockItem"): typeof Internal.LootrShulkerBlockItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.electronwill.nightconfig.core.UnmodifiableConfig"): Internal.UnmodifiableConfig;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.joml.AxisAngle4d"): typeof Internal.AxisAngle4d;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.configurations.ProbabilityFeatureConfiguration"): typeof Internal.ProbabilityFeatureConfiguration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.transition.Transition"): typeof Internal.Transition;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.util.Function11"): Internal.Function11;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.RebarBlock"): typeof Internal.RebarBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.dmnr.common.item.dragonmagearmor.WildDragonMageArmorItem"): typeof Internal.WildDragonMageArmorItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.prunoideae.powerfuljs.CapabilityBuilder"): typeof Internal.CapabilityBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.inventory.BlastFurnaceMenu"): typeof Internal.BlastFurnaceMenu;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.texture.TextureAtlasSprite"): typeof Internal.TextureAtlasSprite;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.events.EntityModificationEventJS"): typeof Internal.EntityModificationEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.integration.kubejs.requirements.LootTableRequirementJS"): Internal.LootTableRequirementJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.stats.StatsCounter"): typeof Internal.StatsCounter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.text.NumberFormat"): typeof Internal.NumberFormat;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.GeothermalVentBlock"): typeof Internal.GeothermalVentBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "vazkii.patchouli.api.IVariablesAvailableCallback"): Internal.IVariablesAvailableCallback;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.living.entityjs.PathfinderMobBuilder"): typeof Internal.PathfinderMobBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.starfish_studios.bbb.block.AbstractBlockBlock"): typeof Internal.AbstractBlockBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.configurations.SpikeConfiguration"): typeof Internal.SpikeConfiguration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.state.properties.BambooLeaves"): typeof Internal.BambooLeaves;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.texture.SpriteContents$Ticker"): typeof Internal.SpriteContents$Ticker;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.state.properties.BedPart"): typeof Internal.BedPart;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.level.structure.UndergroundCabinStructure"): typeof Internal.UndergroundCabinStructure;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.templatesystem.RuleProcessor"): typeof Internal.RuleProcessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.objects.Reference2ReferenceMap$Entry"): Internal.Reference2ReferenceMap$Entry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.crafting.StonecutterRecipe"): typeof Internal.StonecutterRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.HologramProjectorBlock"): typeof Internal.HologramProjectorBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.placement.PlacementModifier"): typeof Internal.PlacementModifier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.geom.RectangularShape"): typeof Internal.RectangularShape;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.SugarBlock"): typeof Internal.SugarBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.server.block.GongBlock"): typeof Internal.GongBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.InkSacItem"): typeof Internal.InkSacItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.item.custom.ItemArmorTierRegistryEventJS"): typeof Internal.ItemArmorTierRegistryEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.InputEvent"): typeof net.minecraftforge.client.event.InputEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.item.ItemBuilder$NameCallback"): Internal.ItemBuilder$NameCallback;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.components.toasts.Toast$Visibility"): typeof Internal.Toast$Visibility;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.blocks.Altar_Of_Fire_Block"): typeof Internal.Altar_Of_Fire_Block;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.recipe.category.extensions.IExtendableRecipeCategory"): Internal.IExtendableRecipeCategory;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "javax.accessibility.AccessibleEditableText"): Internal.AccessibleEditableText;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.PipelineStateCache"): typeof Internal.PipelineStateCache;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.ItemFrameItem"): typeof Internal.ItemFrameItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.eliotlash.mclib.math.IValue"): Internal.IValue;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.BaseCoralPlantTypeBlock"): typeof Internal.BaseCoralPlantTypeBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "snownee.jade.api.view.EnergyView"): typeof Internal.EnergyView;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.util.MeasureUnit"): typeof Internal.MeasureUnit;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.brutalbosses.entity.IOnProjectileHit"): Internal.IOnProjectileHit;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.ints.Int2BooleanFunction"): Internal.Int2BooleanFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.SimpleRandomSelectorFeature"): typeof Internal.SimpleRandomSelectorFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.Layout"): org.apache.logging.log4j.core.Layout;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.trunkplacers.UpwardsBranchingTrunkPlacer"): typeof Internal.UpwardsBranchingTrunkPlacer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.npc.WanderingTrader"): typeof Internal.WanderingTrader;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.item.ThrownProjectileItem"): typeof Internal.ThrownProjectileItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.brigadier.exceptions.CommandSyntaxException"): typeof Internal.CommandSyntaxException;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.chunk.PalettedContainerRO$PackedData"): typeof Internal.PalettedContainerRO$PackedData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jozufozu.flywheel.mixin.LevelRendererAccessor"): Internal.LevelRendererAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.behavior.SleepInBed"): typeof Internal.SleepInBed;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.lodestar.lodestone.systems.particle.world.type.LodestoneItemCrumbsParticleType"): typeof Internal.LodestoneItemCrumbsParticleType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.placement.RepeatingPlacement"): typeof Internal.RepeatingPlacement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.MobType"): typeof Internal.MobType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.item.MutableArmorTier"): typeof Internal.MutableArmorTier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.sensing.NearestVisibleLivingEntitySensor"): typeof Internal.NearestVisibleLivingEntitySensor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.keksuccino.konkrete.events.ScreenKeyReleasedEvent"): typeof Internal.ScreenKeyReleasedEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.util.math.geo.NormalPlaneF"): typeof Internal.NormalPlaneF;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.fnc.api.smite.SmiteMobEffect"): typeof Internal.SmiteMobEffect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "me.jellysquid.mods.sodium.client.util.sorting.VertexSorters$AbstractVertexSorter"): typeof Internal.VertexSorters$AbstractVertexSorter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.trading.MerchantOffer"): typeof Internal.MerchantOffer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.CreativeModeTab$Output"): Internal.CreativeModeTab$Output;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundContainerClosePacket"): typeof Internal.ClientboundContainerClosePacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "pie.ilikepiefoo.compat.jade.WailaCommonRegistrationEventJS"): typeof Internal.WailaCommonRegistrationEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "kotlin.reflect.KType"): Internal.KType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.recipe.IRecipeCatalystLookup"): Internal.IRecipeCatalystLookup;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.recipe.transfer.IRecipeTransferError$Type"): typeof Internal.IRecipeTransferError$Type;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.NoteBlock"): typeof Internal.NoteBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.JigsawBlockEntity$JointType"): typeof Internal.JigsawBlockEntity$JointType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.joml.Matrix3d"): typeof Internal.Matrix3d;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.constructs.parts.arms.ConstructPartCasterArmLeft"): typeof Internal.ConstructPartCasterArmLeft;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.chunk.ProtoChunk"): typeof Internal.ProtoChunk;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.nbt.NbtAccounter"): typeof Internal.NbtAccounter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.client.MultipartBlockStateGenerator$Part"): typeof Internal.MultipartBlockStateGenerator$Part;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.ints.IntSet"): Internal.IntSet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.NoiseGeneratorSettings"): typeof Internal.NoiseGeneratorSettings;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.util.Function8"): Internal.Function8;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.time.chrono.ChronoPeriod"): Internal.ChronoPeriod;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.packs.repository.RepositorySource"): Internal.RepositorySource;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.stats.ServerStatsCounter"): typeof Internal.ServerStatsCounter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "kotlin.Unit"): typeof kotlin.Unit;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.analysis.SymbolUsage"): typeof Internal.SymbolUsage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.integration.forge.jei.JEISubtypesEventJS"): typeof Internal.JEISubtypesEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.constructs.parts.arms.ConstructPartFishingArmRight"): typeof Internal.ConstructPartFishingArmRight;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.recipe.transfer.IRecipeTransferInfo"): Internal.IRecipeTransferInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.Point"): typeof Internal.Point;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.blocks.DirectionalPoint"): typeof Internal.DirectionalPoint;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.DragonEggBlock"): typeof Internal.DragonEggBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.stateproviders.SimpleStateProvider"): typeof Internal.SimpleStateProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.core.misc.IMapDataPacketExtension"): Internal.IMapDataPacketExtension;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ViewportEvent$ComputeFov"): typeof Internal.ViewportEvent$ComputeFov;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.item.RadiationRemovingFoodItem"): typeof Internal.RadiationRemovingFoodItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.block.IWashable"): Internal.IWashable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.authlib.yggdrasil.YggdrasilAuthenticationService"): typeof Internal.YggdrasilAuthenticationService;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.Fox"): typeof Internal.Fox;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.StringSplitter"): typeof Internal.StringSplitter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.WindVaneBlock"): typeof Internal.WindVaneBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.recipes.crush.CrushingRecipeSerializer"): typeof Internal.CrushingRecipeSerializer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.loot.entries.LootPoolEntryType"): typeof Internal.LootPoolEntryType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.sorcery.SpectralLadderBlock"): typeof Internal.SpectralLadderBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.server.world.feature.structure.FrostmawStructure"): typeof Internal.FrostmawStructure;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.foliageplacers.RandomSpreadFoliagePlacer"): typeof Internal.RandomSpreadFoliagePlacer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.blocks.Sandstone_Poison_Dart_Trap"): typeof Internal.Sandstone_Poison_Dart_Trap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.im.InputContext"): typeof Internal.InputContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.chunk.PalettedContainer"): typeof Internal.PalettedContainer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.core.animatable.instance.AnimatableInstanceCache"): typeof Internal.AnimatableInstanceCache;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.ponder.element.MinecartElement$MinecartConstructor"): Internal.MinecartElement$MinecartConstructor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.living.entityjs.MobEntityJSBuilder"): typeof Internal.MobEntityJSBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.level.ChunkHolder$ChunkLoadingFailure"): Internal.ChunkHolder$ChunkLoadingFailure;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.serialization.DynamicOps"): Internal.DynamicOps;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientGamePacketListener"): Internal.ClientGamePacketListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.events.ObjectProgressEvent"): typeof Internal.ObjectProgressEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.brigadier.tree.RootCommandNode"): typeof Internal.RootCommandNode;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.dnd.DragGestureEvent"): typeof Internal.DragGestureEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.synchronization.brigadier.DoubleArgumentInfo"): typeof Internal.DoubleArgumentInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.block.custom.HorizontalDirectionalBlockBuilder"): typeof Internal.HorizontalDirectionalBlockBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.Bucketable"): Internal.Bucketable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.core.Choreographer$FrameCallback"): Internal.Choreographer$FrameCallback;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.InputEvent$MouseButton$Pre"): typeof Internal.InputEvent$MouseButton$Pre;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.Brain$Provider"): typeof Internal.Brain$Provider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.FocusTraversalPolicy"): typeof Internal.FocusTraversalPolicy;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.level.ChunkDataEvent"): typeof Internal.ChunkDataEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.function.Predicate"): Internal.Predicate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.nick.chimes.block.BambooWindChimeBlock"): typeof Internal.BambooWindChimeBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.model.EntityModel"): typeof Internal.EntityModel;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "pie.ilikepiefoo.events.PlayerCloneEventJS"): typeof Internal.PlayerCloneEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.block.entity.BlockEntityEventCallback"): Internal.BlockEntityEventCallback;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.inventory.BeaconMenu"): typeof Internal.BeaconMenu;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.biome.BiomeGenerationSettings$PlainBuilder"): typeof Internal.BiomeGenerationSettings$PlainBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.ComparatorBlock"): typeof Internal.ComparatorBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.harmful.EffectLacerate"): typeof Internal.EffectLacerate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.config.ResourceConfigValue"): typeof Internal.ResourceConfigValue;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.loot.LootDataManager"): typeof Internal.LootDataManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.inventory.EnchantmentMenu"): typeof Internal.EnchantmentMenu;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jozufozu.flywheel.api.vertex.VertexWriter"): Internal.VertexWriter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.recipes.IRunescribeRecipe"): Internal.IRunescribeRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.screens.recipebook.RecipeCollection"): typeof Internal.RecipeCollection;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.objects.Object2LongFunction"): Internal.Object2LongFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.brigadier.arguments.DoubleArgumentType"): typeof Internal.DoubleArgumentType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.TridentItem"): typeof Internal.TridentItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.gameevent.DynamicGameEventListener"): typeof Internal.DynamicGameEventListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.ponder.SceneBuilder$SpecialInstructions"): typeof Internal.SceneBuilder$SpecialInstructions;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.Display$RenderState"): typeof Internal.Display$RenderState;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.searchtree.SearchRegistry$Key"): typeof Internal.SearchRegistry$Key;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.Nameable"): Internal.Nameable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.food.FoodProperties"): typeof Internal.FoodProperties;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundSeenAdvancementsPacket$Action"): typeof Internal.ServerboundSeenAdvancementsPacket$Action;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.NuclearFurnaceBlock"): typeof Internal.NuclearFurnaceBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.narration.NarrationElementOutput"): Internal.NarrationElementOutput;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.BuiltinTypes"): typeof Internal.BuiltinTypes;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.blockpredicates.NotPredicate"): typeof Internal.NotPredicate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.slf4j.Log4jMarker"): typeof Internal.Log4jMarker;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.items.INoSoulsRecharge"): Internal.INoSoulsRecharge;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.DoublePlantBlock"): typeof Internal.DoublePlantBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "vazkii.patchouli.client.book.gui.GuiBookEntry"): typeof Internal.GuiBookEntry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.registries.NewRegistryEvent"): typeof Internal.NewRegistryEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.base.IManaRepairable"): Internal.IManaRepairable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.util.Supplier"): org.apache.logging.log4j.util.Supplier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "vazkii.patchouli.client.book.gui.GuiBook"): typeof Internal.GuiBook;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.biome.Climate$Parameter"): typeof Internal.Climate$Parameter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.templatesystem.BlockRotProcessor"): typeof Internal.BlockRotProcessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.electronwill.nightconfig.core.CommentedConfig"): Internal.CommentedConfig;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundCommandSuggestionPacket"): typeof Internal.ServerboundCommandSuggestionPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.multiplayer.chat.report.ReportingContext"): typeof Internal.ReportingContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.blay09.mods.kuma.mixin.KeyMappingAccessor"): net.blay09.mods.kuma.mixin.KeyMappingAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.entity.util.DarknessIncarnateUserAccessor"): Internal.DarknessIncarnateUserAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.GeodeCrackSettings"): typeof Internal.GeodeCrackSettings;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.SculkShriekerBlock"): typeof Internal.SculkShriekerBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.blaze3d.platform.Window"): typeof com.mojang.blaze3d.platform.Window;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.server.ServerStoppingEvent"): typeof Internal.ServerStoppingEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.GrindstoneBlock"): typeof Internal.GrindstoneBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "me.fengming.renderjs.events.level.RenderLevelEventJS"): typeof Internal.RenderLevelEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.BowItem"): typeof Internal.BowItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "io.ejekta.bountiful.content.BountyItem"): typeof Internal.BountyItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.cerbon.bosses_of_mass_destruction.structure.void_blossom_cavern.VoidBlossomArenaStructureFeature"): typeof Internal.VoidBlossomArenaStructureFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.forge.ForgeEventWrapper"): typeof Internal.ForgeEventWrapper;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.block.predicate.BlockEntityPredicateDataCheck"): Internal.BlockEntityPredicateDataCheck;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.phys.shapes.DiscreteVoxelShape$IntFaceConsumer"): Internal.DiscreteVoxelShape$IntFaceConsumer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.objects.Reference2ShortFunction"): Internal.Reference2ShortFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.particles.emitter.EmitterData$ParticleControllerTypes"): typeof Internal.EmitterData$ParticleControllerTypes;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.profiling.metrics.MetricSampler$SamplerResult"): typeof Internal.MetricSampler$SamplerResult;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.quest.reward.RewardType"): typeof Internal.RewardType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.Random"): typeof Internal.Random;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jozufozu.flywheel.backend.instancing.DrawBuffer"): typeof Internal.DrawBuffer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundRemoveMobEffectPacket"): typeof Internal.ClientboundRemoveMobEffectPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.living.vanilla.PandaJSBuilder"): typeof Internal.PandaJSBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.server.world.feature.structure.UmvuthanaGroveStructure"): typeof Internal.UmvuthanaGroveStructure;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.function.Supplier"): Internal.Supplier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundBlockEntityTagQuery"): typeof Internal.ServerboundBlockEntityTagQuery;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundSetCommandMinecartPacket"): typeof Internal.ServerboundSetCommandMinecartPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.time.LocalDate"): typeof Internal.LocalDate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.gameevent.BlockPositionSource"): typeof Internal.BlockPositionSource;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.portal.PortalForcer"): typeof Internal.PortalForcer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.server.entity.MowzieEntity"): typeof Internal.MowzieEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.items.AltimeterItem"): typeof Internal.AltimeterItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.MultifaceBlock"): typeof Internal.MultifaceBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.SurfaceRules$Condition"): Internal.SurfaceRules$Condition;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.fnc.common.effect.smite.BurningSmite"): typeof Internal.BurningSmite;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.yungnickyoung.minecraft.betterdeserttemples.mixin.accessor.BoundingBoxAccessor"): com.yungnickyoung.minecraft.betterdeserttemples.mixin.accessor.BoundingBoxAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.core.keyframe.Keyframe"): typeof Internal.Keyframe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.debug.BrainDebugRenderer$PoiInfo"): typeof Internal.BrainDebugRenderer$PoiInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.view.View$OnTouchListener"): Internal.View$OnTouchListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "me.jellysquid.mods.sodium.client.render.viewport.ViewportProvider"): Internal.ViewportProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.realmsclient.dto.RealmsServerPlayerLists"): typeof Internal.RealmsServerPlayerLists;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.sorcery.bound.ItemBoundAxe"): typeof Internal.ItemBoundAxe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.GameType"): typeof Internal.GameType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.damagesource.DamageEffects"): typeof Internal.DamageEffects;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.runeforging.RunescribingTableBlock"): typeof Internal.RunescribingTableBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "top.theillusivec4.curios.api.SlotContext"): typeof Internal.SlotContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.core.HolderOwner"): Internal.HolderOwner;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.ItemInHandRenderer"): typeof Internal.ItemInHandRenderer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.OreFeature"): typeof Internal.OreFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "pie.ilikepiefoo.compat.jei.events.RegisterAdvancedEventJS"): typeof Internal.RegisterAdvancedEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexthe666.citadel.server.entity.ICitadelDataEntity"): Internal.ICitadelDataEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.RenderLivingEvent$Post"): typeof Internal.RenderLivingEvent$Post;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.TimeZone"): typeof Internal.TimeZone;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundAddPlayerPacket"): typeof Internal.ClientboundAddPlayerPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.view.View$OnLongClickListener"): Internal.View$OnLongClickListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.chunk.LevelChunk$EntityCreationType"): typeof Internal.LevelChunk$EntityCreationType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.artifice.curio.ItemEldritchOrb"): typeof Internal.ItemEldritchOrb;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.chunk.ChunkRenderDispatcher$ChunkTaskResult"): typeof Internal.ChunkRenderDispatcher$ChunkTaskResult;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.image.ImageConsumer"): Internal.ImageConsumer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.GraphicsConfiguration"): typeof Internal.GraphicsConfiguration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$DeathContext"): typeof Internal.ContextUtils$DeathContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.entities.living.vanilla.GoatEntityJS"): typeof Internal.GoatEntityJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.neutral.EffectGrow"): typeof Internal.EffectGrow;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.client.particle.ParticleCloud$EnumCloudBehavior"): typeof Internal.ParticleCloud$EnumCloudBehavior;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.TubeWormBlock$TubeShape"): typeof Internal.TubeWormBlock$TubeShape;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.transition.TransitionPropagation"): typeof Internal.TransitionPropagation;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.cerbon.bosses_of_mass_destruction.block.custom.TripleBlockPart"): typeof Internal.TripleBlockPart;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.material.MapColor$Brightness"): typeof Internal.MapColor$Brightness;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.model.geometry.BlockGeometryBakingContext"): typeof Internal.BlockGeometryBakingContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.chat.contents.DataSource"): Internal.DataSource;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.model.data.ModelDataManager"): typeof Internal.ModelDataManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.SnowballItem"): typeof Internal.SnowballItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.worldgen.BasaltAshFeature$Config"): typeof Internal.BasaltAshFeature$Config;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.BeaconBlockEntity$BeaconBeamSection"): typeof Internal.BeaconBlockEntity$BeaconBeamSection;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.lodestar.lodestone.systems.particle.world.behaviors.DirectionalParticleBehavior"): typeof Internal.DirectionalParticleBehavior;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.integration.kubejs.requirements.StructureRequirementJS"): Internal.StructureRequirementJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.chunk.LevelChunkSection"): typeof Internal.LevelChunkSection;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2modularblock.type.SingletonBlockMethod"): Internal.SingletonBlockMethod;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "vazkii.patchouli.client.book.BookIcon"): Internal.BookIcon;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.map.type.MapDecorationType"): Internal.MapDecorationType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.entity.util.MinecartAccessor"): Internal.MinecartAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.player.PlayerInteractEvent$LeftClickBlock"): typeof Internal.PlayerInteractEvent$LeftClickBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jozufozu.flywheel.util.transform.Scale"): Internal.Scale;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.util.TooltipList"): typeof Internal.TooltipList;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.authlib.yggdrasil.request.AbuseReportRequest$ClientInfo"): typeof Internal.AbuseReportRequest$ClientInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.fluid.FluidBuilder"): typeof Internal.FluidBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.cache.object.BakedGeoModel"): typeof Internal.BakedGeoModel;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.tree.ContinueStatement"): typeof Internal.ContinueStatement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.network.ServerGamePacketListenerImpl"): typeof Internal.ServerGamePacketListenerImpl;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.AbstractFurnaceBlockEntity"): typeof Internal.AbstractFurnaceBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.extensions.IForgeBoat"): Internal.IForgeBoat;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "kotlin.enums.EnumEntries"): Internal.EnumEntries;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.BlockUtil$FoundRectangle"): typeof Internal.BlockUtil$FoundRectangle;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.client.painter.screen.AlignMode"): typeof Internal.AlignMode;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.gui.flow.GuiFlowFitX"): typeof Internal.GuiFlowFitX;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.enchantment.TridentLoyaltyEnchantment"): typeof Internal.TridentLoyaltyEnchantment;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.events.QuestProgressEventData"): typeof Internal.QuestProgressEventData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.EntityRenderersEvent"): typeof Internal.EntityRenderersEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.decoration.ArmorStand"): typeof Internal.ArmorStand;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.behavior.CountDownCooldownTicks"): typeof Internal.CountDownCooldownTicks;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.longs.Long2BooleanFunction"): Internal.Long2BooleanFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.bettercombat.api.EntityPlayer_BetterCombat"): Internal.EntityPlayer_BetterCombat;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.longs.Long2ObjectMap"): Internal.Long2ObjectMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.network.messages.to_server.InscriptionTableAttributeChangeMessage"): typeof Internal.InscriptionTableAttributeChangeMessage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.MultipleDinosaurEggsBlock"): typeof Internal.MultipleDinosaurEggsBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.chunk.storage.ChunkStorage"): typeof Internal.ChunkStorage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.common.collect.BaseImmutableMultimap"): typeof Internal.BaseImmutableMultimap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.math.BigDecimal"): typeof Internal.BigDecimal;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.tree.BlockStatement"): typeof Internal.BlockStatement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.lwjgl.system.libffi.FFIType"): typeof Internal.FFIType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.image.VolatileImage"): typeof Internal.VolatileImage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.artifice.curio.ItemAntidoteBracelet"): typeof Internal.ItemAntidoteBracelet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.recipes.multiblock.block_matchers.PedestalBlockMatcher"): typeof Internal.PedestalBlockMatcher;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.unascribed.fabrication.interfaces.GetKillMessage"): Internal.GetKillMessage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.runtime.IRecipesGui"): Internal.IRecipesGui;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.StructurePieceAccessor"): Internal.StructurePieceAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.dmnr.common.item.MutandisItem"): typeof Internal.MutandisItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.entity.RenderLayerParent"): Internal.RenderLayerParent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.saveddata.maps.MapItemSavedData"): typeof Internal.MapItemSavedData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.blockpredicates.SolidPredicate"): typeof Internal.SolidPredicate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.realmsclient.gui.task.RepeatedDelayStrategy"): Internal.RepeatedDelayStrategy;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.irisshaders.iris.texture.pbr.PBRAtlasTexture"): typeof Internal.PBRAtlasTexture;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.api.integration.jei.IDisplayInfo"): Internal.IDisplayInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.amendments.common.IBetterJukebox"): Internal.IBetterJukebox;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.items.Wither_Assault_SHoulder_Weapon"): typeof Internal.Wither_Assault_SHoulder_Weapon;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ScreenEvent$MouseDragged"): typeof Internal.ScreenEvent$MouseDragged;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "vazkii.patchouli.common.util.ItemStackUtil$StackWrapper"): typeof Internal.ItemStackUtil$StackWrapper;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.loot.LootPool"): typeof Internal.LootPool;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "malte0811.ferritecore.mixin.mrl.ResourceLocationAccess"): Internal.ResourceLocationAccess;
        notify(): void;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.advancements.DisplayInfo"): typeof Internal.DisplayInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.recipes.rituals.RitualRecipe"): typeof Internal.RitualRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.player.Input"): typeof Internal.Input;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.sorcery.ItemTornJournalPage"): typeof Internal.ItemTornJournalPage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.common.collect.ForwardingMultimap"): typeof Internal.ForwardingMultimap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.fragment.FragmentOnAttachListener"): Internal.FragmentOnAttachListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.Polygon"): typeof Internal.Polygon;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.yungnickyoung.minecraft.betterwitchhuts.mixin.accessor.StructureProcessorAccessor"): com.yungnickyoung.minecraft.betterwitchhuts.mixin.accessor.StructureProcessorAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.valueproviders.WeightedListInt"): typeof Internal.WeightedListInt;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundPlayerInfoUpdatePacket$Entry"): typeof Internal.ClientboundPlayerInfoUpdatePacket$Entry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.loot.entries.LootPoolEntry"): Internal.LootPoolEntry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.api.machine.MachineTile"): typeof Internal.MachineTile;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "kotlin.reflect.KTypeProjection"): typeof Internal.KTypeProjection;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "javax.swing.text.StyleConstants$CharacterConstants"): typeof Internal.StyleConstants$CharacterConstants;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.gson.reflect.TypeToken"): typeof com.google.gson.reflect.TypeToken;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.electronwill.nightconfig.core.UnmodifiableCommentedConfig"): Internal.UnmodifiableCommentedConfig;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.arguments.TimeArgument$Info"): typeof Internal.TimeArgument$Info;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.FoodOnAStickItem"): typeof Internal.FoodOnAStickItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.blaze3d.systems.RenderSystem$AutoStorageIndexBuffer"): typeof Internal.RenderSystem$AutoStorageIndexBuffer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.entity.EntityInLevelCallback"): Internal.EntityInLevelCallback;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.items.Ignitium_Elytra_ChestPlate"): typeof Internal.Ignitium_Elytra_ChestPlate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundSystemChatPacket"): typeof Internal.ClientboundSystemChatPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.amendments.reg.ModBlockProperties$BlockAttachment"): typeof Internal.ModBlockProperties$BlockAttachment;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.EntityTeleportEvent"): typeof Internal.EntityTeleportEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.text.UFormat"): typeof Internal.UFormat;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.Commands$ParseFunction"): Internal.Commands$ParseFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.StrippableLogBlock"): typeof Internal.StrippableLogBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.projectile.ThrowableProjectile"): typeof Internal.ThrowableProjectile;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.enchantment.ACWeaponEnchantment"): typeof Internal.ACWeaponEnchantment;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.Filter$Result"): typeof Internal.Filter$Result;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.BlockPileFeature"): typeof Internal.BlockPileFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.longs.LongSortedSet"): Internal.LongSortedSet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.Hash$Strategy"): Internal.Hash$Strategy;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.graphics.Canvas"): typeof Internal.Canvas;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.armor.ISetItem"): Internal.ISetItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.entity.LevelEntityGetter"): Internal.LevelEntityGetter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.joml.Matrix3x2fc"): Internal.Matrix3x2fc;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.loot.entries.EntryGroup$Builder"): typeof Internal.EntryGroup$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.level.feature.PewenTreeFeature"): typeof Internal.PewenTreeFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.events.BuildBrainEventJS"): typeof Internal.BuildBrainEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.structures.ShipwreckStructure"): typeof Internal.ShipwreckStructure;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.util.TimeZone$SystemTimeZoneType"): typeof Internal.TimeZone$SystemTimeZoneType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.abdelaziz.canary.common.world.ChunkView"): Internal.ChunkView;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.kostromdan.mods.netjs.results.NetJSResultMap"): typeof Internal.NetJSResultMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.vehicle.MinecartHopper"): typeof Internal.MinecartHopper;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.extensions.IForgeBaseRailBlock"): Internal.IForgeBaseRailBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.GrowingPlantHeadBlock"): typeof Internal.GrowingPlantHeadBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.debug.BeeDebugRenderer$BeeInfo"): typeof Internal.BeeDebugRenderer$BeeInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.TeslaBulbBlock"): typeof Internal.TeslaBulbBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.mc.mixin.AccessNativeImage"): Internal.AccessNativeImage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.item.custom.BasicItemJS$Builder"): typeof Internal.BasicItemJS$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.icon.Color4I"): typeof Internal.Color4I;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.blaze3d.shaders.EffectProgram"): typeof Internal.EffectProgram;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.registry.BuilderFactory"): Internal.BuilderFactory;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.yungnickyoung.minecraft.yungsapi.mixin.accessor.FeaturePoolElementAccessor"): Internal.FeaturePoolElementAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.crafting.AbstractCookingRecipe"): typeof Internal.AbstractCookingRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ScreenEvent$MouseScrolled$Post"): typeof Internal.ScreenEvent$MouseScrolled$Post;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.events.ObjectStartedEvent$ChapterEvent"): typeof Internal.ObjectStartedEvent$ChapterEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.objects.Object2IntFunction"): Internal.Object2IntFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.MangroveLeavesBlock"): typeof Internal.MangroveLeavesBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundPlayerPositionPacket"): typeof Internal.ClientboundPlayerPositionPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.projectile.ThrownEgg"): typeof Internal.ThrownEgg;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.FlaxBaleBlock"): typeof Internal.FlaxBaleBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.ProjectileImpactEvent"): typeof Internal.ProjectileImpactEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.config.ListConfig"): typeof Internal.ListConfig;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2backpack.content.common.BaseBagItem"): typeof Internal.BaseBagItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.configurations.PointedDripstoneConfiguration"): typeof Internal.PointedDripstoneConfiguration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.events.ObjectCompletedEvent$TaskEvent"): typeof Internal.ObjectCompletedEvent$TaskEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.api.crafting.CraftingResult"): typeof Internal.CraftingResult;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.types.templates.RecursivePoint$RecursivePointType"): typeof Internal.RecursivePoint$RecursivePointType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.level.structure.DinoBowlStructure"): typeof Internal.DinoBowlStructure;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexthe666.citadel.client.event.EventLivingRenderer$SetupRotations"): typeof Internal.EventLivingRenderer$SetupRotations;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.dmnr.common.effects.beneficial.PeaceMobEffect"): typeof Internal.PeaceMobEffect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.HumanoidArm"): typeof Internal.HumanoidArm;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.bettercombat.client.animation.PlayerAttackAnimatable"): Internal.PlayerAttackAnimatable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.FossilFeature"): typeof Internal.FossilFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.component.ComponentRole"): typeof Internal.ComponentRole;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.world.ModifiableBiomeInfo"): typeof Internal.ModifiableBiomeInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.enchantment.DiggingEnchantment"): typeof Internal.DiggingEnchantment;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "javax.swing.text.StyleConstants$ParagraphConstants"): typeof Internal.StyleConstants$ParagraphConstants;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.gui.drawable.IScalableDrawable"): Internal.IScalableDrawable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.MagnetBlock"): typeof Internal.MagnetBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.gameevent.vibrations.VibrationSystem$User"): Internal.VibrationSystem$User;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.PotatoBlock"): typeof Internal.PotatoBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.screens.inventory.EffectRenderingInventoryScreen"): typeof Internal.EffectRenderingInventoryScreen;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.sensing.HoglinSpecificSensor"): typeof Internal.HoglinSpecificSensor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.decoration.GlowItemFrame"): typeof Internal.GlowItemFrame;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.starfish_studios.bbb.item.HammerItem"): typeof Internal.HammerItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.BellBlockEntity"): typeof Internal.BellBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "me.jellysquid.mods.sodium.client.render.chunk.map.ChunkTrackerHolder"): Internal.ChunkTrackerHolder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.graphics.Paint"): typeof icyllis.modernui.graphics.Paint;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.platform.IngredientPlatformHelper"): Internal.IngredientPlatformHelper;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "snownee.jade.api.view.ViewGroup"): typeof Internal.ViewGroup;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.component.NumberComponent$LongRange"): typeof Internal.NumberComponent$LongRange;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbchunks.api.ChunkTeamData"): Internal.ChunkTeamData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.ui.BaseScreen"): typeof Internal.BaseScreen;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.SandBlock"): typeof Internal.SandBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.textures.ITextureAtlasSpriteLoader"): Internal.ITextureAtlasSpriteLoader;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.font.GlyphMetrics"): typeof Internal.GlyphMetrics;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.prunoideae.powerfuljs.capabilities.forge.CapabilityForgeEnergy$ItemStackBuilder"): typeof Internal.CapabilityForgeEnergy$ItemStackBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.core.particles.DustParticleOptionsBase"): typeof Internal.DustParticleOptionsBase;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.debug.GameEventListenerRenderer"): typeof Internal.GameEventListenerRenderer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.EnigmaticEngineBlock"): typeof Internal.EnigmaticEngineBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.core.Handler"): typeof Internal.Handler;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$EEntityFallDamageContext"): typeof Internal.ContextUtils$EEntityFallDamageContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.unascribed.fabrication.interfaces.GetServerConfig"): Internal.GetServerConfig;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "snownee.jade.api.callback.JadeRayTraceCallback"): Internal.JadeRayTraceCallback;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.bettercombat.api.AttackHand"): typeof Internal.AttackHand;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.tree.TopLevelElement"): typeof Internal.TopLevelElement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.quest.QuestShape"): typeof Internal.QuestShape;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.model.geom.EntityModelSet"): typeof Internal.EntityModelSet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.BlazeRodBlock"): typeof Internal.BlazeRodBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.irisshaders.iris.pipeline.programs.ShaderInstanceInterface"): Internal.ShaderInstanceInterface;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.time.chrono.ChronoLocalDateTime"): Internal.ChronoLocalDateTime;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.resources.model.Material"): typeof Internal.Material;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.fnc.common.effect.beneficial.ExplosionResistanceMobEffect"): typeof Internal.ExplosionResistanceMobEffect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.constructs.parts.torso.ConstructPartTankTorso"): typeof Internal.ConstructPartTankTorso;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.monster.Endermite"): typeof Internal.Endermite;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.context.BlockPlaceContext"): typeof Internal.BlockPlaceContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.featuresize.FeatureSize"): typeof Internal.FeatureSize;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "me.jellysquid.mods.sodium.mixin.features.textures.animations.upload.SpriteContentsAccessor"): me.jellysquid.mods.sodium.mixin.features.textures.animations.upload.SpriteContentsAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.entities.living.vanilla.CreeperEntityJS"): typeof Internal.CreeperEntityJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.RegularEnumSet"): typeof Internal.RegularEnumSet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.lodestar.lodestone.systems.particle.world.behaviors.components.LodestoneBehaviorComponent"): Internal.LodestoneBehaviorComponent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.serialization.DataResult$Mu"): typeof Internal.DataResult$Mu;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.potion.DeepsightEffect"): typeof Internal.DeepsightEffect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.runtime.config.IJeiConfigManager"): Internal.IJeiConfigManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "javax.crypto.Cipher"): typeof Internal.Cipher;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.text.UnicodeSet$XSymbolTable"): typeof Internal.UnicodeSet$XSymbolTable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.beneficial.EffectRepair"): typeof Internal.EffectRepair;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.npc.VillagerTrades$ItemListing"): Internal.VillagerTrades$ItemListing;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jozufozu.flywheel.backend.instancing.blockentity.BlockEntityInstancingController"): Internal.BlockEntityInstancingController;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.util.Parcel"): typeof Internal.Parcel;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.stateproviders.RandomizedIntStateProvider"): typeof Internal.RandomizedIntStateProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.blamejared.controlling.mixin.AccessScreen"): Internal.AccessScreen;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.gameevent.EntityPositionSource"): typeof Internal.EntityPositionSource;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.chunk.StructureAccess"): Internal.StructureAccess;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.ints.IntConsumer"): it.unimi.dsi.fastutil.ints.IntConsumer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.prunoideae.powerfuljs.capabilities.forge.CapabilityItem$BlockEntityBuilder"): typeof Internal.CapabilityItem$BlockEntityBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.navigation.WallClimberNavigation"): typeof Internal.WallClimberNavigation;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.SpringLauncherBlock"): typeof Internal.SpringLauncherBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.phys.shapes.Shapes$DoubleLineConsumer"): Internal.Shapes$DoubleLineConsumer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.arguments.ResourceKeyArgument$Info"): typeof Internal.ResourceKeyArgument$Info;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$PreRenderContext"): typeof Internal.ContextUtils$PreRenderContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.boss.enderdragon.phases.DragonDeathPhase"): typeof Internal.DragonDeathPhase;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.common.collect.ImmutableSetMultimap"): typeof Internal.ImmutableSetMultimap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.components.SplashRenderer"): typeof Internal.SplashRenderer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.CrossbowItem"): typeof Internal.CrossbowItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.item.ItemPickedUpEventJS"): typeof Internal.ItemPickedUpEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.almostreliable.lootjs.core.ILootHandler"): Internal.ILootHandler;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.Graphics2D"): typeof Internal.Graphics2D;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.api.component.IComparatorInputComponent"): Internal.IComparatorInputComponent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.recipe.category.extensions.vanilla.smithing.ISmithingCategoryExtension"): Internal.ISmithingCategoryExtension;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.booleans.Boolean2DoubleFunction"): Internal.Boolean2DoubleFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.telemetry.TelemetryEventType"): typeof Internal.TelemetryEventType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbxmodcompat.ftbteams.kubejs.PlayerTeamEventJS"): typeof Internal.PlayerTeamEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.config.EnumConfig"): typeof Internal.EnumConfig;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.authlib.minecraft.UserApiService"): Internal.UserApiService;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.ServerScoreboard$Method"): typeof Internal.ServerScoreboard$Method;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.dnd.DropTargetDragEvent"): typeof Internal.DropTargetDragEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.foliageplacers.BlobFoliagePlacer"): typeof Internal.BlobFoliagePlacer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.blaze3d.vertex.BufferBuilder$RenderedBuffer"): typeof Internal.BufferBuilder$RenderedBuffer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.WorldlyContainerHolder"): Internal.WorldlyContainerHolder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.PewenBranchBlock"): typeof Internal.PewenBranchBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.nonliving.entityjs.ArrowEntityJSBuilder"): typeof Internal.ArrowEntityJSBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.ops.Op"): typeof Internal.Op;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.gson.ToNumberStrategy"): Internal.ToNumberStrategy;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.projectile.Fireball"): typeof Internal.Fireball;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.items.AntiqueInkItem"): typeof Internal.AntiqueInkItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.starfish_studios.bbb.block.FrameBlock"): typeof com.starfish_studios.bbb.block.FrameBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.artifice.RunicLightBlock"): typeof Internal.RunicLightBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.forge.ForgeEventConsumer"): Internal.ForgeEventConsumer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.Clearable"): Internal.Clearable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.blaze3d.platform.Monitor"): typeof Internal.Monitor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.ExperienceBottleItem"): typeof Internal.ExperienceBottleItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.abdelaziz.canary.common.world.interests.RegionBasedStorageSectionExtended"): Internal.RegionBasedStorageSectionExtended;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.bytes.ByteSpliterator"): Internal.ByteSpliterator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.IPlantable"): Internal.IPlantable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.biome.MultiNoiseBiomeSourceParameterList$Preset$SourceProvider"): Internal.MultiNoiseBiomeSourceParameterList$Preset$SourceProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.starfish_studios.bbb.block.FacingSlabBlock"): typeof Internal.FacingSlabBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.abdelaziz.canary.common.entity.movement_tracker.SectionedEntityMovementListener"): Internal.SectionedEntityMovementListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.graphics.Rect"): typeof Internal.Rect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.event.EventExit"): typeof Internal.EventExit;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.state.properties.AttachFace"): typeof Internal.AttachFace;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.integration.kubejs.AbstractRecipeJSBuilder"): typeof Internal.AbstractRecipeJSBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.ticks.SerializableTickContainer"): Internal.SerializableTickContainer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.block.callbacks.BlockStateRotateCallbackJS"): typeof Internal.BlockStateRotateCallbackJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "snownee.jade.api.ui.IElement"): Internal.IElement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.living.MobSpawnEvent$SpawnPlacementCheck"): typeof Internal.MobSpawnEvent$SpawnPlacementCheck;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.spells.base.SpellBlacklistResult"): typeof Internal.SpellBlacklistResult;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundChatCommandPacket"): typeof Internal.ServerboundChatCommandPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundPingPacket"): typeof Internal.ClientboundPingPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.loot.LootContext"): typeof Internal.LootContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.state.properties.SculkSensorPhase"): typeof Internal.SculkSensorPhase;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.common.collect.HashBiMap"): typeof Internal.HashBiMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.joml.Matrix3x2d"): typeof Internal.Matrix3x2d;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.core.HolderGetter"): Internal.HolderGetter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.projectile.LlamaSpit"): typeof Internal.LlamaSpit;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "pie.ilikepiefoo.compat.jei.events.RegisterItemSubtypeEventJS"): typeof Internal.RegisterItemSubtypeEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.crafting.SmokingRecipe"): typeof Internal.SmokingRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.util.Function12"): Internal.Function12;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.gui.style.display.StyleDisplay"): typeof Internal.StyleDisplay;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.view.DragEvent"): typeof Internal.DragEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.view.ViewTreeObserver$OnScrollChangedListener"): Internal.ViewTreeObserver$OnScrollChangedListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.item.custom.AxeItemBuilder"): typeof Internal.AxeItemBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.projectile.LargeFireball"): typeof Internal.LargeFireball;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.spells.base.ISpellComponent"): Internal.ISpellComponent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.integration.kubejs.requirements.WeatherRequirementJS"): Internal.WeatherRequirementJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.integration.kubejs.requirements.FuelRequirementJS"): Internal.FuelRequirementJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "kotlin.reflect.KVariance"): typeof Internal.KVariance;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.tileentities.EldrinAltarTile"): typeof Internal.EldrinAltarTile;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.ReleaseCallback"): typeof Internal.ReleaseCallback;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.loot.providers.nbt.LootNbtProviderType"): typeof Internal.LootNbtProviderType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.FogRenderer$FogMode"): typeof Internal.FogRenderer$FogMode;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbxmodcompat.ftbquests.kubejs.FTBQuestsKubeJSWrapper"): typeof Internal.FTBQuestsKubeJSWrapper;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.serialization.Lifecycle"): typeof Internal.Lifecycle;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.runtime.config.IJeiConfigValueSerializer"): Internal.IJeiConfigValueSerializer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.almostreliable.lootjs.loot.GroupedLootBuilder"): typeof Internal.GroupedLootBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ScreenEvent$KeyPressed$Post"): typeof Internal.ScreenEvent$KeyPressed$Post;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.core.Vec3i"): typeof Vec3i;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.RenderArmEvent"): typeof Internal.RenderArmEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.event.IEventHandler"): Internal.IEventHandler;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.client.painter.PainterObject"): typeof Internal.PainterObject;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.item.ItemCraftedEventJS"): typeof Internal.ItemCraftedEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.item.creativetab.CreativeTabIconSupplier"): Internal.CreativeTabIconSupplier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.items.IItemHandler"): Internal.IItemHandler;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "cpw.mods.jarhandling.SecureJar"): Internal.SecureJar;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.WallBannerBlock"): typeof Internal.WallBannerBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.GpuDevice"): typeof Internal.GpuDevice;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.sorcery.ItemManaGem"): typeof Internal.ItemManaGem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.level.feature.GalenaHexagonFeature"): typeof Internal.GalenaHexagonFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.longs.LongListIterator"): Internal.LongListIterator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2backpack.content.quickswap.common.ISetSwapItem"): Internal.ISetSwapItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.ServerLevelData"): Internal.ServerLevelData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.player.ItemTooltipEvent"): typeof Internal.ItemTooltipEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.RenderStateShard$WriteMaskStateShard"): typeof Internal.RenderStateShard$WriteMaskStateShard;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.LockCode"): typeof Internal.LockCode;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.block.model.BlockFaceUV"): typeof Internal.BlockFaceUV;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.time.format.TextStyle"): typeof Internal.TextStyle;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.cmdcam.client.EntitySelectorClient"): Internal.EntitySelectorClient;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.BubbleBlock"): typeof Internal.BubbleBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.item.CaveBookItem"): typeof Internal.CaveBookItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.booleans.Boolean2ShortFunction"): Internal.Boolean2ShortFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.ComparatorBlockEntity"): typeof Internal.ComparatorBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.misc.mob_container.MobContainer$MobNBTData$Entity"): typeof Internal.MobContainer$MobNBTData$Entity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.server.IntegratedServer"): typeof Internal.IntegratedServer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate"): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.core.Matrixc"): Internal.Matrixc;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.worldgen.RoadSignFeature$RandomState"): typeof Internal.RoadSignFeature$RandomState;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.recipe.category.extensions.IRecipeCategoryDecorator"): Internal.IRecipeCategoryDecorator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbteams.api.TeamMessage"): Internal.TeamMessage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.animation.AnticipateOvershootInterpolator"): typeof Internal.AnticipateOvershootInterpolator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.monster.CrossbowAttackMob"): Internal.CrossbowAttackMob;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.abdelaziz.canary.common.world.chunk.ClassGroupFilterableList"): Internal.ClassGroupFilterableList;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.view.ActionProvider$SubUiVisibilityListener"): Internal.ActionProvider$SubUiVisibilityListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.registration.IRecipeCategoryRegistration"): Internal.IRecipeCategoryRegistration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.fragment.SharedElementCallback"): typeof Internal.SharedElementCallback;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.items.IShowHud"): Internal.IShowHud;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.enchantment.VanishingCurseEnchantment"): typeof Internal.VanishingCurseEnchantment;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$ScaleModelRenderContext"): typeof Internal.ContextUtils$ScaleModelRenderContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.util.math.transformation.Rotation"): typeof team.creative.creativecore.common.util.math.transformation.Rotation;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.foliageplacers.CherryFoliagePlacer"): typeof Internal.CherryFoliagePlacer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.core.IdMapper"): typeof Internal.IdMapper;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "snownee.jade.api.callback.JadeBeforeRenderCallback$ColorSetting"): typeof Internal.JadeBeforeRenderCallback$ColorSetting;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.gui.ingredient.IRecipeSlotTooltipCallback"): Internal.IRecipeSlotTooltipCallback;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.artifice.ConstructWorkbenchBlock"): typeof Internal.ConstructWorkbenchBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.behavior.AnimalPanic"): typeof Internal.AnimalPanic;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.chunk.BlockColumn"): Internal.BlockColumn;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.BoneMealItem"): typeof Internal.BoneMealItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.boss.enderdragon.phases.DragonLandingPhase"): typeof Internal.DragonLandingPhase;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.phys.shapes.CubeVoxelShape"): typeof Internal.CubeVoxelShape;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jozufozu.flywheel.core.PartialModel"): typeof Internal.PartialModel;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.embeddedt.modernfix.world.StrongholdLocationCache"): typeof Internal.StrongholdLocationCache;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.cmdcam.client.mixin.GameRendererAccessor"): team.creative.cmdcam.client.mixin.GameRendererAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.server.item.MowzieAxeItem"): typeof Internal.MowzieAxeItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.doubles.DoubleIterable"): Internal.DoubleIterable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.serialization.Compressable"): Internal.Compressable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.advancements.AdvancementList$Listener"): Internal.AdvancementList$Listener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.joml.Vector2fc"): Internal.Vector2fc;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.monster.Husk"): typeof Internal.Husk;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.player.PlayerEvent$PlayerLoggedInEvent"): typeof Internal.PlayerEvent$PlayerLoggedInEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.InteractionResult"): typeof Internal.InteractionResult;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.base.INoCreativeTab"): Internal.INoCreativeTab;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.client.particle.ParticleSnowFlake$SnowflakeData"): typeof Internal.ParticleSnowFlake$SnowflakeData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.animationjs.events.IAnimationTrigger"): Internal.IAnimationTrigger;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ItemSteerable"): Internal.ItemSteerable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.fragment.FragmentManager"): typeof Internal.FragmentManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.item.FloaterItem"): typeof Internal.FloaterItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.inventory.CartographyTableMenu"): typeof Internal.CartographyTableMenu;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.items.SafeItem"): typeof Internal.SafeItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.npc.VillagerProfession"): typeof Internal.VillagerProfession;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.entities.construct.Animations"): typeof Internal.Animations;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbchunks.core.BiomeFTBC"): Internal.BiomeFTBC;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.nonliving.vanilla.BoatJSBuilder"): typeof Internal.BoatJSBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.IronGolem"): typeof Internal.IronGolem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.level.LevelEvent$Unload"): typeof Internal.LevelEvent$Unload;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.inventory.AbstractContainerMenu"): typeof Internal.AbstractContainerMenu;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.level.BlockContainerJS"): typeof Internal.BlockContainerJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "lio.playeranimatorapi.mixin.CameraAccessor"): Internal.CameraAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.time.temporal.TemporalField"): Internal.TemporalField;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.client.LangEventJS"): typeof Internal.LangEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.loot.LootBuilderPool"): typeof Internal.LootBuilderPool;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.enchantment.MendingEnchantment"): typeof Internal.MendingEnchantment;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.init.ConfigurationCardItem"): typeof Internal.ConfigurationCardItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2backpack.content.quickswap.common.SetSwapItem"): typeof Internal.SetSwapItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.artifice.ItemTransitoryTunnel"): typeof Internal.ItemTransitoryTunnel;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.client.BlackboardManager$Key"): typeof Internal.BlackboardManager$Key;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "noobanidus.mods.lootr.block.TrophyBlock"): typeof Internal.TrophyBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.InputReplacementTransformer"): Internal.InputReplacementTransformer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.TimeSource"): Internal.TimeSource;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.blocks.SandStoneTrapBlock"): typeof Internal.SandStoneTrapBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.color.block.BlockColor"): Internal.BlockColor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.core.Rect2i"): typeof icyllis.arc3d.core.Rect2i;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.GraphicsConfigTemplate"): typeof Internal.GraphicsConfigTemplate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.utility.InvisibleLight"): typeof Internal.InvisibleLight;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.DensityFunctions$Marker$Type"): typeof Internal.DensityFunctions$Marker$Type;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.block.IPistonMotionReact"): Internal.IPistonMotionReact;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.players.PlayerList"): typeof Internal.PlayerList;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.SpawnPlacementRegisterEvent"): typeof Internal.SpawnPlacementRegisterEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.model.AgeableListModel"): typeof Internal.AgeableListModel;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.heightproviders.UniformHeight"): typeof Internal.UniformHeight;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.status.ServerStatus$Version"): typeof Internal.ServerStatus$Version;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.cache.object.GeoQuad"): typeof Internal.GeoQuad;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.Locale$LanguageRange"): typeof Internal.Locale$LanguageRange;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.dmnr.common.item.spellstoring.RingOfSpellStoringItem"): typeof Internal.RingOfSpellStoringItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.loot.LootParams"): typeof Internal.LootParams;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.floats.FloatCollection"): Internal.FloatCollection;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundBossEventPacket$Handler"): Internal.ClientboundBossEventPacket$Handler;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.electronwill.nightconfig.core.file.GenericBuilder"): typeof Internal.GenericBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "top.theillusivec4.curios.api.client.ICurioRenderer"): CuriosRenderer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.item.WoodBasedBlockItem"): typeof Internal.WoodBasedBlockItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.GenerationStep$Carving"): typeof Internal.GenerationStep$Carving;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.CaveVinesPlantBlock"): typeof Internal.CaveVinesPlantBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.EventQueue"): typeof Internal.EventQueue;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.objects.ObjectSet"): Internal.ObjectSet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2backpack.content.common.TooltipInvItem"): Internal.TooltipInvItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.security.SignatureSpi"): typeof Internal.SignatureSpi;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.common.collect.ImmutableMap"): typeof Internal.ImmutableMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.map.CustomMapData$DirtyCounter"): Internal.CustomMapData$DirtyCounter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.multiplayer.MultiPlayerGameMode"): typeof Internal.MultiPlayerGameMode;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.util.math.vec.Vec4d"): typeof Internal.Vec4d;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.ints.IntCollection"): Internal.IntCollection;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.time.temporal.TemporalAdjuster"): Internal.TemporalAdjuster;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.living.vanilla.CamelJSBuilder"): typeof Internal.CamelJSBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.message.MessageFactory"): Internal.MessageFactory;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.Heightmap$Types"): typeof Internal.Heightmap$Types;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.dnd.DragSourceMotionListener"): Internal.DragSourceMotionListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.TreeFeature"): typeof Internal.TreeFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.GeodeFeature"): typeof Internal.GeodeFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.ponder.ui.NavigatableSimiScreen"): typeof Internal.NavigatableSimiScreen;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.time.temporal.ChronoField"): typeof Internal.ChronoField;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.core.mixin.forge.RecipeManagerAccessor"): Internal.RecipeManagerAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.bossevents.CustomBossEvent"): typeof Internal.CustomBossEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.architectury.extensions.injected.InjectedLiquidBlockExtension"): Internal.InjectedLiquidBlockExtension;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.multiplayer.ClientPacketListener"): typeof Internal.ClientPacketListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.gui.sync.GuiSyncHolder$GuiSyncHolderGlobal"): typeof Internal.GuiSyncHolder$GuiSyncHolderGlobal;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.utility.Couple"): typeof Internal.Couple;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.impl.component.config.SideMode"): typeof Internal.SideMode;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.behavior.MoveToTargetSink"): typeof Internal.MoveToTargetSink;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.network.messages.to_server.InscriptionTableAttributeChangeMessage$ChangeType"): typeof Internal.InscriptionTableAttributeChangeMessage$ChangeType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.artifice.FilterItem"): typeof Internal.FilterItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.quest.DefaultChapterGroup"): typeof Internal.DefaultChapterGroup;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.core.RegistryAccess$RegistryEntry"): typeof Internal.RegistryAccess$RegistryEntry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.runtime.IBookmarkOverlay"): Internal.IBookmarkOverlay;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.core.LivingEntityKJS"): Internal.LivingEntityKJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.crafting.Ingredient$Value"): Internal.Ingredient$Value;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.rootplacers.RootPlacer"): typeof Internal.RootPlacer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.AshLayerBlock"): typeof Internal.AshLayerBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.HoneycombItem"): typeof Internal.HoneycombItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.lwjgl.system.libffi.FFICIF"): typeof Internal.FFICIF;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.misc.StasisEnchantment"): typeof Internal.StasisEnchantment;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.rhino.MemberType"): typeof Internal.MemberType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.almostreliable.lootjs.loot.action.GroupedLootAction"): typeof Internal.GroupedLootAction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.animationjs.events.subevents.IPlayerRenderer"): Internal.IPlayerRenderer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.loot.LootContext$EntityTarget"): typeof Internal.LootContext$EntityTarget;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.core.Vector4"): typeof Internal.Vector4;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.living.LivingFallEvent"): typeof Internal.LivingFallEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.GpuWarnlistManager"): typeof Internal.GpuWarnlistManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.dmnr.common.item.FallenAngelRingItem"): typeof Internal.FallenAngelRingItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.view.ViewRoot"): typeof Internal.ViewRoot;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.level.ChunkMap$TrackedEntity"): typeof Internal.ChunkMap$TrackedEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.particle.TextureSheetParticle"): typeof Internal.TextureSheetParticle;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.core.GameRulesKJS"): Internal.GameRulesKJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.irisshaders.iris.mixin.DimensionTypeAccessor"): Internal.DimensionTypeAccessor;
        wait(arg0: number): void;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.level.NoteBlockEvent$Note"): typeof Internal.NoteBlockEvent$Note;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.embeddedt.modernfix.duck.IServerLevel"): Internal.IServerLevel;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2backpack.content.click.DoubleClickItem"): Internal.DoubleClickItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.crafting.IIngredientSerializer"): Internal.IIngredientSerializer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.crafting.SingleItemRecipe"): typeof Internal.SingleItemRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.GlazedTerracottaBlock"): typeof Internal.GlazedTerracottaBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$TargetChangeContext"): typeof Internal.ContextUtils$TargetChangeContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.network.messages.BaseClientMessage"): typeof Internal.BaseClientMessage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.placement.CountOnEveryLayerPlacement"): typeof Internal.CountOnEveryLayerPlacement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.types.families.RecursiveTypeFamily"): typeof Internal.RecursiveTypeFamily;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.resources.model.ModelBaker"): Internal.ModelBaker;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbultimine.mixin.AxeItemAccess"): Internal.AxeItemAccess;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.state.properties.DoubleBlockHalf"): typeof Internal.DoubleBlockHalf;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.util.FileWatcher"): Internal.FileWatcher;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.items.CuriosItem.Sandstorm_In_A_Bottle"): typeof Internal.Sandstorm_In_A_Bottle;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.item.creativetab.CreativeTabBuilder"): typeof Internal.CreativeTabBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.misc.EnchantmentBuilder$PostFunction"): Internal.EnchantmentBuilder$PostFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.prunoideae.powerfuljs.capabilities.forge.CapabilityFluid$FluidIOBlockEntity"): Internal.CapabilityFluid$FluidIOBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.entities.construct.ai.IMutexManager"): Internal.IMutexManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$EDamageContext"): typeof Internal.ContextUtils$EDamageContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundUpdateAttributesPacket"): typeof Internal.ClientboundUpdateAttributesPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.runtime.IIngredientManager$IIngredientListener"): Internal.IIngredientManager$IIngredientListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.util.math.box.AlignedBox"): typeof Internal.AlignedBox;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jtorleonstudios.libraryferret.blocks.Blocks$4"): typeof Internal.Blocks$4;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.resources.SkinManager$SkinTextureCallback"): Internal.SkinManager$SkinTextureCallback;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.texture.SpriteLoader$Preparations"): typeof Internal.SpriteLoader$Preparations;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.alchemy.Potion"): typeof Internal.Potion;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.sosly.arcaneadditions.effects.beneficial.LifeLinkEffect"): typeof Internal.LifeLinkEffect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.Function"): it.unimi.dsi.fastutil.Function;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "pie.ilikepiefoo.compat.jei.events.RegisterIngredientsEventJS"): typeof Internal.RegisterIngredientsEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.amendments.common.IBellConnections"): Internal.IBellConnections;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.living.vanilla.ZombieJSBuilder"): typeof Internal.ZombieJSBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.kostromdan.mods.netjs.bindings.NetJSWrapper"): NetJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.SculkPatchFeature"): typeof Internal.SculkPatchFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.projectile.DragonFireball"): typeof Internal.DragonFireball;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.components.Button$CreateNarration"): Internal.Button$CreateNarration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.ingredientaction.IngredientActionFilter"): typeof Internal.IngredientActionFilter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.client.particle.RingParticle$RingData"): typeof Internal.RingParticle$RingData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.kinds.Functor"): Internal.Functor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.Gui"): typeof Internal.Gui;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.util.Parcelable$ClassLoaderCreator"): Internal.Parcelable$ClassLoaderCreator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.rhino.mod.util.color.Color"): dev.latvian.mods.rhino.mod.util.color.Color;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.rhino.GeneratedClassLoader"): Internal.GeneratedClassLoader;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.BaseCoralFanBlock"): typeof Internal.BaseCoralFanBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.RenderTooltipEvent$Color"): typeof Internal.RenderTooltipEvent$Color;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.OptionInstance"): typeof Internal.OptionInstance;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.almostreliable.lootjs.kube.builder.LootActionsBuilderJS"): typeof Internal.LootActionsBuilderJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.RenderStateShard$LayeringStateShard"): typeof Internal.RenderStateShard$LayeringStateShard;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$BreedableEntityContext"): typeof Internal.ContextUtils$BreedableEntityContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$GoalContext"): typeof Internal.ContextUtils$GoalContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.Brain"): typeof Internal.Brain;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.server.world.MobSpawnBiomeModifier"): typeof Internal.MobSpawnBiomeModifier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.artifice.charms.ItemContingencyCharm$ContingencyEvent"): typeof Internal.ItemContingencyCharm$ContingencyEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.architectury.extensions.injected.InjectedEntityTypeExtension"): Internal.InjectedEntityTypeExtension;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.graphics.Bitmap"): typeof Internal.Bitmap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.items.Monstrous_Helm"): typeof Internal.Monstrous_Helm;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.DecoratedPotBlockEntity"): typeof Internal.DecoratedPotBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.resources.metadata.animation.AnimationMetadataSectionSerializer"): typeof Internal.AnimationMetadataSectionSerializer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.time.zone.ZoneOffsetTransitionRule"): typeof Internal.ZoneOffsetTransitionRule;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.concurrent.Future"): Internal.Future;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.electronwill.nightconfig.core.utils.WriterSupplier"): Internal.WriterSupplier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.IForgeShearable"): Internal.IForgeShearable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.blocks.tile.IMultiblockDefinition"): Internal.IMultiblockDefinition;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.resources.metadata.animation.AnimationMetadataSection$FrameOutput"): Internal.AnimationMetadataSection$FrameOutput;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.ticks.LevelTicks"): typeof Internal.LevelTicks;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.gui.flow.GuiSizeRule"): typeof Internal.GuiSizeRule;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.stream.LongStream"): Internal.LongStream;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.item.custom.ShearsItemBuilder"): typeof Internal.ShearsItemBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.PipelineDesc"): typeof Internal.PipelineDesc;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.joml.Vector3d"): typeof Internal.Vector3d;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.unascribed.fabrication.interfaces.SetCanHitList"): Internal.SetCanHitList;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$EntityEquipmentContext"): typeof Internal.ContextUtils$EntityEquipmentContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.ShulkerBoxBlockEntity"): typeof Internal.ShulkerBoxBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.ConnectionProtocol"): typeof Internal.ConnectionProtocol;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.electronwill.nightconfig.core.Config$Entry"): Internal.Config$Entry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.level.feature.SubterranodonRoostFeature"): typeof Internal.SubterranodonRoostFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundDisconnectPacket"): typeof Internal.ClientboundDisconnectPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.valueproviders.ConstantInt"): typeof Internal.ConstantInt;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.quest.reward.CustomReward"): typeof Internal.CustomReward;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.behavior.BehaviorControl"): Internal.BehaviorControl;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ilexiconn.llibrary.server.animation.Animation"): typeof Internal.Animation;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.foliageplacers.PineFoliagePlacer"): typeof Internal.PineFoliagePlacer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.npc.VillagerType"): typeof Internal.VillagerType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.fnc.common.effect.harmful.MinimizedMobEffect"): typeof Internal.MinimizedMobEffect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.AbyssmarineStairBlock"): typeof Internal.AbyssmarineStairBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2library.serial.recipe.AbstractShapedRecipe"): typeof Internal.AbstractShapedRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.block.ModelBlockRenderer"): typeof Internal.ModelBlockRenderer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.integration.kubejs.requirements.BlockRequirementJS"): Internal.BlockRequirementJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.SurfaceRules$Context"): typeof Internal.SurfaceRules$Context;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.irisshaders.iris.vertices.ExtendingBufferBuilder"): Internal.ExtendingBufferBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jozufozu.flywheel.event.ReloadRenderersEvent"): typeof Internal.ReloadRenderersEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.animationjs.utils.ContextUtils$PlayerRenderContext"): typeof Internal.ContextUtils$PlayerRenderContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.fnc.common.effect.smite.HexingSmite"): typeof Internal.HexingSmite;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.gui.manager.GuiManager$GuiManagerType"): typeof Internal.GuiManager$GuiManagerType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.players.BanListEntry"): typeof Internal.BanListEntry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.security.Signature"): typeof Internal.Signature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.core.state.BoneSnapshot"): typeof Internal.BoneSnapshot;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.extensions.IForgeMinecraft"): Internal.IForgeMinecraft;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.RandomSource"): Internal.RandomSource;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.AddPackFindersEvent"): typeof Internal.AddPackFindersEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.carver.ConfiguredWorldCarver"): typeof Internal.ConfiguredWorldCarver;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.starfish_studios.bbb.block.BlockBlock"): typeof Internal.BlockBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.player.PlayerInteractEvent$EntityInteractSpecific"): typeof Internal.PlayerInteractEvent$EntityInteractSpecific;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.resources.Theme"): typeof icyllis.modernui.resources.Theme;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.events.ObjectStartedEvent$FileEvent"): typeof Internal.ObjectStartedEvent$FileEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.authlib.HttpAuthenticationService"): typeof Internal.HttpAuthenticationService;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.network.messages.TileEntityServerMessage"): typeof Internal.TileEntityServerMessage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.sorcery.bound.ItemBoundSword"): typeof Internal.ItemBoundSword;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "kotlin.reflect.KClass"): Internal.KClass;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.ThornwoodBranchBlock"): typeof Internal.ThornwoodBranchBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.CustomizeGuiOverlayEvent$DebugText"): typeof Internal.CustomizeGuiOverlayEvent$DebugText;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.fnc.common.item.DeckOfManyItem"): typeof Internal.DeckOfManyItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.Tuple"): typeof Internal.Tuple;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.api.crafting.IProcessorTemplate"): Internal.IProcessorTemplate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.level.structure.AbyssalRuinsStructure"): typeof Internal.AbyssalRuinsStructure;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.quest.loot.WeightedReward"): typeof Internal.WeightedReward;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.fluid.FluidLike"): Internal.FluidLike;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundMoveEntityPacket"): typeof Internal.ClientboundMoveEntityPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.function.UnaryOperator"): Internal.UnaryOperator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.RandomPatchFeature"): typeof Internal.RandomPatchFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.time.InstantSource"): Internal.InstantSource;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.config.StringConfig"): typeof Internal.StringConfig;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.sounds.SoundBufferLibrary"): typeof Internal.SoundBufferLibrary;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.prunoideae.powerfuljs.events.forge.DynamicItemStackEventJS"): typeof Internal.DynamicItemStackEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.player.ProfilePublicKey"): typeof Internal.ProfilePublicKey;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.pylon.LightPylonBlock"): typeof Internal.LightPylonBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.heightproviders.WeightedListHeight"): typeof Internal.WeightedListHeight;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.BeholderBlock"): typeof Internal.BeholderBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.items.IPositionalItem"): Internal.IPositionalItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.security.Provider$Service"): typeof Internal.Provider$Service;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.CommandSigningContext"): Internal.CommandSigningContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.function.BiConsumer"): Internal.BiConsumer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "snownee.jade.api.IBlockComponentProvider"): Internal.IBlockComponentProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.function.IntToDoubleFunction"): Internal.IntToDoubleFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.beneficial.EffectManaRegen"): typeof Internal.EffectManaRegen;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.graphics.drawable.Drawable$Callback"): Internal.Drawable$Callback;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.CampfireBlockEntity"): typeof Internal.CampfireBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.SpectralArrowItem"): typeof Internal.SpectralArrowItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "me.fengming.renderjs.core.RenderObject"): typeof Internal.RenderObject;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.serialization.Encoder"): Internal.Encoder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.goat.Goat"): typeof Internal.Goat;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.village.WandererTradesEvent"): typeof Internal.WandererTradesEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$EntityItemStackContext"): typeof Internal.ContextUtils$EntityItemStackContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.particle.Particle"): typeof Internal.Particle;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.event.HierarchyEvent"): typeof Internal.HierarchyEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.items.QuiverItem$Data"): Internal.QuiverItem$Data;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.level.feature.SulfurStackFeature"): typeof Internal.SulfurStackFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.commons.lang3.tuple.ImmutableTriple"): typeof Internal.ImmutableTriple;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.projectile.Snowball"): typeof Internal.Snowball;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2backpack.content.capability.PickupMode"): typeof Internal.PickupMode;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.block.MimicBlock"): typeof Internal.MimicBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.entity.util.UnderzealotSacrifice"): Internal.UnderzealotSacrifice;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.world.StructureSettingsBuilder$StructureSpawnOverrideBuilder"): typeof Internal.StructureSettingsBuilder$StructureSpawnOverrideBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.client.particle.util.AdvancedParticleData"): typeof Internal.AdvancedParticleData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.irisshaders.iris.mixin.LightTextureAccessor"): Internal.LightTextureAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.DensityFunction$SimpleFunction"): Internal.DensityFunction$SimpleFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.block.IRecolorable"): Internal.IRecolorable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.util.MutableHashedLinkedMap$IdentityStrategy"): typeof Internal.MutableHashedLinkedMap$IdentityStrategy;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.ImmutableCollections$SetN"): typeof Internal.ImmutableCollections$SetN;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.blocks.FillerBlock"): typeof Internal.FillerBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.RenderStateShard$EmptyTextureStateShard"): typeof Internal.RenderStateShard$EmptyTextureStateShard;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.StemBlock"): typeof Internal.StemBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.util.Property"): typeof icyllis.modernui.util.Property;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.BaseCoralPlantBlock"): typeof Internal.BaseCoralPlantBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.monster.Drowned"): typeof Internal.Drowned;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.block.callbacks.AfterEntityFallenOnBlockCallbackJS"): typeof Internal.AfterEntityFallenOnBlockCallbackJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.util.Source"): typeof Internal.Source;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.InstrumentItem"): typeof Internal.InstrumentItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundRecipePacket"): typeof Internal.ClientboundRecipePacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.enchantment.ArrowDamageEnchantment"): typeof Internal.ArrowDamageEnchantment;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.common.collect.Multiset"): Internal.Multiset;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.living.LivingDropsEvent"): typeof Internal.LivingDropsEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.core.HolderLookup"): Internal.HolderLookup;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.ForgeConfigSpec$ConfigValue"): typeof Internal.ForgeConfigSpec$ConfigValue;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.lang.Comparable"): Internal.Comparable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.structures.WoodlandMansionStructure"): typeof Internal.WoodlandMansionStructure;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.crafting.SmithingTrimRecipe$Serializer"): typeof Internal.SmithingTrimRecipe$Serializer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.eventbus.ListenerList"): typeof Internal.ListenerList;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.GunpowderBlock"): typeof Internal.GunpowderBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "snownee.jade.api.ui.IProgressStyle"): Internal.IProgressStyle;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.irisshaders.iris.mixin.texture.SpriteContentsAccessor"): Internal.SpriteContentsAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.AbstractGlassBlock"): typeof Internal.AbstractGlassBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.enchantments.base.MADamageEnchantmentBase"): typeof Internal.MADamageEnchantmentBase;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.state.properties.WallSide"): typeof Internal.WallSide;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.server.config.ConfigHandler$ArmorConfig"): typeof Internal.ConfigHandler$ArmorConfig;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.Marker"): typeof Internal.Marker;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.LadderBlock"): typeof Internal.LadderBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.ChatFormatting"): typeof Internal.ChatFormatting;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.ponder.SceneBuilder$DebugInstructions"): typeof Internal.SceneBuilder$DebugInstructions;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.OutlineBufferSource"): typeof Internal.OutlineBufferSource;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.RecipeTypeFunction"): typeof Internal.RecipeTypeFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.foliageplacers.FancyFoliagePlacer"): typeof Internal.FancyFoliagePlacer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundLightUpdatePacketData"): typeof Internal.ClientboundLightUpdatePacketData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.filters.ItemFilterGroup"): typeof Internal.ItemFilterGroup;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.ItemDebugStick"): typeof Internal.ItemDebugStick;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.DripstoneClusterFeature"): typeof Internal.DripstoneClusterFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.function.ToIntBiFunction"): Internal.ToIntBiFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.nick.chimes.block.WindBellBlock"): typeof Internal.WindBellBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2modularblock.DelegateBlockImpl"): typeof Internal.DelegateBlockImpl;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.authlib.yggdrasil.request.AbuseReportRequest"): typeof Internal.AbuseReportRequest;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.gson.stream.JsonReader"): typeof Internal.JsonReader;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.crafting.WeaponfusionRecipe"): typeof Internal.WeaponfusionRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.nick.chimes.Placement"): typeof Internal.Placement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.material.Fluid"): typeof Internal.Fluid;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.core.SurfaceCharacterization"): typeof Internal.SurfaceCharacterization;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.client.particle.ParticleHandler$4"): typeof Internal.ParticleHandler$4;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.crafting.craft.CustomCraftRecipe"): typeof Internal.CustomCraftRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.enchantment.LootBonusEnchantment"): typeof Internal.LootBonusEnchantment;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.GrassBlock"): typeof Internal.GrassBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.function.ToLongBiFunction"): Internal.ToLongBiFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.ingredients.IIngredientType"): Internal.IIngredientType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.abdelaziz.canary.common.hopper.CanaryStackList"): typeof Internal.CanaryStackList;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.living.BaseLivingEntityBuilder$ISoundListenerJS"): Internal.BaseLivingEntityBuilder$ISoundListenerJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.ReloadableServerResources"): typeof Internal.ReloadableServerResources;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.multiplayer.chat.LoggedChatEvent$Type"): typeof Internal.LoggedChatEvent$Type;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.view.LayoutInflater"): typeof Internal.LayoutInflater;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.SnowLayerBlock"): typeof Internal.SnowLayerBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.lodestar.lodestone.recipe.NBTCarryRecipe$Serializer"): typeof Internal.NBTCarryRecipe$Serializer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.ChiseledBookShelfBlock"): typeof Internal.ChiseledBookShelfBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.util.math.vec.Vec3f"): typeof team.creative.creativecore.common.util.math.vec.Vec3f;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.components.Button"): typeof Internal.Button;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.maven.repository.legacy.metadata.ArtifactMetadata"): org.apache.maven.repository.legacy.metadata.ArtifactMetadata;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.living.MobEffectEvent$Remove"): typeof Internal.MobEffectEvent$Remove;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.mc.forge.OpenMenuEvent"): typeof Internal.OpenMenuEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.floats.FloatListIterator"): Internal.FloatListIterator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.dimension.LevelStem"): typeof Internal.LevelStem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "Tavi007.ElementalCombat.capabilities.defense.DefenseLayer"): typeof Internal.DefenseLayer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.EggItem"): typeof Internal.EggItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.rhino.util.wrap.TypeWrappers"): typeof Internal.TypeWrappers;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.players.UserWhiteListEntry"): typeof Internal.UserWhiteListEntry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.registries.IdMappingEvent$ModRemapping"): typeof Internal.IdMappingEvent$ModRemapping;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundCustomChatCompletionsPacket$Action"): typeof Internal.ClientboundCustomChatCompletionsPacket$Action;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.realmsclient.gui.RealmsNewsManager"): typeof Internal.RealmsNewsManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.function.DoubleFunction"): Internal.DoubleFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.entities.living.vanilla.SlimeEntityJS"): typeof Internal.SlimeEntityJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.Products$P10"): typeof Internal.Products$P10;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.AmbersolLightBlock"): typeof Internal.AmbersolLightBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.BlockEntityType$BlockEntitySupplier"): Internal.BlockEntityType$BlockEntitySupplier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.crafting.SmeltingRecipe"): typeof Internal.SmeltingRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.integration.kubejs.requirements.FunctionRequirementJS"): Internal.FunctionRequirementJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.view.ViewGroup$LayoutParams"): typeof Internal.ViewGroup$LayoutParams;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.Cod"): typeof Internal.Cod;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.Difficulty"): typeof Internal.Difficulty;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.integration.forge.jei.RemoveJEIRecipesEvent"): typeof Internal.RemoveJEIRecipesEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.function.DoublePredicate"): Internal.DoublePredicate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.cerbon.bosses_of_mass_destruction.block.custom.ObsidilithSummonBlock"): typeof Internal.ObsidilithSummonBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.ClipBlockStateContext"): typeof Internal.ClipBlockStateContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundMerchantOffersPacket"): typeof Internal.ClientboundMerchantOffersPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.debug.RaidDebugRenderer"): typeof Internal.RaidDebugRenderer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.village.poi.PoiRecord"): typeof Internal.PoiRecord;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.TropicalFish$Pattern"): typeof Internal.TropicalFish$Pattern;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.core.ServerPlayerKJS"): Internal.ServerPlayerKJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.world.ForgeBiomeModifiers$AddFeaturesBiomeModifier"): typeof Internal.ForgeBiomeModifiers$AddFeaturesBiomeModifier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.DensityFunction$ContextProvider"): Internal.DensityFunction$ContextProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.init.Registration$1"): typeof Internal.Registration$1;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.extensions.IForgeMobEffect"): Internal.IForgeMobEffect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.structures.IglooStructure"): typeof Internal.IglooStructure;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "Tavi007.ElementalCombat.potions.ElementalHarmingEffect"): typeof Internal.ElementalHarmingEffect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$Vec3Context"): typeof Internal.ContextUtils$Vec3Context;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.platform.forge.ingredient.KubeJSIngredientSerializer"): typeof Internal.KubeJSIngredientSerializer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2library.base.NamedEntry"): typeof Internal.NamedEntry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.HugeBrownMushroomFeature"): typeof Internal.HugeBrownMushroomFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.BoneRibsBlock"): typeof Internal.BoneRibsBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.authlib.minecraft.TelemetryPropertyContainer"): Internal.TelemetryPropertyContainer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "javax.accessibility.AccessibleState"): typeof Internal.AccessibleState;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.impl.units.MeasureUnitImpl"): typeof Internal.MeasureUnitImpl;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.block.ISoftFluidTankProvider"): Internal.ISoftFluidTankProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.world.StructureSettingsBuilder"): typeof Internal.StructureSettingsBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.RotatedPillarBlock"): typeof Internal.RotatedPillarBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.TargetBlock"): typeof Internal.TargetBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.misc.VillagerProfessionBuilder"): typeof Internal.VillagerProfessionBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.JukeboxBlock"): typeof Internal.JukeboxBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.architectury.utils.Env"): typeof Internal.Env;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "me.Thelnfamous1.mobplayeranimator.mixin.AnimationStackAccessor"): Internal.AnimationStackAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.configurations.LayerConfiguration"): typeof Internal.LayerConfiguration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.blocks.WaterloggableBlockWithOffset"): typeof Internal.WaterloggableBlockWithOffset;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.capabilities.IPlayerProgression"): Internal.IPlayerProgression;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.pools.LegacySinglePoolElement"): typeof Internal.LegacySinglePoolElement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ComputeFovModifierEvent"): typeof Internal.ComputeFovModifierEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.BarrierBlock"): typeof Internal.BarrierBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.gui.builder.IIngredientConsumer"): Internal.IIngredientConsumer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.syncher.SynchedEntityData$DataItem"): typeof Internal.SynchedEntityData$DataItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$EntityDamageContext"): typeof Internal.ContextUtils$EntityDamageContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.DrainBlock"): typeof Internal.DrainBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.function.DoubleToLongFunction"): Internal.DoubleToLongFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.util.registry.NamedHandlerRegistry"): typeof Internal.NamedHandlerRegistry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "pie.ilikepiefoo.compat.jei.builder.RecipeCategoryBuilder$TooltipHandler"): Internal.RecipeCategoryBuilder$TooltipHandler;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.level.feature.BlackVentFeature"): typeof Internal.BlackVentFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.events.ObjectCompletedEvent"): typeof Internal.ObjectCompletedEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.item.MothDustItem"): typeof Internal.MothDustItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.keksuccino.fancymenu.mixin.mixins.common.client.IMixinOptions"): Internal.IMixinOptions;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.gameevent.vibrations.VibrationSystem$Listener"): typeof Internal.VibrationSystem$Listener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.TickEvent$LevelTickEvent"): typeof Internal.TickEvent$LevelTickEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "kotlin.reflect.KTypeProjection$Companion"): typeof Internal.KTypeProjection$Companion;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.NeodymiumPillarBlock"): typeof Internal.NeodymiumPillarBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.serialization.Keyable"): Internal.Keyable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "me.jellysquid.mods.sodium.mixin.features.textures.NativeImageAccessor"): Internal.NativeImageAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.stages.StageChangeEvent"): typeof Internal.StageChangeEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.util.BiConsumer"): org.apache.logging.log4j.util.BiConsumer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.PlayerRideableJumping"): Internal.PlayerRideableJumping;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.electronwill.nightconfig.core.EnumGetMethod"): typeof Internal.EnumGetMethod;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.function.ToLongFunction"): Internal.ToLongFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.loot.ChestLootEventJS"): typeof Internal.ChestLootEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.joml.Matrix2fc"): Internal.Matrix2fc;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.brutalbosses.entity.IEntityCapReader"): Internal.IEntityCapReader;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "pie.ilikepiefoo.events.ProxyEventJS"): typeof Internal.ProxyEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundContainerClosePacket"): typeof Internal.ServerboundContainerClosePacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.loot.LootContextUser"): Internal.LootContextUser;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.blaze3d.audio.Channel"): typeof com.mojang.blaze3d.audio.Channel;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.PoweredBlock"): typeof Internal.PoweredBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.projectile.EvokerFangs"): typeof Internal.EvokerFangs;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.helpers.IColorHelper"): Internal.IColorHelper;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.franckyi.ibeeditor.mixin.AbstractContainerScreenMixin"): Internal.AbstractContainerScreenMixin;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.irisshaders.batchedentityrendering.mixin.RenderTypeAccessor"): net.irisshaders.batchedentityrendering.mixin.RenderTypeAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.text.TimeZoneFormat$GMTOffsetPatternType"): typeof Internal.TimeZoneFormat$GMTOffsetPatternType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.RandomSelectorFeature"): typeof Internal.RandomSelectorFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.PointedDripstoneFeature"): typeof Internal.PointedDripstoneFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.entities.living.vanilla.CowEntityJS"): typeof Internal.CowEntityJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.client.VariantBlockStateGenerator$Variant"): typeof Internal.VariantBlockStateGenerator$Variant;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundCustomPayloadPacket"): typeof Internal.ServerboundCustomPayloadPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.recipes.multiblock.block_matchers.IBlockMatcher"): Internal.IBlockMatcher;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.component.FluidComponents$2"): typeof Internal.FluidComponents$2;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.fnc.api.event.PerformSpellAdjustmentEvent"): typeof Internal.PerformSpellAdjustmentEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.component.SimpleMappingRecipeComponent"): typeof Internal.SimpleMappingRecipeComponent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.component.RecipeComponentValue"): typeof Internal.RecipeComponentValue;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.monster.Creeper"): typeof Internal.Creeper;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.mc.text.mixin.AccessRenderBuffers"): Internal.AccessRenderBuffers;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.Display$TextDisplay$TextRenderState"): typeof Internal.Display$TextDisplay$TextRenderState;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.client.render.box.RenderBox"): typeof Internal.RenderBox;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.item.BlockItemWithISTER"): typeof Internal.BlockItemWithISTER;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.ItemLike"): Internal.ItemLike;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.almostreliable.lootjs.kube.wrapper.IntervalJS"): typeof Internal.IntervalJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.CavePlantBlock"): typeof Internal.CavePlantBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.function.LongBinaryOperator"): Internal.LongBinaryOperator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "me.jellysquid.mods.sodium.client.world.WorldRendererExtended"): Internal.WorldRendererExtended;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.types.Type$FieldNotFoundException"): typeof Internal.Type$FieldNotFoundException;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.ClockBlock"): typeof Internal.ClockBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.blaze3d.shaders.BlendMode"): typeof com.mojang.blaze3d.shaders.BlendMode;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.living.BaseLivingEntityBuilder$CustomInstructionKeyframeEventJS"): typeof Internal.BaseLivingEntityBuilder$CustomInstructionKeyframeEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.templatesystem.CappedProcessor"): typeof Internal.CappedProcessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.chunk.ChunkSource"): typeof Internal.ChunkSource;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.unascribed.fabrication.interfaces.ToggleableFurnaceCart"): Internal.ToggleableFurnaceCart;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jozufozu.flywheel.api.Material"): com.jozufozu.flywheel.api.Material;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.util.FluidAmounts"): FluidAmounts;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.loot.predicates.LootItemConditionType"): typeof Internal.LootItemConditionType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.security.Principal"): Internal.Principal;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.data.ExistingFileHelper"): typeof Internal.ExistingFileHelper;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.CreativeModeTab$DisplayItemsGenerator"): Internal.CreativeModeTab$DisplayItemsGenerator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.material.LavaFluid$Flowing"): typeof Internal.LavaFluid$Flowing;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.architectury.event.events.common.ChatEvent$ChatComponent"): Internal.ChatEvent$ChatComponent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.dmnr.common.item.BrimstoneChalkItem"): typeof Internal.BrimstoneChalkItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.outliner.Outline"): typeof Internal.Outline;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.behavior.PositionTracker"): Internal.PositionTracker;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.monster.Enemy"): Internal.Enemy;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.registration.ISubtypeRegistration"): Internal.ISubtypeRegistration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.lang.Iterable"): Internal.Iterable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.fnc.common.enchantment.HolySmiteEnchantment"): typeof Internal.HolySmiteEnchantment;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.OceanFloraBlock"): typeof Internal.OceanFloraBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.RegisterParticleProvidersEvent"): typeof Internal.RegisterParticleProvidersEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.TreeStarBlock"): typeof Internal.TreeStarBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.living.vanilla.AxolotlJSBuilder"): typeof Internal.AxolotlJSBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.util.ClassWrapper"): typeof Internal.ClassWrapper;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.common.collect.ImmutableMultiset"): typeof Internal.ImmutableMultiset;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.font.FontSet"): typeof Internal.FontSet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.WallBlock"): typeof Internal.WallBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.block.RandomTickCallbackJS"): typeof Internal.RandomTickCallbackJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.runtime.IIngredientVisibility"): Internal.IIngredientVisibility;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.synchronization.brigadier.LongArgumentInfo$Template"): typeof Internal.LongArgumentInfo$Template;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.crafting.ShulkerBoxColoring"): typeof Internal.ShulkerBoxColoring;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.capabilities.resource.SyncStatus"): typeof Internal.SyncStatus;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.entity.TransientEntitySectionManager"): typeof Internal.TransientEntitySectionManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.nonliving.vanilla.EyeOfEnderEntityBuilder"): typeof Internal.EyeOfEnderEntityBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.extensions.IForgeEntity"): Internal.IForgeEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.packs.PackType"): typeof Internal.PackType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.Font$DisplayMode"): typeof Internal.Font$DisplayMode;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.particle.SpriteSet"): Internal.SpriteSet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.Vanishable"): Internal.Vanishable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.monster.AbstractIllager$IllagerArmPose"): typeof Internal.AbstractIllager$IllagerArmPose;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.level.feature.AcidVentFeature"): typeof Internal.AcidVentFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.interfaces.INoCreeperLingering"): Internal.INoCreeperLingering;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.LevelSummary$BackupStatus"): typeof Internal.LevelSummary$BackupStatus;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ClientChatReceivedEvent"): typeof Internal.ClientChatReceivedEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.EndRodBlock"): typeof Internal.EndRodBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.extensions.IForgeModelBaker"): Internal.IForgeModelBaker;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.authlib.UserType"): typeof Internal.UserType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.common.collect.Table$Cell"): Internal.Table$Cell;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.RenderStateShard$ColorLogicStateShard"): typeof Internal.RenderStateShard$ColorLogicStateShard;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.Block"): typeof Internal.Block;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.event.KeyListener"): Internal.KeyListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.util.Either"): typeof Internal.Either;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.api.component.ISideConfigComponent"): Internal.ISideConfigComponent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.doubles.Double2IntFunction"): Internal.Double2IntFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.configurations.DeltaFeatureConfiguration"): typeof Internal.DeltaFeatureConfiguration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.fnc.api.wildmagic.WildMagic"): typeof Internal.WildMagic;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.RadrockUraniumOreBlock"): typeof Internal.RadrockUraniumOreBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.vehicle.MinecartSpawner"): typeof Internal.MinecartSpawner;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "top.theillusivec4.curios.mixin.core.AccessorEntity"): Internal.AccessorEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.booleans.Boolean2ByteFunction"): Internal.Boolean2ByteFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundPlaceRecipePacket"): typeof Internal.ServerboundPlaceRecipePacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.lighting.LightEventListener"): Internal.LightEventListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.blockpredicates.StateTestingPredicate"): typeof Internal.StateTestingPredicate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.gui.sync.GuiSync"): typeof Internal.GuiSync;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.inventory.LoomMenu"): typeof Internal.LoomMenu;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.state.StateDefinition"): typeof Internal.StateDefinition;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.prunoideae.powerfuljs.events.BlockEntityCapEventJS"): typeof Internal.BlockEntityCapEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.chunk.CarvingMask"): typeof Internal.CarvingMask;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.kosmx.playerAnim.core.util.Vector3"): typeof dev.kosmx.playerAnim.core.util.Vector3;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "Tavi007.ElementalCombat.potions.ElementalResistanceEffect"): typeof Internal.ElementalResistanceEffect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.graphics.text.ShapedText"): typeof Internal.ShapedText;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.RenderLevelStageEvent"): typeof Internal.RenderLevelStageEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.beneficial.EffectBulwark"): typeof Internal.EffectBulwark;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.network.messages.to_server.InscriptionTableSetShapeMessage"): typeof Internal.InscriptionTableSetShapeMessage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.integration.forge.jei.RemoveJEICategoriesEvent"): typeof Internal.RemoveJEICategoriesEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.floats.FloatSpliterator"): Internal.FloatSpliterator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.util.Function9"): Internal.Function9;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$LivingEntityContext"): typeof Internal.ContextUtils$LivingEntityContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.finndog.mss.mixins.world.WorldGenRegionAccessor"): com.finndog.mss.mixins.world.WorldGenRegionAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.multiplayer.ServerData$ServerPackStatus"): typeof Internal.ServerData$ServerPackStatus;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.sensing.VillagerBabiesSensor"): typeof Internal.VillagerBabiesSensor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.living.vanilla.HorseJSBuilder"): typeof Internal.HorseJSBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.relic.ItemAstroBlade"): typeof Internal.ItemAstroBlade;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.core.keyframe.event.SoundKeyframeEvent"): typeof Internal.SoundKeyframeEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.caffeinemc.mods.sodium.api.vertex.attributes.CommonVertexAttribute"): typeof Internal.CommonVertexAttribute;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.LightTexture"): typeof Internal.LightTexture;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.registration.IRecipeTransferRegistration"): Internal.IRecipeTransferRegistration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.block.custom.CropBlockBuilder$SurviveCallback"): Internal.CropBlockBuilder$SurviveCallback;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.server.item.ItemUmvuthanaMask"): typeof Internal.ItemUmvuthanaMask;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.ChunkBufferBuilderPack"): typeof Internal.ChunkBufferBuilderPack;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.forge.GenericForgeEventConsumer"): Internal.GenericForgeEventConsumer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.util.Function13"): Internal.Function13;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.lodestar.lodestone.systems.particle.SimpleParticleOptions"): typeof Internal.SimpleParticleOptions;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.attributes.AttributeModifier$Operation"): typeof Internal.AttributeModifier$Operation;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.items.SliceMapItem$DepthMapData"): typeof Internal.SliceMapItem$DepthMapData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.transition.Transition$EpicenterCallback"): Internal.Transition$EpicenterCallback;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.gui.handlers.IGuiProperties"): Internal.IGuiProperties;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.utility.Pointing"): typeof PonderPointing;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "me.jellysquid.mods.sodium.client.render.immediate.model.ModelPartData"): Internal.ModelPartData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.booleans.Boolean2CharFunction"): Internal.Boolean2CharFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.events.IVillagerBrainEvent"): Internal.IVillagerBrainEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.item.PrimordialArmorItem"): typeof Internal.PrimordialArmorItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.biome.BiomeSpecialEffects$Builder"): typeof Internal.BiomeSpecialEffects$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.tileentities.EldrinAltarTile$ActiveCrystal"): typeof Internal.EldrinAltarTile$ActiveCrystal;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.nio.ByteOrder"): typeof Internal.ByteOrder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "javax.security.auth.Subject"): typeof Internal.Subject;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.event.FocusEvent"): typeof Internal.FocusEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.nick.chimes.block.IronWindChimeBlock"): typeof Internal.IronWindChimeBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.core.animation.AnimatableManager"): typeof Internal.AnimatableManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.ActivatedByAltar"): Internal.ActivatedByAltar;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.client.particle.ParticleHandler$2"): typeof Internal.ParticleHandler$2;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.items.ITieredItem"): Internal.ITieredItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$EntityItemEntityContext"): typeof Internal.ContextUtils$EntityItemEntityContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.Enumeration"): Internal.Enumeration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.item.additional_placements.AdditionalItemPlacement"): typeof Internal.AdditionalItemPlacement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.machine.MachineLocation$Loader"): typeof Internal.MachineLocation$Loader;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.player.PlayerXpEvent"): typeof Internal.PlayerXpEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.player.PlayerRespawnedEventJS"): typeof Internal.PlayerRespawnedEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.lifecycle.ViewModelProvider$Factory"): Internal.ViewModelProvider$Factory;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.phys.shapes.CollisionContext"): Internal.CollisionContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.syncher.SynchedEntityData"): typeof Internal.SynchedEntityData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.Products$P8"): typeof Internal.Products$P8;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.server.item.ItemNagaFang"): typeof Internal.ItemNagaFang;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.gameevent.BlockPositionSource$Type"): typeof Internal.BlockPositionSource$Type;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.shading.FPFragmentBuilder"): Internal.FPFragmentBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.almostreliable.lootjs.loot.LootFunctionsContainer"): Internal.LootFunctionsContainer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$EntityServerLevelContext"): typeof Internal.ContextUtils$EntityServerLevelContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundClientCommandPacket$Action"): typeof Internal.ServerboundClientCommandPacket$Action;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.tileentities.ManaweavingAltarTile"): typeof Internal.ManaweavingAltarTile;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.RopeKnotBlock"): typeof Internal.RopeKnotBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.fluid.FluidBlockBuilder"): typeof Internal.FluidBlockBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.unit.function.FunctionFactory$FuncSupplier"): Internal.FunctionFactory$FuncSupplier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.component.StringComponent"): typeof Internal.StringComponent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.server.block.RakedSandBlock"): typeof Internal.RakedSandBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.player.PlayerEvent$BreakSpeed"): typeof Internal.PlayerEvent$BreakSpeed;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.config.ConfigCallback"): Internal.ConfigCallback;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.ints.Int2ObjectMap$Entry"): Internal.Int2ObjectMap$Entry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.core.WindowKJS"): Internal.WindowKJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "io.ejekta.kambrik.internal.mixins.StructurePoolAccessor"): io.ejekta.kambrik.internal.mixins.StructurePoolAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.amendments.common.block.AbstractCandleSkullBlock"): typeof Internal.AbstractCandleSkullBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.function.IntSupplier"): Internal.IntSupplier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.impl.component.config.RelativeSide"): typeof Internal.RelativeSide;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.FlowerBlock"): typeof Internal.FlowerBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.tree.Statement"): typeof Internal.Statement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.gui.ingredient.ICraftingGridHelper"): Internal.ICraftingGridHelper;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.BasaltPillarFeature"): typeof Internal.BasaltPillarFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.loot.ValidationContext"): typeof Internal.ValidationContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.KelpPlantBlock"): typeof Internal.KelpPlantBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.control.MoveControl"): typeof Internal.MoveControl;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "pie.ilikepiefoo.compat.jei.builder.RecipeCategoryBuilder$IsRecipeHandledByCategory"): Internal.RecipeCategoryBuilder$IsRecipeHandledByCategory;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.valueproviders.TrapezoidFloat"): typeof Internal.TrapezoidFloat;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.registries.IForgeRegistry$CreateCallback"): Internal.IForgeRegistry$CreateCallback;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.component.RecipeComponentWithParent"): Internal.RecipeComponentWithParent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.projectile.SmallFireball"): typeof Internal.SmallFireball;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.entities.living.vanilla.HorseEntityJS"): typeof Internal.HorseEntityJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.Caps"): typeof Internal.Caps;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.items.AbstractMobContainerItem"): typeof Internal.AbstractMobContainerItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.entities.living.vanilla.BlazeEntityJS"): typeof Internal.BlazeEntityJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.EndPortalFrameBlock"): typeof Internal.EndPortalFrameBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.tree.BinaryExpression"): typeof Internal.BinaryExpression;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.resources.RegistryFileCodec"): typeof Internal.RegistryFileCodec;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.entity.layers.RenderLayer"): typeof Internal.RenderLayer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.server.item.ItemGlowingJelly"): typeof Internal.ItemGlowingJelly;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.api.guielement.IGuiElement"): Internal.IGuiElement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.item.BlockItemWithScaffolding"): typeof Internal.BlockItemWithScaffolding;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.types.Type"): typeof com.mojang.datafixers.types.Type;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.constructs.parts.arms.ConstructPartCasterArmRight"): typeof Internal.ConstructPartCasterArmRight;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.fnc.common.item.BlackCatBraceletItem"): typeof Internal.BlackCatBraceletItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.PipelineInfo"): typeof Internal.PipelineInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.monster.CaveSpider"): typeof Internal.CaveSpider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.TwistingVinesFeature"): typeof Internal.TwistingVinesFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.authlib.minecraft.MinecraftSessionService"): Internal.MinecraftSessionService;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.gui.AllIcons"): typeof PonderIcons;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.MothBallBlock"): typeof Internal.MothBallBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.ItemStack$TooltipPart"): typeof Internal.ItemStack$TooltipPart;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.text.TimeZoneNames"): typeof Internal.TimeZoneNames;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.server.ServerLifecycleEvent"): typeof Internal.ServerLifecycleEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "kotlinx.serialization.modules.SerializersModuleCollector"): Internal.SerializersModuleCollector;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.FlushInfo$SubmittedCallback"): Internal.FlushInfo$SubmittedCallback;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.artifice.DisenchanterBlock"): typeof Internal.DisenchanterBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.RenderGuiOverlayEvent"): typeof Internal.RenderGuiOverlayEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.TaskChainer$DelayedTask"): Internal.TaskChainer$DelayedTask;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.monster.Illusioner"): typeof Internal.Illusioner;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.PingPongSpongeBlock"): typeof Internal.PingPongSpongeBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.core.ModifiableItemKJS"): Internal.ModifiableItemKJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.flat.FlatLevelGeneratorPreset"): typeof Internal.FlatLevelGeneratorPreset;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.player.AdvancementEvent"): typeof Internal.AdvancementEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.GlobeBlock"): typeof Internal.GlobeBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.ForgeConfigSpec$ValueSpec"): typeof Internal.ForgeConfigSpec$ValueSpec;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.screens.Screen$DeferredTooltipRendering"): typeof Internal.Screen$DeferredTooltipRendering;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.gui.style.GuiStyle"): typeof Internal.GuiStyle;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.network.ServerPlayerConnection"): Internal.ServerPlayerConnection;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.valueproviders.ClampedInt"): typeof Internal.ClampedInt;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.Products$P14"): typeof Internal.Products$P14;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jozufozu.flywheel.backend.model.BufferBuilderExtension"): Internal.BufferBuilderExtension;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.irisshaders.batchedentityrendering.mixin.BufferSourceAccessor"): Internal.BufferSourceAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.brigadier.ParseResults"): typeof Internal.ParseResults;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.chars.Char2DoubleFunction"): Internal.Char2DoubleFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.damagesource.CombatTracker"): typeof Internal.CombatTracker;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jtorleonstudios.libraryferret.blocks.Blocks$1"): typeof Internal.Blocks$1;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.lodestar.lodestone.systems.particle.data.spin.SpinParticleData"): typeof Internal.SpinParticleData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.synth.PerlinSimplexNoise"): typeof Internal.PerlinSimplexNoise;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.inventory.ContainerSynchronizer"): Internal.ContainerSynchronizer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.keksuccino.drippyloadingscreen.mixin.mixins.common.client.IMixinMinecraft"): Internal.IMixinMinecraft;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.loot.LootParams$DynamicDrop"): Internal.LootParams$DynamicDrop;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.init.StructureCreatorItem"): typeof Internal.StructureCreatorItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.common.cache.Cache"): Internal.Cache;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.living.BaseLivingEntityBuilder$AnimationEventJS"): typeof Internal.BaseLivingEntityBuilder$AnimationEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.level.structure.ForlornCanyonStructure"): typeof Internal.ForlornCanyonStructure;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.blay09.mods.balm.api.event.BalmEvent"): typeof Internal.BalmEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.artifice.WardingCandleBlock"): typeof Internal.WardingCandleBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.core.HolderSet$Named"): typeof Internal.HolderSet$Named;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.network.NetworkDirection"): typeof Internal.NetworkDirection;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.floats.FloatList"): Internal.FloatList;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.GenerationStep$Decoration"): typeof Internal.GenerationStep$Decoration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.abdelaziz.canary.mixin.world.combined_heightmap_update.HeightmapAccessor"): Internal.HeightmapAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.almostreliable.lootjs.core.ILootAction"): Internal.ILootAction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexthe666.citadel.item.ItemCitadelBook"): typeof Internal.ItemCitadelBook;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.item.PrimitiveClubItem"): typeof Internal.PrimitiveClubItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.ForgeMod$1"): typeof Internal.ForgeMod$1;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.kosmx.playerAnim.api.IPlayer"): Internal.IPlayer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.utility.CloudBlock"): typeof Internal.CloudBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.structures.Sunken_City_Structure"): typeof Internal.Sunken_City_Structure;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.sorcery.ItemSpellBook"): typeof Internal.ItemSpellBook;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.gson.Gson"): typeof Internal.Gson;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.core.keyframe.event.data.CustomInstructionKeyframeData"): typeof Internal.CustomInstructionKeyframeData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.bettercombat.api.MinecraftClient_BetterCombat"): Internal.MinecraftClient_BetterCombat;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.runtime.IClickableIngredient"): Internal.IClickableIngredient;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.level.structure.ForlornBridgeStructure"): typeof Internal.ForlornBridgeStructure;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.Hash"): Internal.Hash;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.blocks.tile.IEldrinConsumerTile"): Internal.IEldrinConsumerTile;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.gui.KubeJSGUI"): typeof Internal.KubeJSGUI;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.core.MaskFilter"): typeof Internal.MaskFilter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.blocks.TrapBlock"): typeof Internal.TrapBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.ViewArea"): typeof Internal.ViewArea;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jozufozu.flywheel.backend.instancing.blockentity.BlockEntityTypeExtension"): Internal.BlockEntityTypeExtension;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.state.StateHolder"): typeof Internal.StateHolder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.architectury.extensions.injected.InjectedBucketItemExtension"): Internal.InjectedBucketItemExtension;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.util.OutputInt"): typeof Internal.OutputInt;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.SconceWallBlock"): typeof Internal.SconceWallBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.util.AttachedData"): typeof Internal.AttachedData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2backpack.content.quickswap.common.SingleSwapItem"): typeof Internal.SingleSwapItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.bytes.Byte2BooleanFunction"): Internal.Byte2BooleanFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.LevelStorageSource$LevelDirectory"): typeof Internal.LevelStorageSource$LevelDirectory;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.player.AdvancementJS"): typeof Internal.AdvancementJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.DataFixer"): Internal.DataFixer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.LerpingModel"): Internal.LerpingModel;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "me.jellysquid.mods.sodium.client.render.viewport.CameraTransform"): typeof Internal.CameraTransform;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.gui.style.ControlFormatting$ControlStyleFace"): typeof Internal.ControlFormatting$ControlStyleFace;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jtorleonstudios.libraryferret.blocks.UnbreakableBeacon"): typeof Internal.UnbreakableBeacon;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.text.SimpleDateFormat"): typeof com.ibm.icu.text.SimpleDateFormat;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "vazkii.patchouli.mixin.client.AccessorScreen"): Internal.AccessorScreen;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.time.Instant"): typeof Internal.Instant;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.serialization.codecs.PrimitiveCodec"): Internal.PrimitiveCodec;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.neutral.EffectSoaked"): typeof Internal.EffectSoaked;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.dmnr.common.effects.neutral.FlyDisabledMobEffect"): typeof Internal.FlyDisabledMobEffect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.LifeCycle"): Internal.LifeCycle;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.component.ArrayRecipeComponent"): typeof Internal.ArrayRecipeComponent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.extensions.IForgeMenuType"): Internal.IForgeMenuType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.prunoideae.powerfuljs.capabilities.forge.mods.curios.CapabilityCurios$AttributeModificationContext"): typeof Internal.CapabilityCurios$AttributeModificationContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.machine.CustomMachine"): typeof Internal.CustomMachine;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.lwjgl.system.CustomBuffer"): typeof Internal.CustomBuffer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.resources.model.BakedModel"): Internal.BakedModel;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.crafting.ShapedRecipe"): typeof Internal.ShapedRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.kinds.Applicative$Mu"): Internal.Applicative$Mu;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.telemetry.TelemetryProperty$Exporter"): Internal.TelemetryProperty$Exporter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.image.ImageProducer"): Internal.ImageProducer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.capabilities.Capability"): typeof Internal.Capability;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.goal.GoalSelector"): typeof Internal.GoalSelector;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.nbt.Tag"): Internal.Tag;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.item.ItemSmeltedEventJS"): typeof Internal.ItemSmeltedEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.PewenPinesBlock"): typeof Internal.PewenPinesBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.almostreliable.ponderjs.util.BlockStateFunction"): Internal.BlockStateFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.crafting.Ingredient"): typeof Internal.Ingredient;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.StemGrownBlock"): typeof Internal.StemGrownBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.SkullBlock$Type"): Internal.SkullBlock$Type;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.screens.worldselection.WorldCreationContext$OptionsModifier"): Internal.WorldCreationContext$OptionsModifier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.maven.artifact.versioning.Restriction"): typeof Internal.Restriction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.math.MathContext"): typeof Internal.MathContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.item.CaveInfoItem"): typeof Internal.CaveInfoItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.model.data.ModelProperty"): typeof Internal.ModelProperty;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.frog.Tadpole"): typeof Internal.Tadpole;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.blaze3d.shaders.FogShape"): typeof Internal.FogShape;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.items.QuiverItem"): typeof Internal.QuiverItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.ParticleStatus"): typeof Internal.ParticleStatus;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.loot.entries.LootPoolEntryContainer$Builder"): typeof Internal.LootPoolEntryContainer$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.BossEvent"): typeof Internal.BossEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "me.Thelnfamous1.mobplayeranimator.api.HumanoidModelAccess"): Internal.HumanoidModelAccess;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.config.Node"): typeof org.apache.logging.log4j.core.config.Node;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.npc.InventoryCarrier"): Internal.InventoryCarrier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.extensions.common.IClientMobEffectExtensions"): Internal.IClientMobEffectExtensions;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.config.ImageResourceConfig"): typeof Internal.ImageResourceConfig;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.artifice.FactionSpecificSpellModifierRing"): typeof Internal.FactionSpecificSpellModifierRing;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.player.SleepingTimeCheckEvent"): typeof Internal.SleepingTimeCheckEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexthe666.citadel.client.event.EventPosePlayerHand"): typeof Internal.EventPosePlayerHand;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.datatransfer.ClipboardOwner"): Internal.ClipboardOwner;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.structures.JigsawStructure"): typeof Internal.JigsawStructure;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.DensityFunction$FunctionContext"): Internal.DensityFunction$FunctionContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundSetCameraPacket"): typeof Internal.ClientboundSetCameraPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "snownee.jade.api.Accessor$ClientHandler"): Internal.Accessor$ClientHandler;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.inventory.CraftingMenu"): typeof Internal.CraftingMenu;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.blaze3d.vertex.VertexBuffer"): typeof Internal.VertexBuffer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.starfish_studios.bbb.block.MouldingBlock"): typeof Internal.MouldingBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.model.geom.builders.LayerDefinition"): typeof Internal.LayerDefinition;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.architectury.extensions.injected.InjectedItemExtension"): Internal.InjectedItemExtension;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.living.vanilla.GuardianJSBuilder"): typeof Internal.GuardianJSBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.chat.OutgoingChatMessage"): Internal.OutgoingChatMessage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.inventory.ContainerData"): Internal.ContainerData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.WitherSkullBlock"): typeof Internal.WitherSkullBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.ThreadContext$ContextStack"): Internal.ThreadContext$ContextStack;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.living.vanilla.CatJSBuilder"): typeof Internal.CatJSBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.crafting.RecipeSerializer"): Internal.RecipeSerializer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.artifice.FortuneRing"): typeof Internal.FortuneRing;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "noobanidus.mods.lootr.block.LootrChestBlock"): typeof Internal.LootrChestBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.state.properties.BlockSetType"): typeof Internal.BlockSetType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.integration.kubejs.function.MachineJS"): typeof CustomMachine;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.RecipeBookCategories"): typeof Internal.RecipeBookCategories;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.packs.resources.ResourceManager"): Internal.ResourceManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.yungnickyoung.minecraft.yungsapi.world.structure.terrainadaptation.EnhancedTerrainAdaptationType"): Internal.EnhancedTerrainAdaptationType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.CandleCakeBlock"): typeof Internal.CandleCakeBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.common.collect.UnmodifiableListIterator"): typeof Internal.UnmodifiableListIterator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.User$Type"): typeof Internal.User$Type;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.BigDripleafBlock"): typeof Internal.BigDripleafBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.item.IFirstPersonAnimationProvider"): Internal.IFirstPersonAnimationProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.crafting.Recipe"): Internal.Recipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.item.custom.HoeItemBuilder"): typeof Internal.HoeItemBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.runtime.IEditModeConfig$HideMode"): typeof Internal.IEditModeConfig$HideMode;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "pie.ilikepiefoo.compat.jei.builder.RecipeCategoryBuilder"): typeof Internal.RecipeCategoryBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.model.HeadedModel"): Internal.HeadedModel;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.network.ICustomPacket"): Internal.ICustomPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.item.StageBarrierBlockItem"): typeof Internal.StageBarrierBlockItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.Products$P3"): typeof Internal.Products$P3;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.arguments.EntityArgument$Info"): typeof Internal.EntityArgument$Info;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.entities.nonliving.vanilla.BoatEntityJS"): typeof Internal.BoatEntityJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.irisshaders.batchedentityrendering.impl.RenderBuffersExt"): Internal.RenderBuffersExt;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "snownee.jade.api.callback.JadeItemModNameCallback"): Internal.JadeItemModNameCallback;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.horse.SkeletonHorse"): typeof Internal.SkeletonHorse;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.bytes.ByteStack"): Internal.ByteStack;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.function.LongSupplier"): Internal.LongSupplier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.inventory.SmokerMenu"): typeof Internal.SmokerMenu;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.VinesFeature"): typeof Internal.VinesFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.runtime.IIngredientManager"): Internal.IIngredientManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundContainerButtonClickPacket"): typeof Internal.ServerboundContainerButtonClickPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.PlayerDataStorage"): typeof Internal.PlayerDataStorage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.crafting.machine.CustomMachineRecipe"): typeof Internal.CustomMachineRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.gui.event.GuiTooltipEvent"): typeof Internal.GuiTooltipEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.color.ColorSpace"): typeof Internal.ColorSpace;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundUpdateRecipesPacket"): typeof Internal.ClientboundUpdateRecipesPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.HeartOfIronBlock"): typeof Internal.HeartOfIronBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.Map$Entry"): Internal.Map$Entry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.EntityType"): typeof Internal.EntityType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.SirenLightBlock"): typeof Internal.SirenLightBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.BeaconBlock"): typeof Internal.BeaconBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.quest.task.Task"): typeof Internal.Task;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.forgespi.language.ILifecycleEvent"): Internal.ILifecycleEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.configurations.SpringConfiguration"): typeof Internal.SpringConfiguration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.math.BigInteger"): typeof Internal.BigInteger;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundLoginPacket"): typeof Internal.ClientboundLoginPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.navigation.FocusNavigationEvent$ArrowNavigation"): typeof Internal.FocusNavigationEvent$ArrowNavigation;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.rhino.mod.util.color.NoColor"): typeof Internal.NoColor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.items.TimberFrameItem"): typeof Internal.TimberFrameItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.brigadier.context.ParsedArgument"): typeof Internal.ParsedArgument;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.navigation.ScreenRectangle"): typeof Internal.ScreenRectangle;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.relic.MithionsMagnificentMbag"): typeof Internal.MithionsMagnificentMbag;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.concurrent.ExecutorService"): Internal.ExecutorService;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.RedstoneIlluminatorBlock"): typeof Internal.RedstoneIlluminatorBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.util.Currency"): typeof com.ibm.icu.util.Currency;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.harmful.EffectHeatwave"): typeof Internal.EffectHeatwave;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.model.geom.builders.CubeListBuilder"): typeof Internal.CubeListBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "snownee.jade.api.view.ProgressView"): typeof Internal.ProgressView;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.Spliterator$OfLong"): Internal.Spliterator$OfLong;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$ArrowEntityHitContext"): typeof Internal.ContextUtils$ArrowEntityHitContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.GpuBufferPool"): typeof Internal.GpuBufferPool;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.keksuccino.fancymenu.util.resource.resources.audio.IAudio"): Internal.IAudio;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.blaze3d.platform.NativeImage$Format"): typeof Internal.NativeImage$Format;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.LevelRenderer"): typeof Internal.LevelRenderer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.GameRules$Value"): typeof Internal.GameRules$Value;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.yungnickyoung.minecraft.betteroceanmonuments.mixin.accessor.WorldGenRegionAccessor"): com.yungnickyoung.minecraft.betteroceanmonuments.mixin.accessor.WorldGenRegionAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.registries.ForgeRegistry$Snapshot"): typeof Internal.ForgeRegistry$Snapshot;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.Aquifer"): Internal.Aquifer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.FeaturePlaceContext"): typeof Internal.FeaturePlaceContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.dnd.DragGestureRecognizer"): typeof Internal.DragGestureRecognizer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.Appender"): Internal.Appender;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.item.ItemPropertyFunction"): Internal.ItemPropertyFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.artifice.curio.IPreEnchantedItem"): Internal.IPreEnchantedItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.MultifaceSpreader$SpreadPos"): typeof Internal.MultifaceSpreader$SpreadPos;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.registries.tags.ITagManager"): Internal.ITagManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.core.object.Color"): typeof software.bernie.geckolib.core.object.Color;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.StickBlock"): typeof Internal.StickBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.stateproviders.NoiseBasedStateProvider"): typeof Internal.NoiseBasedStateProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.base.IRadialMenuItem"): Internal.IRadialMenuItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.block.entity.BlockEntityCallback"): Internal.BlockEntityCallback;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.screens.Overlay"): typeof Internal.Overlay;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "pie.ilikepiefoo.compat.jei.events.RegisterRecipeCatalystsEventJS"): typeof Internal.RegisterRecipeCatalystsEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.loot.providers.number.NumberProvider"): Internal.NumberProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.doubles.Double2ObjectFunction"): Internal.Double2ObjectFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.CreativeModeTab"): typeof Internal.CreativeModeTab;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "me.jellysquid.mods.sodium.client.render.chunk.map.ClientChunkEventListener"): Internal.ClientChunkEventListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.ritual.MoteItem"): typeof Internal.MoteItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.MenuShortcut"): typeof Internal.MenuShortcut;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.async.AsyncLoggerConfig"): typeof Internal.AsyncLoggerConfig;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.gui.widgets.ISlottedWidgetFactory"): Internal.ISlottedWidgetFactory;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.event.ComponentListener"): Internal.ComponentListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.level.gen.properties.AddSpawnProperties"): typeof Internal.AddSpawnProperties;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.core.BlockBuilderProvider"): Internal.BlockBuilderProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.foliageplacers.MegaPineFoliagePlacer"): typeof Internal.MegaPineFoliagePlacer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.BaseCoralWallFanBlock"): typeof Internal.BaseCoralWallFanBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.lang.Package"): typeof Internal.Package;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.DirectContext"): typeof Internal.DirectContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.irisshaders.iris.fantastic.PhasedParticleEngine"): Internal.PhasedParticleEngine;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.blaze3d.platform.GlStateManager$LogicOp"): typeof Internal.GlStateManager$LogicOp;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.artifice.curio.ItemTrickeryBracelet"): typeof Internal.ItemTrickeryBracelet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.monster.ZombieVillager"): typeof Internal.ZombieVillager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "kotlinx.serialization.encoding.CompositeEncoder"): Internal.CompositeEncoder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.schema.RecipeSchema"): typeof Internal.RecipeSchema;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.almostreliable.lootjs.loot.AddAttributesFunction$Modifier$Builder"): typeof Internal.AddAttributesFunction$Modifier$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.SpawnGroupData"): Internal.SpawnGroupData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.blaze3d.pipeline.RenderCall"): Internal.RenderCall;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.stats.ServerRecipeBook"): typeof Internal.ServerRecipeBook;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.integration.RecipeModHelper$Components"): typeof Internal.RecipeModHelper$Components;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.longs.Long2ObjectSortedMap"): Internal.Long2ObjectSortedMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.ContextOptions"): typeof Internal.ContextOptions;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.stages.Stages"): typeof Internal.Stages;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.InfestedBlock"): typeof Internal.InfestedBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.placement.SurfaceWaterDepthFilter"): typeof Internal.SurfaceWaterDepthFilter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.rhino.util.SpecialEquality"): Internal.SpecialEquality;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.serialization.ListBuilder"): Internal.ListBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.yungnickyoung.minecraft.yungsapi.mixin.accessor.ListPoolElementAccessor"): Internal.ListPoolElementAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.neutral.EffectColdDark"): typeof Internal.EffectColdDark;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.player.Inventory"): typeof Internal.Inventory;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.security.ProtectionDomain"): typeof Internal.ProtectionDomain;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "javax.swing.text.AttributeSet$CharacterAttribute"): Internal.AttributeSet$CharacterAttribute;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.furnace.FurnaceFuelBurnTimeEvent"): typeof Internal.FurnaceFuelBurnTimeEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.SpawnerBlock"): typeof Internal.SpawnerBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.BeehiveBlockEntity$BeeReleaseStatus"): typeof Internal.BeehiveBlockEntity$BeeReleaseStatus;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.server.config.ConfigHandler$BiomeConfig"): typeof Internal.ConfigHandler$BiomeConfig;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.irisshaders.iris.api.v0.item.IrisItemLightProvider"): Internal.IrisItemLightProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "me.fengming.renderjs.core.RenderObjectManager"): typeof RenderObjectManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.boss.enderdragon.phases.AbstractDragonPhaseInstance"): typeof Internal.AbstractDragonPhaseInstance;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.Comparator"): Internal.Comparator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.RenderBuffers"): typeof Internal.RenderBuffers;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.ShaderInstance"): typeof Internal.ShaderInstance;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.status.ServerStatus"): typeof Internal.ServerStatus;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.horse.AbstractChestedHorse"): typeof Internal.AbstractChestedHorse;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbxmodcompat.ftbquests.kubejs.CustomRewardEventJS"): typeof Internal.CustomRewardEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.runtime.config.IJeiConfigCategory"): Internal.IJeiConfigCategory;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.RenderTooltipEvent$Pre"): typeof Internal.RenderTooltipEvent$Pre;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.advancements.critereon.DeserializationContext"): typeof Internal.DeserializationContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "javax.swing.text.MutableAttributeSet"): Internal.MutableAttributeSet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.GraphicsStatus"): typeof Internal.GraphicsStatus;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.joml.Vector4i"): typeof Internal.Vector4i;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.prunoideae.powerfuljs.capabilities.forge.mods.curios.CapabilitiesCurios"): CuriosCapabilityBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.particle.ParticleProvider$Sprite"): Internal.ParticleProvider$Sprite;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.util.NonNullFunction"): Internal.NonNullFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.Attachment"): typeof Internal.Attachment;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.spells.attributes.AttributeValuePair"): typeof Internal.AttributeValuePair;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.api.IAntiqueTextProvider"): Internal.IAntiqueTextProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.util.WatchManager"): typeof Internal.WatchManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.abdelaziz.canary.mixin.util.accessors.EntitySectionAccessor"): Internal.EntitySectionAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.synchronization.brigadier.FloatArgumentInfo$Template"): typeof Internal.FloatArgumentInfo$Template;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "javax.accessibility.AccessibleTable"): Internal.AccessibleTable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jozufozu.flywheel.util.transform.Transform"): Internal.Transform;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.joml.Quaternionf"): typeof Quaternionf;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.BackendTexture"): typeof Internal.BackendTexture;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "snownee.jade.api.view.ItemView"): typeof Internal.ItemView;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.configurations.NetherForestVegetationConfig"): typeof Internal.NetherForestVegetationConfig;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.IItemDecorator"): Internal.IItemDecorator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.dmnr.common.item.dragonmagearmor.AbyssalDragonMageArmorItem"): typeof Internal.AbyssalDragonMageArmorItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.util.Either$Mu"): typeof Internal.Either$Mu;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.sorcery.MagelightBlock"): typeof Internal.MagelightBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.item.TotemOfPossessionItem"): typeof Internal.TotemOfPossessionItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.items.Meat_Shredder"): typeof Internal.Meat_Shredder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "io.ejekta.bountiful.content.DecreeItem"): typeof Internal.DecreeItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.finndog.mss.mixins.structures.SinglePoolElementAccessor"): com.finndog.mss.mixins.structures.SinglePoolElementAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "software.bernie.geckolib.core.keyframe.event.data.ParticleKeyframeData"): typeof Internal.ParticleKeyframeData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.packs.repository.Pack$ResourcesSupplier"): Internal.Pack$ResourcesSupplier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.item.ItemEvent"): typeof Internal.ItemEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.UrnBlock"): typeof net.mehvahdjukaar.supplementaries.common.block.blocks.UrnBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.shorts.Short2IntFunction"): Internal.Short2IntFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.serialization.Decoder$Simple"): Internal.Decoder$Simple;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.entity.LivingEntityDeathEventJS"): typeof Internal.LivingEntityDeathEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.MossBlock"): typeof Internal.MossBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundClientInformationPacket"): typeof Internal.ServerboundClientInformationPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.level.ThreadedLevelLightEngine"): typeof Internal.ThreadedLevelLightEngine;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.data.ExistingFileHelper$IResourceType"): Internal.ExistingFileHelper$IResourceType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.SoundType"): typeof SoundType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.BucketItem"): typeof Internal.BucketItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.api.crafting.ProcessorType"): typeof Internal.ProcessorType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.loot.entries.AlternativesEntry$Builder"): typeof Internal.AlternativesEntry$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.spells.base.IModifiedSpellPart"): Internal.IModifiedSpellPart;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "me.jellysquid.mods.sodium.client.render.chunk.map.ChunkTracker"): typeof Internal.ChunkTracker;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.BonusChestFeature"): typeof Internal.BonusChestFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.state.properties.DoorHingeSide"): typeof Internal.DoorHingeSide;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.level.ChunkHolder$PlayerProvider"): Internal.ChunkHolder$PlayerProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.block.FarmlandTrampledEventJS"): typeof Internal.FarmlandTrampledEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.constructs.parts.arms.ConstructPartHammerArmLeft"): typeof Internal.ConstructPartHammerArmLeft;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.chunk.RenderRegionCache"): typeof Internal.RenderRegionCache;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.server.CustomCommandEventJS"): typeof Internal.CustomCommandEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundRespawnPacket"): typeof Internal.ClientboundRespawnPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexthe666.citadel.server.block.CitadelLecternBlock"): typeof Internal.CitadelLecternBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "snownee.jade.api.callback.JadeAfterRenderCallback"): Internal.JadeAfterRenderCallback;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.armortrim.TrimMaterial"): typeof Internal.TrimMaterial;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.function.ToIntFunction"): Internal.ToIntFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "pie.ilikepiefoo.compat.jei.events.JEIEventJS"): typeof Internal.JEIEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.scores.criteria.ObjectiveCriteria"): typeof Internal.ObjectiveCriteria;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.function.ToDoubleFunction"): Internal.ToDoubleFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.FurnaceBlockEntity"): typeof Internal.FurnaceBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.debug.BeeDebugRenderer$HiveInfo"): typeof Internal.BeeDebugRenderer$HiveInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.abdelaziz.canary.common.entity.movement_tracker.EntityMovementTrackerSection"): Internal.EntityMovementTrackerSection;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.starfish_studios.bbb.item.DescriptionBlockItem"): typeof Internal.DescriptionBlockItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.runtime.IIngredientListOverlay"): Internal.IIngredientListOverlay;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.villager_lootables.LootPouchItem"): typeof Internal.LootPouchItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.block.BlockRightClickedEventJS"): typeof Internal.BlockRightClickedEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.LevelSummary"): typeof Internal.LevelSummary;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.keksuccino.fancymenu.mixin.mixins.common.client.IMixinButton"): Internal.IMixinButton;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.joml.Matrix4x3d"): typeof Internal.Matrix4x3d;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.recipe.category.extensions.vanilla.crafting.ICraftingCategoryExtension"): Internal.ICraftingCategoryExtension;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.starfish_studios.bbb.mixin.WallBlockAccessor"): Internal.WallBlockAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.server.ServerStartingEvent"): typeof Internal.ServerStartingEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "kotlin.reflect.KCallable"): Internal.KCallable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.item.LimestoneSpearItem"): typeof Internal.LimestoneSpearItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.joml.Vector3ic"): Internal.Vector3ic;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.items.DispenserMinecartItem"): typeof Internal.DispenserMinecartItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "vazkii.patchouli.mixin.client.AccessorKeyMapping"): Internal.AccessorKeyMapping;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.blockpredicates.BlockPredicateType"): Internal.BlockPredicateType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2backpack.content.quickswap.quiver.Quiver"): typeof Internal.Quiver;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.DispensibleContainerItem"): Internal.DispensibleContainerItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.MushroomCow"): typeof Internal.MushroomCow;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.core.ItemFrameEntityKJS"): Internal.ItemFrameEntityKJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.recipes.arcanefurnace.ArcaneFurnaceRecipeSerializer"): typeof Internal.ArcaneFurnaceRecipeSerializer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.CraftingTableBlock"): typeof Internal.CraftingTableBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.events.CastingResourceRegistrationEvent"): typeof Internal.CastingResourceRegistrationEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.objects.ObjectSpliterator"): Internal.ObjectSpliterator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.item.ItemStackKey"): typeof Internal.ItemStackKey;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.misc.mob_container.MobContainer"): typeof Internal.MobContainer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.IUniqueKey"): Internal.IUniqueKey;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.ShaderCaps"): typeof Internal.ShaderCaps;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.architectury.event.EventResult"): typeof dev.architectury.event.EventResult;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.keksuccino.fancymenu.mixin.mixins.common.client.IMixinMusicManager"): Internal.IMixinMusicManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.attributes.AttributeSupplier$Builder"): typeof Internal.AttributeSupplier$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundClearTitlesPacket"): typeof Internal.ClientboundClearTitlesPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.schema.minecraft.ShapedRecipeSchema$ShapedRecipeJS"): typeof Internal.ShapedRecipeSchema$ShapedRecipeJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.TickEvent$PlayerTickEvent"): typeof Internal.TickEvent$PlayerTickEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundDamageEventPacket"): typeof Internal.ClientboundDamageEventPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundEntityEventPacket"): typeof Internal.ClientboundEntityEventPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.block.model.ItemOverrides$BakedOverride"): typeof Internal.ItemOverrides$BakedOverride;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$EThunderHitContext"): typeof Internal.ContextUtils$EThunderHitContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.structures.RuinedCitadelStructure"): typeof Internal.RuinedCitadelStructure;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.datatransfer.FlavorEvent"): typeof Internal.FlavorEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.PositionalRandomFactory"): Internal.PositionalRandomFactory;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundSetPlayerTeamPacket$Parameters"): typeof Internal.ClientboundSetPlayerTeamPacket$Parameters;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.time.Instant"): org.apache.logging.log4j.core.time.Instant;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.util.math.vec.Vec3d"): typeof team.creative.creativecore.common.util.math.vec.Vec3d;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.GravelBlock"): typeof Internal.GravelBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.FlowerPotBlock"): typeof Internal.FlowerPotBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.lodestar.lodestone.systems.easing.Easing$ElasticIn"): typeof Internal.Easing$ElasticIn;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.state.BlockBehaviour$StatePredicate"): Internal.BlockBehaviour$StatePredicate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.treedecorators.CocoaDecorator"): typeof Internal.CocoaDecorator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.VegetationPatchFeature"): typeof Internal.VegetationPatchFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.spells.SpellCraftingContext"): typeof Internal.SpellCraftingContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.packs.repository.Pack$Info"): typeof Internal.Pack$Info;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.GraphicsDevice"): typeof Internal.GraphicsDevice;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "me.fengming.renderjs.events.level.RenderLevelEventJS$After"): typeof Internal.RenderLevelEventJS$After;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.time.format.ResolverStyle"): typeof Internal.ResolverStyle;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.util.DataSet"): typeof Internal.DataSet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.electronwill.nightconfig.core.ConfigFormat"): Internal.ConfigFormat;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.stateproviders.RotatedBlockProvider"): typeof Internal.RotatedBlockProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.component.NumberComponent$IntRange"): typeof Internal.NumberComponent$IntRange;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.structures.OceanMonumentStructure"): typeof Internal.OceanMonumentStructure;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.world.BiomeGenerationSettingsBuilder"): typeof Internal.BiomeGenerationSettingsBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.recipes.manaweaving.ManaweaveCacheEffect"): typeof Internal.ManaweaveCacheEffect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.unascribed.fabrication.interfaces.SetActualBypassState"): Internal.SetActualBypassState;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "javax.accessibility.AccessibleRole"): typeof Internal.AccessibleRole;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.brigadier.exceptions.DynamicCommandExceptionType"): typeof Internal.DynamicCommandExceptionType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.crafting.AltarOfAmethystRecipe"): typeof Internal.AltarOfAmethystRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundSetPlayerTeamPacket$Action"): typeof Internal.ClientboundSetPlayerTeamPacket$Action;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.outliner.Outline$OutlineParams"): typeof Internal.Outline$OutlineParams;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.electronwill.nightconfig.core.io.WritingMode"): typeof Internal.WritingMode;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.RandomizableContainerBlockEntity"): typeof Internal.RandomizableContainerBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.gson.GsonBuilder"): typeof Internal.GsonBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.item.PrimedTnt"): typeof Internal.PrimedTnt;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.projectile.ItemSupplier"): Internal.ItemSupplier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.FormattedCharSequence"): Internal.FormattedCharSequence;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.RespawnAnchorBlock"): typeof Internal.RespawnAnchorBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.mixin.accessor.GameRendererAccessor"): Internal.GameRendererAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.almostreliable.ponderjs.particles.ParticleTransformation$Data"): typeof Internal.ParticleTransformation$Data;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.advancements.critereon.EntityPredicate"): typeof Internal.EntityPredicate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.registries.IdMappingEvent"): typeof Internal.IdMappingEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2backpack.content.tool.DestroyTweakerTool"): typeof Internal.DestroyTweakerTool;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.view.View$OnGenericMotionListener"): Internal.View$OnGenericMotionListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.lighting.LevelLightEngine"): typeof Internal.LevelLightEngine;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.tree.Variable"): typeof Internal.Variable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.quest.BaseQuestFile"): typeof Internal.BaseQuestFile;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.constructs.parts.arms.ConstructPartGrabberArmRight"): typeof Internal.ConstructPartGrabberArmRight;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.loot.functions.FunctionUserBuilder"): Internal.FunctionUserBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.util.Function14"): Internal.Function14;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.block.custom.ButtonBlockBuilder"): typeof Internal.ButtonBlockBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbchunks.api.ClaimedChunkManager"): Internal.ClaimedChunkManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.common.reflect.Parameter"): typeof Internal.Parameter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.projectile.ThrownEnderpearl"): typeof Internal.ThrownEnderpearl;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.text.TimeZoneFormat$TimeType"): typeof Internal.TimeZoneFormat$TimeType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.loot.LootDataId"): typeof Internal.LootDataId;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.kostromdan.mods.netjs.tasks.AbstractNetJSTask"): typeof Internal.AbstractNetJSTask;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.lodestar.lodestone.systems.particle.data.color.ColorParticleDataBuilder"): typeof Internal.ColorParticleDataBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.entity.EntitySpawnedEventJS"): typeof Internal.EntitySpawnedEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.item.SeekingArrowItem"): typeof Internal.SeekingArrowItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.WritableBookItem"): typeof Internal.WritableBookItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.util.MeasureUnit$Complexity"): typeof Internal.MeasureUnit$Complexity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.events.ObjectStartedEvent"): typeof Internal.ObjectStartedEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.registration.IRecipeCatalystRegistration"): Internal.IRecipeCatalystRegistration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.gameevent.PositionSource"): Internal.PositionSource;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.structures.NetherFortressStructure"): typeof Internal.NetherFortressStructure;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.floats.AbstractFloatList"): typeof Internal.AbstractFloatList;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.chars.Char2ReferenceFunction"): Internal.Char2ReferenceFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.boss.enderdragon.phases.DragonSittingScanningPhase"): typeof Internal.DragonSittingScanningPhase;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.filter.Filterable"): Internal.Filterable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.extensions.IForgeDimensionSpecialEffects"): Internal.IForgeDimensionSpecialEffects;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.registries.tags.IReverseTag"): Internal.IReverseTag;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.crafting.RecipeManager$CachedCheck"): Internal.RecipeManager$CachedCheck;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.level.feature.FillInBubblesWithWaterFeature"): typeof Internal.FillInBubblesWithWaterFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.MagneticActivatorBlock"): typeof Internal.MagneticActivatorBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.entities.boss.attacks.ThrownAllfatherAxe"): typeof Internal.ThrownAllfatherAxe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.ErrorHandler"): org.apache.logging.log4j.core.ErrorHandler;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.lodestar.lodestone.systems.particle.world.behaviors.components.ExtrudingSparkBehaviorComponent"): typeof Internal.ExtrudingSparkBehaviorComponent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.spells.SpellReagent"): typeof Internal.SpellReagent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.serialization.codecs.RecordCodecBuilder$Mu"): typeof Internal.RecordCodecBuilder$Mu;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.ClassInstanceMultiMap"): typeof Internal.ClassInstanceMultiMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.init.BoxCreatorItem"): typeof Internal.BoxCreatorItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.config.Reconfigurable"): Internal.Reconfigurable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.arguments.EntityArgument$Info$Template"): typeof Internal.EntityArgument$Info$Template;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.animation.BounceInterpolator"): typeof Internal.BounceInterpolator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.util.ITeleporter"): Internal.ITeleporter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.arguments.ResourceOrTagArgument$Result"): Internal.ResourceOrTagArgument$Result;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.ui.input.Key"): typeof dev.ftb.mods.ftblibrary.ui.input.Key;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.client.particle.ParticleRing$EnumRingBehavior"): typeof Internal.ParticleRing$EnumRingBehavior;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.gui.builder.IIngredientAcceptor"): Internal.IIngredientAcceptor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.templatesystem.GravityProcessor"): typeof Internal.GravityProcessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.authlib.minecraft.MinecraftProfileTexture$Type"): typeof Internal.MinecraftProfileTexture$Type;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.level.gen.properties.AddLakeProperties"): typeof Internal.AddLakeProperties;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.UniformDataManager"): typeof Internal.UniformDataManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.pools.StructurePoolElement"): typeof Internal.StructurePoolElement;
        /**
         * Loads the specified class, and returns null if class is not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        tryLoadClass(className: string): any;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.floats.FloatBidirectionalIterator"): Internal.FloatBidirectionalIterator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.player.PlayerAdvancementEventJS"): typeof Internal.PlayerAdvancementEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.entity.EntityAccess"): Internal.EntityAccess;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.constructs.parts.torso.ConstructPartArmorTorso"): typeof Internal.ConstructPartArmorTorso;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.ShaderVar"): typeof Internal.ShaderVar;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.multiplayer.ClientAdvancements"): typeof Internal.ClientAdvancements;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jozufozu.flywheel.core.model.Model"): com.jozufozu.flywheel.core.model.Model;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.Arrays$ArrayList"): typeof Internal.Arrays$ArrayList;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.items.RopeArrowItem"): typeof Internal.RopeArrowItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "kotlin.reflect.KParameter"): Internal.KParameter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.structures.OceanRuinStructure"): typeof Internal.OceanRuinStructure;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.state.properties.Half"): typeof Internal.Half;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.schema.minecraft.ShapelessRecipeSchema$ShapelessRecipeJS"): typeof Internal.ShapelessRecipeSchema$ShapelessRecipeJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.configurations.RootSystemConfiguration"): typeof Internal.RootSystemConfiguration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.lodestar.lodestone.systems.particle.world.options.LodestoneTerrainParticleOptions"): typeof Internal.LodestoneTerrainParticleOptions;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.core.EntityKJS"): Internal.EntityKJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.EntityBlock"): Internal.EntityBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.StructureCheckResult"): typeof Internal.StructureCheckResult;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.GpuBuffer"): typeof Internal.GpuBuffer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.level.feature.MusselFeature"): typeof Internal.MusselFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.fnc.common.item.GlitteringPotatoItem"): typeof Internal.GlitteringPotatoItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.HangingSignItem"): typeof Internal.HangingSignItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.runes.ItemRune"): typeof Internal.ItemRune;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.extensions.IForgeGuiGraphics"): Internal.IForgeGuiGraphics;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "pie.ilikepiefoo.compat.jade.builder.ToggleableProviderBuilder"): typeof Internal.ToggleableProviderBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.decoration.BrazierBlock"): typeof com.mna.blocks.decoration.BrazierBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.EntityEvent"): typeof Internal.EntityEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.block.model.ItemOverrides"): typeof Internal.ItemOverrides;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.extensions.IForgeBakedModel"): Internal.IForgeBakedModel;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.blay09.mods.balm.mixin.SlotAccessor"): Internal.SlotAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.entities.boss.attacks.ThrownWeapon"): typeof Internal.ThrownWeapon;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.message.EntryMessage"): Internal.EntryMessage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.architectury.registry.registries.RegistrySupplier"): Internal.RegistrySupplier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.fragment.FragmentLifecycleCallbacks"): Internal.FragmentLifecycleCallbacks;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.FrogspawnBlock"): typeof Internal.FrogspawnBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.worldgen.WaySignStructure"): typeof Internal.WaySignStructure;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.realmsclient.gui.RealmsDataFetcher"): typeof Internal.RealmsDataFetcher;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.recipes.spells.ComponentRecipe"): typeof Internal.ComponentRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.ui.Theme"): typeof Internal.Theme;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.entity.EntityRenderer"): typeof Internal.EntityRenderer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.material.MapColor"): typeof Internal.MapColor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.CommandBuildContext$MissingTagAccessPolicy"): typeof Internal.CommandBuildContext$MissingTagAccessPolicy;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.schema.RecipeOptional"): Internal.RecipeOptional;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.CommandBuffer"): typeof Internal.CommandBuffer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.illusivesoulworks.comforts.common.item.HammockItem"): typeof Internal.HammockItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.tree.Node"): typeof icyllis.arc3d.compiler.tree.Node;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.prunoideae.powerfuljs.capabilities.forge.CapabilitiesForge"): CapabilityBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.nonliving.BaseEntityBuilder$AnimationEventJS"): typeof Internal.BaseEntityBuilder$AnimationEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.Stack"): it.unimi.dsi.fastutil.Stack;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.event.MouseMotionListener"): Internal.MouseMotionListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.Frame"): typeof Internal.Frame;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.TropicalFish"): typeof Internal.TropicalFish;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.projectile.ThrownExperienceBottle"): typeof Internal.ThrownExperienceBottle;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.templatesystem.rule.blockentity.AppendLoot"): typeof Internal.AppendLoot;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.data.DataProvider"): Internal.DataProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.AbstractCauldronBlock"): typeof Internal.AbstractCauldronBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.TrappedChestBlockEntity"): typeof Internal.TrappedChestBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.MeshDrawTarget"): Internal.MeshDrawTarget;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.LightUpBlock"): typeof Internal.LightUpBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.tree.VariableDecl"): typeof Internal.VariableDecl;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.HorizontalDirectionalBlock"): typeof Internal.HorizontalDirectionalBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.amendments.common.block.DyeCauldronBlock"): typeof Internal.DyeCauldronBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.icon.ImageIcon"): typeof Internal.ImageIcon;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.entities.construct.materials.ConstructMaterialDiamond"): typeof Internal.ConstructMaterialDiamond;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.GlowstoneFeature"): typeof Internal.GlowstoneFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.NeodymiumNodeBlock"): typeof Internal.NeodymiumNodeBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.time.zone.ZoneOffsetTransition"): typeof Internal.ZoneOffsetTransition;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.irisshaders.iris.mixin.rendertype.RenderStateShardAccessor"): net.irisshaders.iris.mixin.rendertype.RenderStateShardAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.RandomState"): typeof Internal.RandomState;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.chunk.ChunkRenderDispatcher$CompiledChunk"): typeof Internal.ChunkRenderDispatcher$CompiledChunk;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.util.math.geo.VectorFan"): typeof Internal.VectorFan;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.gson.ReflectionAccessFilter$FilterResult"): typeof Internal.ReflectionAccessFilter$FilterResult;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.crafting.WeaponfusionRecipe$Serializer"): typeof Internal.WeaponfusionRecipe$Serializer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.block.model.BlockModel$GuiLight"): typeof Internal.BlockModel$GuiLight;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.Camera"): typeof Internal.Camera;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.sound.PlaySoundEvent"): typeof Internal.PlaySoundEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.datatransfer.FlavorListener"): Internal.FlavorListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.realmsclient.dto.RealmsNotification"): typeof Internal.RealmsNotification;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.extensions.IForgeVertexConsumer"): Internal.IForgeVertexConsumer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.sorcery.ItemCrystalOfMemories"): typeof Internal.ItemCrystalOfMemories;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.concurrent.atomic.AtomicReference"): typeof Internal.AtomicReference;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.lwjgl.system.libffi.FFICIF$Buffer"): typeof Internal.FFICIF$Buffer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.ForgeConfigSpec$Range"): typeof Internal.ForgeConfigSpec$Range;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.MouseHandler"): typeof Internal.MouseHandler;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.goal.Goal$Flag"): typeof Internal.Goal$Flag;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.entity.EntitySectionStorage"): typeof Internal.EntitySectionStorage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.special.SpecialRecipeSerializerManager"): typeof Internal.SpecialRecipeSerializerManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "kotlin.reflect.KClassifier"): Internal.KClassifier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.packs.resources.SimplePreparableReloadListener"): typeof Internal.SimplePreparableReloadListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.level.ExplosionJS"): typeof Internal.ExplosionJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.objects.Object2CharFunction"): Internal.Object2CharFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.outliner.Outliner"): typeof Internal.Outliner;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundSetStructureBlockPacket"): typeof Internal.ServerboundSetStructureBlockPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.Rabbit$Variant"): typeof Internal.Rabbit$Variant;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.core.ItemFTBL"): Internal.ItemFTBL;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.nbt.FloatTag"): typeof Internal.FloatTag;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.placement.NoiseThresholdCountPlacement"): typeof Internal.NoiseThresholdCountPlacement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.player.PlayerSetSpawnEvent"): typeof Internal.PlayerSetSpawnEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.rhino.mod.util.MinecraftRemapper"): typeof Internal.MinecraftRemapper;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.items.BlockItemCMRender"): typeof Internal.BlockItemCMRender;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundSetEquipmentPacket"): typeof Internal.ClientboundSetEquipmentPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.SculkCatalystBlockEntity"): typeof Internal.SculkCatalystBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "me.jellysquid.mods.sodium.client.util.sorting.VertexSorters$SortByDistance"): typeof Internal.VertexSorters$SortByDistance;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.entities.construct.materials.ConstructMaterialBone"): typeof Internal.ConstructMaterialBone;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.items.SlingshotItem"): typeof Internal.SlingshotItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.SmokerBlock"): typeof Internal.SmokerBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.core.MinecraftServerKJS"): Internal.MinecraftServerKJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.amendments.common.block.FloorCandleSkullBlock"): typeof Internal.FloorCandleSkullBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2library.serial.recipe.AbstractSmithingRecipe"): typeof Internal.AbstractSmithingRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.placement.StructurePlacementType"): Internal.StructurePlacementType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.recipe.transfer.IRecipeTransferHandler"): Internal.IRecipeTransferHandler;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.image.BufferStrategy"): typeof Internal.BufferStrategy;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerPacketListener"): Internal.ServerPacketListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ScreenEvent$Render$Post"): typeof Internal.ScreenEvent$Render$Post;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.amendments.common.block.CarpetStairBlock"): typeof Internal.CarpetStairBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.AWTEvent"): typeof Internal.AWTEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.monster.piglin.AbstractPiglin"): typeof Internal.AbstractPiglin;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.IMinecartCollisionHandler"): Internal.IMinecartCollisionHandler;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ExperienceOrb"): typeof Internal.ExperienceOrb;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.PowderSnowBlock"): typeof Internal.PowderSnowBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.shading.Varying"): typeof Internal.Varying;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.EnumMap"): typeof Internal.EnumMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "javax.accessibility.AccessibleBundle"): typeof Internal.AccessibleBundle;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.tree.FunctionPrototype"): typeof Internal.FunctionPrototype;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.item.ItemModificationEventJS"): typeof Internal.ItemModificationEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.RegisterNamedRenderTypesEvent"): typeof Internal.RegisterNamedRenderTypesEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.ForgeMod$3"): typeof Internal.ForgeMod$3;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.SmithingTemplateItem"): typeof Internal.SmithingTemplateItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.ShieldItem"): typeof Internal.ShieldItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.DensityFunction$NoiseHolder"): typeof Internal.DensityFunction$NoiseHolder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.core.SectionPos"): typeof Internal.SectionPos;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.longs.AbstractLong2ObjectSortedMap"): typeof Internal.AbstractLong2ObjectSortedMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.spells.parts.SpellEffect$BlockPlaceResult"): typeof Internal.SpellEffect$BlockPlaceResult;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.objects.ObjectIterable"): Internal.ObjectIterable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.living.vanilla.GoatJSBuilder"): typeof Internal.GoatJSBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2modularblock.type.MultipleBlockMethod"): Internal.MultipleBlockMethod;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.OptionalDouble"): typeof Internal.OptionalDouble;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.WorldGenLevel"): Internal.WorldGenLevel;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "malte0811.ferritecore.mixin.blockstatecache.DiscreteVSAccess"): Internal.DiscreteVSAccess;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.integration.kubejs.CustomMachineUpgradeJSBuilder"): typeof Internal.CustomMachineUpgradeJSBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.items.SugarCubeItem"): typeof Internal.SugarCubeItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.loot.predicates.AllOfCondition$Builder"): typeof Internal.AllOfCondition$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.font.FontRenderContext"): typeof Internal.FontRenderContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.StructureSpawnOverride$BoundingBoxType"): typeof Internal.StructureSpawnOverride$BoundingBoxType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.entities.construct.materials.ConstructMaterialWood"): typeof Internal.ConstructMaterialWood;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.level.SleepFinishedTimeEvent"): typeof Internal.SleepFinishedTimeEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.core.particles.DustParticleOptions"): typeof Internal.DustParticleOptions;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.Structure$StructureSettings"): typeof Internal.Structure$StructureSettings;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.unit.token.UnitTokenStream"): typeof Internal.UnitTokenStream;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.ClientRecipeBook"): typeof Internal.ClientRecipeBook;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.joml.Vector4fc"): Internal.Vector4fc;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.resources.HolderSetCodec"): typeof Internal.HolderSetCodec;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.forgespi.language.ModFileScanData$ClassData"): typeof Internal.ModFileScanData$ClassData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.rhino.SymbolScriptable"): Internal.SymbolScriptable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundUpdateMobEffectPacket"): typeof Internal.ClientboundUpdateMobEffectPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.brigadier.arguments.IntegerArgumentType"): typeof Internal.IntegerArgumentType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.items.Bone_Reptile_Armor"): typeof Internal.Bone_Reptile_Armor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.artifice.SpellModifierRing"): typeof Internal.SpellModifierRing;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.illusivesoulworks.comforts.common.block.RopeAndNailBlock"): typeof Internal.RopeAndNailBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2backpack.content.insert.OverlayInsertItem"): Internal.OverlayInsertItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.presets.WorldPreset"): typeof Internal.WorldPreset;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.core.ColorSpace$Connector"): typeof Internal.ColorSpace$Connector;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "kotlin.reflect.KDeclarationContainer"): Internal.KDeclarationContainer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.HangingEntityItem"): typeof Internal.HangingEntityItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.recipes.spells.ShapeRecipeSerializer"): typeof Internal.ShapeRecipeSerializer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.ItemNameBlockItem"): typeof Internal.ItemNameBlockItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.integration.kubejs.requirements.FluidRequirementJS"): Internal.FluidRequirementJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "me.fengming.renderjs.core.RenderObject$ObjectType"): typeof Internal.RenderObject$ObjectType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.spi.LoggerContextShutdownAware"): Internal.LoggerContextShutdownAware;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.abdelaziz.canary.common.world.interests.PointOfInterestStorageExtended"): Internal.PointOfInterestStorageExtended;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.player.ProfileKeyPair"): typeof Internal.ProfileKeyPair;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.boss.enderdragon.phases.EnderDragonPhaseManager"): typeof Internal.EnderDragonPhaseManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.entities.goals.ISuppEvoker"): Internal.ISuppEvoker;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.block.IColored"): Internal.IColored;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "cpw.mods.jarhandling.JarMetadata"): Internal.JarMetadata;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.flat.FlatLevelGeneratorSettings"): typeof Internal.FlatLevelGeneratorSettings;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ScreenEvent$MouseButtonPressed"): typeof Internal.ScreenEvent$MouseButtonPressed;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.view.ViewParent"): Internal.ViewParent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.screens.social.PlayerSocialManager"): typeof Internal.PlayerSocialManager;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.function.IntBinaryOperator"): Internal.IntBinaryOperator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.ints.Int2ShortFunction"): Internal.Int2ShortFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.level.biome.BiomeSourceAccessor"): Internal.BiomeSourceAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.StringRepresentable$EnumCodec"): typeof Internal.StringRepresentable$EnumCodec;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.blaze3d.platform.VideoMode"): typeof Internal.VideoMode;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.api.distmarker.Dist"): typeof Internal.Dist;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.monster.Zoglin"): typeof Internal.Zoglin;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.vehicle.Boat$Type"): typeof Internal.Boat$Type;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.blocks.PointedIcicleBlock"): typeof Internal.PointedIcicleBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.BundlePacket"): typeof Internal.BundlePacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.NavigableMap"): Internal.NavigableMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.chat.SignableCommand$Argument"): typeof Internal.SignableCommand$Argument;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.client.ModelGenerator"): typeof Internal.ModelGenerator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "javax.swing.text.AttributeSet$FontAttribute"): Internal.AttributeSet$FontAttribute;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.graphics.text.ShapedText$RunConsumer"): Internal.ShapedText$RunConsumer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbxmodcompat.ftbquests.kubejs.QuestObjectCompletedEventJS"): typeof Internal.QuestObjectCompletedEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.stream.Collector$Characteristics"): typeof Internal.Collector$Characteristics;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.quest.Chapter"): typeof Internal.Chapter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.monster.RangedAttackMob"): Internal.RangedAttackMob;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.rhino.ExternalArrayData"): Internal.ExternalArrayData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.dmnr.common.item.FactionAmuletItem"): typeof Internal.FactionAmuletItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.crafting.BannerDuplicateRecipe"): typeof Internal.BannerDuplicateRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.crafting.CraftingRecipe"): Internal.CraftingRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.spells.SpellPartTags"): typeof Internal.SpellPartTags;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.state.BlockBehaviour$StateArgumentPredicate"): Internal.BlockBehaviour$StateArgumentPredicate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.gui.element.DelegatedStencilElement"): typeof Internal.DelegatedStencilElement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.config.ItemStackConfig"): typeof Internal.ItemStackConfig;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.core.BlockPos$MutableBlockPos"): typeof Internal.BlockPos$MutableBlockPos;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.artifice.curio.ItemProjectileAmulet"): typeof Internal.ItemProjectileAmulet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.harmful.EffectAsphyxiate"): typeof Internal.EffectAsphyxiate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.artifice.AffinityTinkerBlock"): typeof Internal.AffinityTinkerBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.ModifyRecipeResultCallback"): Internal.ModifyRecipeResultCallback;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.world.BiomeModifier"): Internal.BiomeModifier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.blending.BlendingData"): typeof Internal.BlendingData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "vazkii.patchouli.client.book.BookPage"): typeof Internal.BookPage;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.beneficial.EffectMistForm"): typeof Internal.EffectMistForm;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.resources.metadata.animation.AnimationFrame"): typeof Internal.AnimationFrame;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.mixins.forge.MobBucketItemAccessor"): Internal.MobBucketItemAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "cpw.mods.jarhandling.SecureJar$Provider"): typeof Internal.SecureJar$Provider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jozufozu.flywheel.util.box.ImmutableBox"): Internal.ImmutableBox;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.sorcery.SpectralWebBlock"): typeof Internal.SpectralWebBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.misc.EnchantmentBuilder"): typeof Internal.EnchantmentBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "pie.ilikepiefoo.compat.jade.builder.ViewGroupBuilder"): typeof Internal.ViewGroupBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.AnvilUpdateEvent"): typeof Internal.AnvilUpdateEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "pie.ilikepiefoo.compat.jei.impl.CustomJSRecipe"): typeof Internal.CustomJSRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.templatesystem.StructurePlaceSettings"): typeof Internal.StructurePlaceSettings;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.unit.VariableSet"): typeof Internal.VariableSet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.TaskChainer"): Internal.TaskChainer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "javax.accessibility.AccessibleRelationSet"): typeof Internal.AccessibleRelationSet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.entities.BombEntity$BombType"): typeof Internal.BombEntity$BombType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.biome.BiomeSpecialEffects$GrassColorModifier"): typeof Internal.BiomeSpecialEffects$GrassColorModifier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.core.particles.ParticleGroup"): typeof Internal.ParticleGroup;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.loot.FunctionContainer"): Internal.FunctionContainer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "vazkii.patchouli.client.book.BookContentsBuilder"): typeof Internal.BookContentsBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.RegisterColorHandlersEvent$Block"): typeof Internal.RegisterColorHandlersEvent$Block;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.HugeMushroomBlock"): typeof Internal.HugeMushroomBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.ibm.icu.impl.units.SingleUnitImpl"): typeof Internal.SingleUnitImpl;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.objects.AbstractObject2ObjectFunction"): typeof Internal.AbstractObject2ObjectFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.loot.BlockLootEventJS"): typeof Internal.BlockLootEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.component.ItemComponents$1"): typeof Internal.ItemComponents$1;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.Minecraft$ChatStatus"): typeof Internal.Minecraft$ChatStatus;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundSetJigsawBlockPacket"): typeof Internal.ServerboundSetJigsawBlockPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.model.geom.ModelPart$Visitor"): Internal.ModelPart$Visitor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "snownee.jade.api.IWailaCommonRegistration"): Internal.IWailaCommonRegistration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.tutorial.TutorialSteps"): typeof Internal.TutorialSteps;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.BannerPattern"): typeof Internal.BannerPattern;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.joml.Quaterniondc"): Internal.Quaterniondc;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.structures.Burning_Arena_Structure"): typeof Internal.Burning_Arena_Structure;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.api.crafting.ICraftingContext"): Internal.ICraftingContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.telemetry.TelemetryEventType$Builder"): typeof Internal.TelemetryEventType$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.brigadier.arguments.FloatArgumentType"): typeof Internal.FloatArgumentType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.util.math.matrix.Matrix3"): typeof team.creative.creativecore.common.util.math.matrix.Matrix3;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.security.DomainCombiner"): Internal.DomainCombiner;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.GalenaPillarBlock"): typeof Internal.GalenaPillarBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.chat.ChatTypeDecoration$Parameter"): typeof Internal.ChatTypeDecoration$Parameter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.authlib.ProfileLookupCallback"): Internal.ProfileLookupCallback;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.synth.BlendedNoise"): typeof Internal.BlendedNoise;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.enchantment.FireAspectEnchantment"): typeof Internal.FireAspectEnchantment;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.NameTagItem"): typeof Internal.NameTagItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "yalter.mousetweaks.mixin.AbstractContainerScreenAccessor"): Internal.AbstractContainerScreenAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.monster.piglin.PiglinArmPose"): typeof Internal.PiglinArmPose;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.data.CachedOutput"): Internal.CachedOutput;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.texture.SpriteTicker"): Internal.SpriteTicker;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.BannerBlock"): typeof Internal.BannerBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.entity.EnchantmentTableBlockEntity"): typeof Internal.EnchantmentTableBlockEntity;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.loot.GenericLootEventJS"): typeof Internal.GenericLootEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.behavior.AnimalMakeLove"): typeof Internal.AnimalMakeLove;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.InputType"): typeof Internal.InputType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.authlib.yggdrasil.request.AbuseReportRequest$ThirdPartyServerInfo"): typeof Internal.AbuseReportRequest$ThirdPartyServerInfo;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.block.custom.ShapedBlockBuilder"): typeof Internal.ShapedBlockBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.BeaconBeamBlock"): Internal.BeaconBeamBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbteams.data.TeamArgument$Info"): typeof Internal.TeamArgument$Info;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.lang.Runnable"): Internal.Runnable;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.players.UserWhiteList"): typeof Internal.UserWhiteList;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.ScaffoldingBlockItem"): typeof Internal.ScaffoldingBlockItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.templatesystem.TagMatchTest"): typeof Internal.TagMatchTest;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.model.geom.builders.MeshDefinition"): typeof Internal.MeshDefinition;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.embeddedt.modernfix.duck.ITimeTrackingServer"): Internal.ITimeTrackingServer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.time.Clock"): typeof Internal.Clock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "pie.ilikepiefoo.compat.jei.events.RegisterVanillaCategoryExtensionsEventJS"): typeof Internal.RegisterVanillaCategoryExtensionsEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.nbt.NumericTag"): typeof Internal.NumericTag;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.item.KeybindUsingArmor"): com.github.alexmodguy.alexscaves.server.item.KeybindUsingArmor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.armor.DyeableMageArmor"): typeof Internal.DyeableMageArmor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.quest.QuestObject"): typeof Internal.QuestObject;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$OnEffectContext"): typeof Internal.ContextUtils$OnEffectContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.BucketPickup"): Internal.BucketPickup;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.datafixers.util.Function15"): Internal.Function15;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.items.Dungeon_Eye.MonstrousEyeItem"): typeof Internal.MonstrousEyeItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.architectury.extensions.injected.InjectedFluidExtension"): Internal.InjectedFluidExtension;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.item.custom.RecordItemJS$Builder"): typeof Internal.RecordItemJS$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.irisshaders.iris.shadows.CullingDataCache"): Internal.CullingDataCache;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.longs.LongSet"): Internal.LongSet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.objects.AbstractObject2ObjectMap"): typeof Internal.AbstractObject2ObjectMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.recipe.special.ShapelessKubeJSRecipe"): typeof Internal.ShapelessKubeJSRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.core.cauldron.CauldronInteraction"): Internal.CauldronInteraction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.entities.construct.IConstructDiagnostics$Status"): typeof Internal.IConstructDiagnostics$Status;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.GuanoLayerBlock"): typeof Internal.GuanoLayerBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.items.SackItem"): typeof Internal.SackItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.CommandEvent"): typeof Internal.CommandEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.resources.sounds.SoundInstance"): Internal.SoundInstance;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.constructs.BellOfBidding$Commands"): typeof Internal.BellOfBidding$Commands;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.lwjgl.system.libffi.FFIType$Buffer"): typeof Internal.FFIType$Buffer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "team.creative.creativecore.common.gui.event.GuiEvent"): typeof Internal.GuiEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.ModBlockProperties$PostType"): typeof Internal.ModBlockProperties$PostType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.objects.Reference2ReferenceMap"): Internal.Reference2ReferenceMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.common.collect.ImmutableBiMapFauxverideShim"): typeof Internal.ImmutableBiMapFauxverideShim;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.core.Direction8"): typeof Internal.Direction8;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.Turtle"): typeof Internal.Turtle;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.raid.Raid"): typeof Internal.Raid;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.ui.input.KeyModifiers"): typeof Internal.KeyModifiers;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.TwistingVinesBlock"): typeof Internal.TwistingVinesBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.client.model.IExtraModelDataProvider"): Internal.IExtraModelDataProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.impl.codec.NamedRecordCodec$Mu"): typeof Internal.NamedRecordCodec$Mu;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.pools.StructurePoolElementType"): Internal.StructurePoolElementType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.almostreliable.lootjs.filters.ResourceLocationFilter"): Internal.ResourceLocationFilter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.constructs.parts.arms.ConstructPartAxeArmLeft"): typeof Internal.ConstructPartAxeArmLeft;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.configurations.BlockPileConfiguration"): typeof Internal.BlockPileConfiguration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.LongSummaryStatistics"): typeof Internal.LongSummaryStatistics;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.NetherrackBlock"): typeof Internal.NetherrackBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.LeadItem"): typeof Internal.LeadItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.config.AppenderRef"): typeof Internal.AppenderRef;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.function.IntFunction"): Internal.IntFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.fnc.common.capability.SmiteEntry"): typeof Internal.SmiteEntry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.structures.CataclysmStructure"): typeof Internal.CataclysmStructure;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.chat.MutableComponent"): typeof Internal.MutableComponent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.integration.kubejs.function.Result"): typeof Result;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "kotlinx.serialization.DeserializationStrategy"): Internal.DeserializationStrategy;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.fluids.SoftFluidStack"): typeof Internal.SoftFluidStack;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "me.Thelnfamous1.bettermobcombat.mixin.MobAccessor"): Internal.MobAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.decoration.ScrollshelfBlock"): typeof Internal.ScrollshelfBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.tags.TagEntry$Lookup"): Internal.TagEntry$Lookup;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.item.OrtholanceItem"): typeof Internal.OrtholanceItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.items.Dungeon_Eye.FlameEyeItem"): typeof Internal.FlameEyeItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.valueproviders.BiasedToBottomInt"): typeof Internal.BiasedToBottomInt;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.server.packs.VanillaPackResources"): typeof Internal.VanillaPackResources;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.core.Message"): typeof icyllis.modernui.core.Message;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$MobInteractContext"): typeof Internal.ContextUtils$MobInteractContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.longs.AbstractLong2ObjectFunction"): typeof Internal.AbstractLong2ObjectFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.chat.SignableCommand"): typeof Internal.SignableCommand;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.GameRules"): typeof Internal.GameRules;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.unascribed.fabrication.support.injection.HijackReturn"): typeof Internal.HijackReturn;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.init.CustomMachineTile"): typeof Internal.CustomMachineTile;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.gui.chest.ChestMenuInventoryClickEvent$Callback"): Internal.ChestMenuInventoryClickEvent$Callback;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.cerbon.bosses_of_mass_destruction.block.custom.VineWallBlock"): typeof Internal.VineWallBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.particle.ParticleRenderType"): Internal.ParticleRenderType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.trading.Merchant"): Internal.Merchant;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.blocks.artifice.CoffinBlock"): typeof Internal.CoffinBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.arguments.ResourceOrTagKeyArgument"): typeof Internal.ResourceOrTagKeyArgument;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.ChorusFlowerBlock"): typeof Internal.ChorusFlowerBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.JarBlock"): typeof Internal.JarBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mcreator.campfiresleeper.potion.BackpainMobEffect"): typeof Internal.BackpainMobEffect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.font.TextAttribute"): typeof Internal.TextAttribute;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.brigadier.SingleRedirectModifier"): Internal.SingleRedirectModifier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.StructureSet"): typeof Internal.StructureSet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.crafting.SmithingTrimRecipe"): typeof Internal.SmithingTrimRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.recipes.runeforging.RunescribingRecipeSerializer"): typeof Internal.RunescribingRecipeSerializer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.unit.function.FunctionFactory$Arg3"): Internal.FunctionFactory$Arg3;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "noobanidus.mods.lootr.block.LootrInventoryBlock"): typeof Internal.LootrInventoryBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ClientboundExplodePacket"): typeof Internal.ClientboundExplodePacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.harmful.EffectMindVision"): typeof Internal.EffectMindVision;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.core.UUIDUtil"): typeof Internal.UUIDUtil;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.function.IntUnaryOperator"): Internal.IntUnaryOperator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.living.BaseLivingEntityBuilder$ICustomInstructionListenerJS"): Internal.BaseLivingEntityBuilder$ICustomInstructionListenerJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.CommandBlock"): typeof Internal.CommandBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.events.ObjectStartedEvent$QuestEvent"): typeof Internal.ObjectStartedEvent$QuestEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.LevelStorageSource$LevelStorageAccess"): typeof Internal.LevelStorageSource$LevelStorageAccess;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.KeyDispatchDataCodec"): typeof Internal.KeyDispatchDataCodec;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.objects.Object2BooleanFunction"): Internal.Object2BooleanFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.crafting.RepairItemRecipe"): typeof Internal.RepairItemRecipe;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.server.item.ItemDart"): typeof Internal.ItemDart;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.engine.shading.ShaderBuilder"): Internal.ShaderBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.projectile.AbstractHurtingProjectile"): typeof Internal.AbstractHurtingProjectile;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.starfish_studios.bbb.block.LayerBlock"): typeof Internal.LayerBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.integration.kubejs.requirements.DurabilityRequirementJS"): Internal.DurabilityRequirementJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.util.valueproviders.ClampedNormalInt"): typeof Internal.ClampedNormalInt;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.api.component.handler.IComponentHandler"): Internal.IComponentHandler;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.resources.metadata.animation.FrameSize"): typeof Internal.FrameSize;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.inventory.RecipeBookType"): typeof Internal.RecipeBookType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.jozufozu.flywheel.util.box.GridAlignedBB"): typeof Internal.GridAlignedBB;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.joml.Vector3i"): typeof Internal.Vector3i;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.RecipesUpdatedEvent"): typeof Internal.RecipesUpdatedEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.level.FireworksJS$Shape"): typeof Internal.FireworksJS$Shape;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.google.common.collect.Multimap"): Internal.Multimap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.GameRules$Key"): typeof Internal.GameRules$Key;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.authlib.GameProfileRepository"): Internal.GameProfileRepository;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2backpack.content.insert.InsertOnlyItem"): Internal.InsertOnlyItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.effects.harmful.EffectIcarianFlight"): typeof Internal.EffectIcarianFlight;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ClientChatEvent"): typeof Internal.ClientChatEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.placement.InSquarePlacement"): typeof Internal.InSquarePlacement;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.compiler.tree.PrefixExpression"): typeof Internal.PrefixExpression;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.constructs.parts.arms.ConstructPartFishingArmLeft"): typeof Internal.ConstructPartFishingArmLeft;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.NoticeBoardBlock"): typeof Internal.NoticeBoardBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.Transparency"): Internal.Transparency;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.eventbus.api.Event$Result"): typeof Internal.Event$Result;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.function.Function"): Internal.Function;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.util.stream.IntStream"): Internal.IntStream;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundLockDifficultyPacket"): typeof Internal.ServerboundLockDifficultyPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.level.ChunkEvent"): typeof Internal.ChunkEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.StandingSignBlock"): typeof Internal.StandingSignBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.VariantHolder"): Internal.VariantHolder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.abdelaziz.canary.common.entity.movement_tracker.SectionedEntityMovementTracker"): typeof Internal.SectionedEntityMovementTracker;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.Blocks"): typeof Blocks;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.integration.kubejs.requirements.EnergyPerTickRequirementJS"): Internal.EnergyPerTickRequirementJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.LightningRodBlock"): typeof Internal.LightningRodBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.ui.Button"): typeof dev.ftb.mods.ftblibrary.ui.Button;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.misc.MobEffectBuilder$EffectTickCallback"): Internal.MobEffectBuilder$EffectTickCallback;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.moonlight.api.item.BlockTypeBasedBlockItem"): typeof Internal.BlockTypeBasedBlockItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.unascribed.fabrication.interfaces.TaggablePlayer"): Internal.TaggablePlayer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.alexmodguy.alexscaves.server.block.SmoothLimestoneBlock"): typeof Internal.SmoothLimestoneBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.configurations.ReplaceSphereConfiguration"): typeof Internal.ReplaceSphereConfiguration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "snownee.jade.api.IToggleableProvider"): Internal.IToggleableProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.ArmorMaterials"): typeof Internal.ArmorMaterials;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.RedstoneTorchBlock"): typeof Internal.RedstoneTorchBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.prunoideae.powerfuljs.events.EntityCapEventJS"): typeof Internal.EntityCapEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.IExtensibleEnum"): Internal.IExtensibleEnum;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.items.sorcery.PhylacteryStaffItem"): typeof Internal.PhylacteryStaffItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.living.LivingHurtEvent"): typeof Internal.LivingHurtEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.view.InputEvent"): typeof icyllis.modernui.view.InputEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.nbt.StreamTagVisitor$ValueResult"): typeof Internal.StreamTagVisitor$ValueResult;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.blockpredicates.CombiningPredicate"): typeof Internal.CombiningPredicate;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.storage.loot.LootDataResolver"): Internal.LootDataResolver;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.nick.chimes.block.CopperWindChimeBlock"): typeof Internal.CopperWindChimeBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.api.blocks.WaterloggableBlock"): typeof Internal.WaterloggableBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.abdelaziz.canary.mixin.world.block_entity_ticking.sleeping.RebindableTickingBlockEntityWrapperAccessor"): Internal.RebindableTickingBlockEntityWrapperAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.almostreliable.lootjs.loot.AddAttributesFunction$Modifier"): typeof Internal.AddAttributesFunction$Modifier;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.embeddedt.modernfix.forge.mixin.bugfix.entity_pose_stack.PoseStackAccessor"): Internal.PoseStackAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftbquests.block.QuestBarrierBlock"): typeof Internal.QuestBarrierBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.player.PlayerStatsJS"): typeof Internal.PlayerStatsJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ScreenEvent$CharacterTyped"): typeof Internal.ScreenEvent$CharacterTyped;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.animal.Parrot"): typeof Internal.Parrot;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.common.extensions.IForgeMobEffectInstance"): Internal.IForgeMobEffectInstance;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.simibubi.create.foundation.ponder.SceneBuildingUtil$PositionUtil"): typeof Internal.SceneBuildingUtil$PositionUtil;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.RedstoneLampBlock"): typeof Internal.RedstoneLampBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.behavior.declarative.Trigger"): Internal.Trigger;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.pathfinder.Node"): typeof Internal.Node;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.runtime.config.IJeiConfigFile"): Internal.IJeiConfigFile;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.TamableAnimal"): typeof Internal.TamableAnimal;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.crafting.SingleItemRecipe$Serializer"): typeof Internal.SingleItemRecipe$Serializer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.Container"): typeof Internal.Container;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.flag.FeatureFlagSet"): typeof Internal.FeatureFlagSet;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2library.serial.recipe.AbstractShapedRecipe$Serializer"): typeof Internal.AbstractShapedRecipe$Serializer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.worldgen.WaySignStructure$Type"): typeof Internal.WaySignStructure$Type;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.entities.living.vanilla.IronGolemEntityJS"): typeof Internal.IronGolemEntityJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.configurations.SimpleBlockConfiguration"): typeof Internal.SimpleBlockConfiguration;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.renderer.RenderStateShard$OverlayStateShard"): typeof Internal.RenderStateShard$OverlayStateShard;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2library.serial.recipe.AbstractSmithingRecipe$Serializer"): typeof Internal.AbstractSmithingRecipe$Serializer;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$NLRenderContext"): typeof Internal.ContextUtils$NLRenderContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.TickEvent$Type"): typeof Internal.TickEvent$Type;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.event.entity.EntityAttributeModificationEvent"): typeof Internal.EntityAttributeModificationEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.entity.forge.LivingEntityDropsEventJS"): typeof Internal.LivingEntityDropsEventJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.arguments.ResourceOrTagKeyArgument$Info"): typeof Internal.ResourceOrTagKeyArgument$Info;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.LevelHeightAccessor"): Internal.LevelHeightAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.kubejs.generator.DataJsonGenerator"): typeof Internal.DataJsonGenerator;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.serialization.DataResult$Instance"): typeof Internal.DataResult$Instance;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2screentracker.screen.source.PlayerSlot"): typeof Internal.PlayerSlot;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.electronwill.nightconfig.core.ConfigSpec$CorrectionAction"): typeof Internal.ConfigSpec$CorrectionAction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.ftb.mods.ftblibrary.config.NameMap$Builder"): typeof Internal.NameMap$Builder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.server.item.ItemSpear"): typeof Internal.ItemSpear;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.fnc.common.effect.neutral.WildMagicMobEffect"): typeof Internal.WildMagicMobEffect;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mojang.authlib.minecraft.UserApiService$UserFlag"): typeof Internal.UserApiService$UserFlag;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.Item$Properties"): typeof Internal.Item$Properties;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.kosmx.playerAnim.api.firstPerson.FirstPersonMode"): typeof Internal.FirstPersonMode;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "fr.frinn.custommachinery.common.integration.kubejs.CustomCraftRecipeJSBuilder"): typeof Internal.CustomCraftRecipeJSBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.objects.Object2IntMap$Entry"): Internal.Object2IntMap$Entry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.LoomBlock"): typeof Internal.LoomBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.block.state.properties.DripstoneThickness"): typeof Internal.DripstoneThickness;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.dmnr.common.item.AngelRingItem"): typeof Internal.AngelRingItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.core.ColorFilter"): typeof Internal.ColorFilter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.core.Direction"): typeof Internal.Direction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.heightproviders.HeightProvider"): typeof Internal.HeightProvider;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.block.blocks.BlackboardBlock"): typeof Internal.BlackboardBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.floats.AbstractFloatCollection"): typeof Internal.AbstractFloatCollection;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.modernui.animation.LayoutTransition$TransitionListener"): Internal.LayoutTransition$TransitionListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.feature.BasaltColumnsFeature"): typeof Internal.BasaltColumnsFeature;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.latvian.mods.rhino.util.wrap.TypeWrapperFactory$Simple"): Internal.TypeWrapperFactory$Simple;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.client.gui.screens.worldselection.WorldCreationUiState$WorldTypeEntry"): typeof Internal.WorldCreationUiState$WorldTypeEntry;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.network.protocol.game.ServerboundChatAckPacket"): typeof Internal.ServerboundChatAckPacket;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.level.levelgen.structure.placement.RandomSpreadType"): typeof Internal.RandomSpreadType;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.ingredients.subtypes.IIngredientSubtypeInterpreter"): Internal.IIngredientSubtypeInterpreter;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.inventory.AbstractFurnaceMenu"): typeof Internal.AbstractFurnaceMenu;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.bobmowzie.mowziesmobs.server.block.GongBlock$GongPartBlock"): typeof Internal.GongBlock$GongPartBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "org.apache.logging.log4j.core.LifeCycle2"): Internal.LifeCycle2;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.builders.living.entityjs.WaterEntityJSBuilder"): typeof Internal.WaterEntityJSBuilder;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.SecondaryLoop"): Internal.SecondaryLoop;
        wait(arg0: number, arg1: number): void;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.core.Strike"): typeof Internal.Strike;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.supplementaries.common.items.HatStandItem"): typeof Internal.HatStandItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.github.L_Ender.cataclysm.client.particle.LightningParticle$OrbData"): typeof Internal.LightningParticle$OrbData;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.mna.recipes.multiblock.block_matchers.StairsBlockMatcher"): typeof Internal.StairsBlockMatcher;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "de.joh.fnc.common.item.BloodLustBraceletItem"): typeof Internal.BloodLustBraceletItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "me.jellysquid.mods.sodium.client.world.ReadableContainerExtended"): Internal.ReadableContainerExtended;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "mezz.jei.api.gui.inputs.IJeiGuiEventListener"): Internal.IJeiGuiEventListener;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "vazkii.patchouli.client.book.EntryDisplayState"): typeof Internal.EntryDisplayState;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.commands.arguments.selector.EntitySelector"): typeof Internal.EntitySelector;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap"): typeof Internal.Object2ObjectOpenHashMap;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "it.unimi.dsi.fastutil.ints.Int2FloatFunction"): Internal.Int2FloatFunction;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "com.yungnickyoung.minecraft.betterdeserttemples.mixin.accessor.StructureProcessorAccessor"): com.yungnickyoung.minecraft.betterdeserttemples.mixin.accessor.StructureProcessorAccessor;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.item.ArmorStandItem"): typeof Internal.ArmorStandItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "icyllis.arc3d.core.BlendMode"): typeof Internal.BlendMode;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.entities.living.entityjs.BaseLivingEntityJS"): typeof Internal.BaseLivingEntityJS;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "java.awt.event.WindowEvent"): typeof Internal.WindowEvent;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraftforge.client.event.ModelEvent$ModifyBakingResult"): typeof Internal.ModelEvent$ModifyBakingResult;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.liopyu.entityjs.util.ContextUtils$EntitySqrDistanceContext"): typeof Internal.ContextUtils$EntitySqrDistanceContext;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "dev.xkmc.l2backpack.content.insert.CapInsertItem"): Internal.CapInsertItem;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.mehvahdjukaar.amendments.common.block.CeilingBannerBlock"): typeof Internal.CeilingBannerBlock;
        /**
         * Loads the specified class, and throws error if class it not found or allowed.
         * The returned object can have public static methods and fields accessed directly from it.
         * Constructors can be used with the new keyword.
        */
        loadClass(className: "net.minecraft.world.entity.ai.behavior.warden.ForceUnmount"): typeof Internal.ForceUnmount;
        get class(): typeof any
    }
    type JavaWrapper_ = JavaWrapper;
    class VoidBlossomSummonBlock extends Internal.BaseEntityBlock {
        constructor(arg0: Internal.BlockBehaviour$Properties_)
        /**
         * @deprecated
        */
        getSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        /**
         * @deprecated
        */
        getVisualShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number, arg5: number): void;
        static popResource(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.ItemStack_): void;
        setRandomTickCallback(callback: Internal.Consumer_<any>): void;
        getBeaconColorMultiplier(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): number[];
        stepOn(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Entity_): void;
        getPistonPushReaction(arg0: Internal.BlockState_): Internal.PushReaction;
        getExpDrop(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.RandomSource_, arg3: BlockPos_, arg4: number, arg5: number): number;
        triggerEvent(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: number, arg4: number): boolean;
        /**
         * @deprecated
        */
        getExplosionResistance(): number;
        asItem(): Internal.Item;
        shouldDisplayFluidOverlay(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.FluidState_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_, arg6: boolean): void;
        getTypeData(): Internal.CompoundTag;
        setFriction(arg0: number): void;
        rotate(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.Rotation_): Internal.BlockState;
        getRenderShape(arg0: Internal.BlockState_): Internal.RenderShape;
        getSpeedFactor(): number;
        /**
         * @deprecated
        */
        getLightBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        isPossibleToRespawnInThis(arg0: Internal.BlockState_): boolean;
        playerDestroy(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.BlockEntity_, arg5: Internal.ItemStack_): void;
        playerWillDestroy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Player_): void;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        getCloneItemStack(arg0: Internal.BlockState_, arg1: Internal.HitResult_, arg2: Internal.BlockGetter_, arg3: BlockPos_, arg4: Internal.Player_): Internal.ItemStack;
        getClass(): typeof any;
        getMaxVerticalOffset(): number;
        newBlockEntity(arg0: BlockPos_, arg1: Internal.BlockState_): Internal.BlockEntity;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        getRenderPropertiesInternal(): any;
        onCaughtFire(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.LivingEntity_): void;
        /**
         * @deprecated
        */
        getDrops(arg0: Internal.BlockState_, arg1: Internal.LootParams$Builder_): Internal.List<Internal.ItemStack>;
        getStateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>;
        setBlockBuilder(b: Internal.BlockBuilder_): void;
        /**
         * @deprecated
        */
        entityInside(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): void;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientBlockExtensions>): void;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        getBlockStates(): Internal.List<Internal.BlockState>;
        setRequiresTool(v: boolean): void;
        addLandingEffects(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.LivingEntity_, arg5: number): boolean;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Block>;
        static popResourceFromFace(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Direction_, arg3: Internal.ItemStack_): void;
        handlePrecipitation(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Biome$Precipitation_): void;
        wait(arg0: number): void;
        /**
         * @deprecated
        */
        getFluidState(arg0: Internal.BlockState_): Internal.FluidState;
        getRespawnPosition(arg0: Internal.BlockState_, arg1: Internal.EntityType_<any>, arg2: Internal.LevelReader_, arg3: BlockPos_, arg4: number, arg5: Internal.LivingEntity_): Internal.Optional<Vec3d>;
        /**
         * @deprecated
        */
        tick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        isFertile(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        canBeHydrated(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.FluidState_, arg4: BlockPos_): boolean;
        getWeakChanges(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        neighborChanged(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Block_, arg4: BlockPos_, arg5: boolean): void;
        /**
         * @deprecated
        */
        getBlockSupportShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        /**
         * @deprecated
        */
        isCollisionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        getTicker<T extends Internal.BlockEntity>(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockEntityType_<T>): Internal.BlockEntityTicker<T>;
        getMenuProvider(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): Internal.MenuProvider;
        static byItem(arg0: Internal.Item_): Internal.Block;
        static updateFromNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_): Internal.BlockState;
        /**
         * @deprecated
        */
        updateIndirectNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: number, arg4: number): void;
        destroy(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): void;
        getFriction(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): number;
        canConnectRedstone(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        use(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: Internal.InteractionHand_, arg5: Internal.BlockHitResult_): Internal.InteractionResult;
        setLightEmission(v: number): void;
        setJumpFactor(arg0: number): void;
        isSlimeBlock(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getShadeBrightness(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        /**
         * @deprecated
        */
        getCollisionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        defaultBlockState(): Internal.BlockState;
        getStateForPlacement(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        getToolModifiedState(arg0: Internal.BlockState_, arg1: Internal.UseOnContext_, arg2: Internal.ToolAction_, arg3: boolean): Internal.BlockState;
        wait(): void;
        getMaxHorizontalOffset(): number;
        /**
         * @deprecated
        */
        getDestroyProgress(arg0: Internal.BlockState_, arg1: Internal.Player_, arg2: Internal.BlockGetter_, arg3: BlockPos_): number;
        makesOpenTrapdoorAboveClimbable(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        updateShape(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.BlockState_, arg3: Internal.LevelAccessor_, arg4: BlockPos_, arg5: BlockPos_): Internal.BlockState;
        isRandomlyTicking(arg0: Internal.BlockState_): boolean;
        static isShapeFullBlock(arg0: Internal.VoxelShape_): boolean;
        withPropertiesOf(arg0: Internal.BlockState_): Internal.BlockState;
        setIsRandomlyTicking(arg0: boolean): void;
        isScaffolding(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        hidesNeighborFace(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_, arg4: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        rotate(arg0: Internal.BlockState_, arg1: Internal.Rotation_): Internal.BlockState;
        defaultMapColor(): Internal.MapColor;
        getStateAtViewpoint(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Vec3d_): Internal.BlockState;
        setNameKey(arg0: string): void;
        static box(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.VoxelShape;
        getExplosionResistance(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): number;
        updateEntityAfterFallOn(arg0: Internal.BlockGetter_, arg1: Internal.Entity_): void;
        setBedOccupied(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.LivingEntity_, arg4: boolean): void;
        getLightEmission(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        arch$registryName(): ResourceLocation;
        getBlockBuilder(): Internal.BlockBuilder;
        getIdLocation(): ResourceLocation;
        canDropFromExplosion(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): boolean;
        addRunningEffects(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        isSignalSource(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        onProjectileHit(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockHitResult_, arg3: Internal.Projectile_): void;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): Internal.List<Internal.ItemStack>;
        /**
         * @deprecated
        */
        isOcclusionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        static getId(arg0: Internal.BlockState_): number;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.level.material.Fluid)"(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        canSustainPlant(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.IPlantable_): boolean;
        /**
         * @deprecated
        */
        isPathfindable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.PathComputationType_): boolean;
        setSoundType(arg0: SoundType_): void;
        /**
         * @deprecated
        */
        onRemove(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        equals(arg0: any): boolean;
        /**
         * @deprecated
        */
        getOcclusionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        isFlammable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        collisionExtendsVertically(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        getSoundType(arg0: Internal.BlockState_): SoundType;
        /**
         * @deprecated
        */
        randomTick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.BlockEntity_): void;
        static canSupportRigidBlock(arg0: Internal.BlockGetter_, arg1: BlockPos_): boolean;
        isStickyBlock(arg0: Internal.BlockState_): boolean;
        getDescriptionId(): string;
        handler$zmd000$onUse(state: Internal.BlockState_, world: Internal.Level_, pos: BlockPos_, player: Internal.Player_, hand: Internal.InteractionHand_, hit: Internal.BlockHitResult_, cir: Internal.CallbackInfoReturnable_<any>): void;
        onBlockExploded(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Explosion_): void;
        fallOn(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: BlockPos_, arg3: Internal.Entity_, arg4: number): void;
        canEntityDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        getJumpFactor(): number;
        isValidSpawn(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.SpawnPlacements$Type_, arg4: Internal.EntityType_<any>): boolean;
        getFlammability(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        static canSupportCenter(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        skipRendering(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        getDirectSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isLadder(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        onDestroyedByPlayer(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: boolean, arg5: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.item.context.BlockPlaceContext)"(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        getMapColor(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.MapColor_): Internal.MapColor;
        isPortalFrame(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        useShapeForLightOcclusion(arg0: Internal.BlockState_): boolean;
        getBedDirection(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): Internal.Direction;
        setSpeedFactor(arg0: number): void;
        setExplosionResistance(arg0: number): void;
        getEnchantPowerBonus(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): number;
        toString(): string;
        notifyAll(): void;
        getId(): string;
        getLootTable(): ResourceLocation;
        /**
         * @deprecated
        */
        getInteractionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        setPlacedBy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.LivingEntity_, arg4: Internal.ItemStack_): void;
        propagatesSkylightDown(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        onPlace(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        getFriction(): number;
        /**
         * @deprecated
        */
        hasAnalogOutputSignal(arg0: Internal.BlockState_): boolean;
        getSoundType(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): SoundType;
        /**
         * @deprecated
        */
        getAnalogOutputSignal(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): number;
        supportsExternalFaceHiding(arg0: Internal.BlockState_): boolean;
        notify(): void;
        onBlockStateChange(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_): void;
        static isFaceFull(arg0: Internal.VoxelShape_, arg1: Internal.Direction_): boolean;
        isFireSource(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        canSurvive(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): void;
        getAppearance(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.BlockState_, arg5: BlockPos_): Internal.BlockState;
        setDestroySpeed(v: number): void;
        canHarvestBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        shouldCheckWeakPower(arg0: Internal.BlockState_, arg1: Internal.SignalGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        getListener<T extends Internal.BlockEntity>(arg0: Internal.ServerLevel_, arg1: T): Internal.GameEventListener;
        arch$holder(): Internal.Holder<Internal.Block>;
        /**
         * @deprecated
        */
        getCloneItemStack(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        hasDynamicShape(): boolean;
        /**
         * @deprecated
        */
        getSeed(arg0: Internal.BlockState_, arg1: BlockPos_): number;
        defaultDestroyTime(): number;
        getBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        dropFromExplosion(arg0: Internal.Explosion_): boolean;
        onNeighborChange(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): void;
        static isExceptionForConnection(arg0: Internal.BlockState_): boolean;
        onTreeGrow(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.BiConsumer_<BlockPos, Internal.BlockState>, arg3: Internal.RandomSource_, arg4: BlockPos_, arg5: Internal.TreeConfiguration_): boolean;
        wait(arg0: number, arg1: number): void;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.BlockGetter_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        mirror(arg0: Internal.BlockState_, arg1: Internal.Mirror_): Internal.BlockState;
        isBed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        wasExploded(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Explosion_): void;
        getName(): Internal.MutableComponent;
        canStickTo(arg0: Internal.BlockState_, arg1: Internal.BlockState_): boolean;
        animateTick(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        getFireSpreadSpeed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        getMod(): string;
        getAdjacentBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_, arg4: Internal.BlockPathTypes_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        isConduitFrame(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): boolean;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number): void;
        /**
         * @deprecated
        */
        attack(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): void;
        /**
         * @deprecated
        */
        getShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static stateById(arg0: number): Internal.BlockState;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        popExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: number): void;
        static pushEntitiesUp(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_): Internal.BlockState;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_): Internal.List<Internal.ItemStack>;
        isBurning(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setHasCollision(arg0: boolean): void;
        static shouldRenderFace(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: BlockPos_): boolean;
        /**
         * @deprecated
        */
        spawnAfterBreak(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.ItemStack_, arg4: boolean): void;
        set randomTickCallback(callback: Internal.Consumer_<any>)
        /**
         * @deprecated
        */
        get explosionResistance(): number
        get typeData(): Internal.CompoundTag
        set friction(arg0: number)
        get speedFactor(): number
        get class(): typeof any
        get maxVerticalOffset(): number
        get renderPropertiesInternal(): any
        get stateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>
        set blockBuilder(b: Internal.BlockBuilder_)
        get blockStates(): Internal.List<Internal.BlockState>
        set requiresTool(v: boolean)
        set lightEmission(v: number)
        set jumpFactor(arg0: number)
        get maxHorizontalOffset(): number
        set isRandomlyTicking(arg0: boolean)
        set nameKey(arg0: string)
        get blockBuilder(): Internal.BlockBuilder
        get idLocation(): ResourceLocation
        set soundType(arg0: SoundType_)
        get descriptionId(): string
        get jumpFactor(): number
        set speedFactor(arg0: number)
        set explosionResistance(arg0: number)
        get id(): string
        get lootTable(): ResourceLocation
        get friction(): number
        set destroySpeed(v: number)
        get name(): Internal.MutableComponent
        get mod(): string
        set hasCollision(arg0: boolean)
    }
    type VoidBlossomSummonBlock_ = VoidBlossomSummonBlock;
    class DiceItem extends Internal.Item {
        constructor(arg0: number)
        getDrinkingSound(): Internal.SoundEvent;
        getShareTag(arg0: Internal.ItemStack_): Internal.CompoundTag;
        setRarity(arg0: Internal.Rarity_): void;
        isEnderMask(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.EnderMan_): boolean;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        getDestroySpeed(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): number;
        getBurnTime(arg0: Internal.ItemStack_, arg1: Internal.RecipeType_<any>): number;
        moonlight$addAdditionalBehavior(placementOverride: Internal.AdditionalItemPlacement_): void;
        /**
         * @deprecated
        */
        onDestroyed(arg0: Internal.ItemEntity_): void;
        isFireResistant(): boolean;
        onItemUseFirst(arg0: Internal.ItemStack_, arg1: Internal.UseOnContext_): Internal.InteractionResult;
        onCraftedBy(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        isComplex(): boolean;
        isCorrectToolForDrops(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): boolean;
        isPiglinCurrency(arg0: Internal.ItemStack_): boolean;
        getEnchantmentValue(arg0: Internal.ItemStack_): number;
        canDisableShield(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.LivingEntity_, arg3: Internal.LivingEntity_): boolean;
        onUseTick(arg0: Internal.Level_, arg1: Internal.LivingEntity_, arg2: Internal.ItemStack_, arg3: number): void;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        canBeHurtBy(arg0: Internal.DamageSource_): boolean;
        /**
         * @deprecated
        */
        getFoodProperties(): Internal.FoodProperties;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): boolean;
        getDescriptionId(): string;
        getUseAnimation(arg0: Internal.ItemStack_): Internal.UseAnim;
        isValidRepairItem(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        moonlight$getClientAnimationExtension(): any;
        getXpRepairRatio(arg0: Internal.ItemStack_): number;
        isBookEnchantable(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getCreativeTab(): string;
        initCapabilities(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): Internal.ICapabilityProvider;
        asItem(): Internal.Item;
        onDroppedByPlayer(arg0: Internal.ItemStack_, arg1: Internal.Player_): boolean;
        getTypeData(): Internal.CompoundTag;
        getDefaultInstance(): Internal.ItemStack;
        getDefaultTooltipHideFlags(arg0: Internal.ItemStack_): number;
        getCreatorModId(arg0: Internal.ItemStack_): string;
        canContinueUsing(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        setMaxStackSize(arg0: number): void;
        setBurnTime(i: number): void;
        getFoodProperties(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): Internal.FoodProperties;
        getBarWidth(arg0: Internal.ItemStack_): number;
        setMaxDamage(arg0: number): void;
        getItem(): Internal.Item;
        getBarColor(arg0: Internal.ItemStack_): number;
        onDestroyed(arg0: Internal.ItemEntity_, arg1: Internal.DamageSource_): void;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        onLeftClickEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): boolean;
        getItemBuilder(): Internal.ItemBuilder;
        makesPiglinsNeutral(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxDamage(): number;
        removeAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_): void;
        asIngredient(): Internal.Ingredient;
        getDescription(): net.minecraft.network.chat.Component;
        /**
         * @deprecated
        */
        hasCraftingRemainingItem(): boolean;
        canPerformAction(arg0: Internal.ItemStack_, arg1: Internal.ToolAction_): boolean;
        getClass(): typeof any;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        static byId(arg0: number): Internal.Item;
        getRenderPropertiesInternal(): any;
        onEntityItemUpdate(arg0: Internal.ItemStack_, arg1: Internal.ItemEntity_): boolean;
        interactLivingEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.LivingEntity_, arg3: Internal.InteractionHand_): Internal.InteractionResult;
        moonlight$getAdditionalBehavior(): Internal.AdditionalItemPlacement;
        moonlight$setClientAnimationExtension(obj: any): void;
        getCraftingRemainingItem(arg0: Internal.ItemStack_): Internal.ItemStack;
        useOn(arg0: Internal.UseOnContext_): Internal.InteractionResult;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        onArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        getRarity(arg0: Internal.ItemStack_): Internal.Rarity;
        setItemBuilder(b: Internal.ItemBuilder_): void;
        shouldCauseBlockBreakReset(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        damageItem<T extends Internal.LivingEntity>(arg0: Internal.ItemStack_, arg1: number, arg2: T, arg3: Internal.Consumer_<T>): number;
        setCraftingRemainingItemFTBL(arg0: Internal.Item_): void;
        attachCapability(capabilityBuilder: Internal.CapabilityBuilder_<any, any, any>): void;
        setAttackDamage(attackDamage: number): void;
        isEdible(): boolean;
        getTooltipImage(arg0: Internal.ItemStack_): Internal.Optional<Internal.TooltipComponent>;
        arch$holder(): Internal.Holder<Internal.Item>;
        getArmorTexture(arg0: Internal.ItemStack_, arg1: Internal.Entity_, arg2: Internal.EquipmentSlot_, arg3: string): string;
        getAttributes(attribute: Internal.Attribute_): Internal.List<Internal.AttributeModifier>;
        use(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.InteractionHand_): Internal.InteractionResultHolder<Internal.ItemStack>;
        toString(): string;
        /**
         * @deprecated
        */
        getEnchantmentValue(): number;
        setArmorToughness(armorToughness: number): void;
        notifyAll(): void;
        getId(): string;
        isEnchantable(arg0: Internal.ItemStack_): boolean;
        getSweepHitBox(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): Internal.AABB;
        getEnchantmentLevel(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): number;
        getAllEnchantments(arg0: Internal.ItemStack_): Internal.Map<Internal.Enchantment, number>;
        wait(arg0: number): void;
        getDigSpeed(): number;
        setTier(c: Internal.Consumer_<Internal.MutableToolTier>): void;
        overrideStackedOnOther(arg0: Internal.ItemStack_, arg1: Internal.Slot_, arg2: Internal.ClickAction_, arg3: Internal.Player_): boolean;
        setFoodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        onBlockStartBreak(arg0: Internal.ItemStack_, arg1: BlockPos_, arg2: Internal.Player_): boolean;
        elytraFlightTick(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): boolean;
        getMaxDamage(arg0: Internal.ItemStack_): number;
        isFoil(arg0: Internal.ItemStack_): boolean;
        "setFoodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_): void;
        isRepairable(arg0: Internal.ItemStack_): boolean;
        isDamageable(arg0: Internal.ItemStack_): boolean;
        useOnRelease(arg0: Internal.ItemStack_): boolean;
        canAttackBlock(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        canGrindstoneRepair(arg0: Internal.ItemStack_): boolean;
        notify(): void;
        setDigSpeed(speed: number): void;
        getDescriptionId(arg0: Internal.ItemStack_): string;
        releaseUsing(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_, arg3: number): void;
        setAttackSpeed(attackSpeed: number): void;
        isBarVisible(arg0: Internal.ItemStack_): boolean;
        canWalkOnPowderedSnow(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        getUseDuration(arg0: Internal.ItemStack_): number;
        onStopUsing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): void;
        isNotReplaceableByPickAction(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: number): boolean;
        /**
         * @deprecated
        */
        getMaxStackSize(): number;
        /**
         * @deprecated
        */
        static byBlock(arg0: Internal.Block_): Internal.Item;
        isDamaged(arg0: Internal.ItemStack_): boolean;
        handler$dpg000$initializeClient(consumer: Internal.Consumer_<any>, ci: Internal.CallbackInfo_): void;
        canFitInsideContainerItems(): boolean;
        wait(): void;
        getHighlightTip(arg0: Internal.ItemStack_, arg1: net.minecraft.network.chat.Component_): net.minecraft.network.chat.Component;
        isCorrectToolForDrops(arg0: Internal.BlockState_): boolean;
        verifyTagAfterLoad(arg0: Internal.CompoundTag_): void;
        canEquip(arg0: Internal.ItemStack_, arg1: Internal.EquipmentSlot_, arg2: Internal.Entity_): boolean;
        "setFoodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        finishUsingItem(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_): Internal.ItemStack;
        setArmorKnockbackResistance(knockbackResistance: number): void;
        setFireResistant(arg0: boolean): void;
        onInventoryTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_, arg3: number, arg4: number): void;
        getEatingSound(): Internal.SoundEvent;
        hasCustomEntity(arg0: Internal.ItemStack_): boolean;
        canBeDepleted(): boolean;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientItemExtensions>): void;
        getDamage(arg0: Internal.ItemStack_): number;
        mineBlock(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.BlockState_, arg3: BlockPos_, arg4: Internal.LivingEntity_): boolean;
        wait(arg0: number, arg1: number): void;
        setNameKey(arg0: string): void;
        readShareTag(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): void;
        getEquipmentSlot(arg0: Internal.ItemStack_): Internal.EquipmentSlot;
        getLightColor(player: Internal.Player_, stack: Internal.ItemStack_): Vec3f;
        getName(arg0: Internal.ItemStack_): net.minecraft.network.chat.Component;
        /**
         * @deprecated
        */
        getDefaultAttributeModifiers(arg0: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        arch$registryName(): ResourceLocation;
        getIdLocation(): ResourceLocation;
        getAttributeModifiers(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getMod(): string;
        canElytraFly(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Item>;
        createEntity(arg0: Internal.Level_, arg1: Internal.Entity_, arg2: Internal.ItemStack_): Internal.Entity;
        setArmorProtection(armorProtection: number): void;
        getLightEmission(player: Internal.Player_, stack: Internal.ItemStack_): number;
        onEntitySwing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        getEntityLifespan(arg0: Internal.ItemStack_, arg1: Internal.Level_): number;
        inventoryTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Entity_, arg3: number, arg4: boolean): void;
        hurtEnemy(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: Internal.LivingEntity_): boolean;
        setDamage(arg0: Internal.ItemStack_, arg1: number): void;
        /**
         * @deprecated
        */
        getCraftingRemainingItem(): Internal.Item;
        getTypeItemStackKey(): Internal.ItemStackKey;
        hasCraftingRemainingItem(arg0: Internal.ItemStack_): boolean;
        shouldOverrideMultiplayerNbt(): boolean;
        getMaxStackSize(arg0: Internal.ItemStack_): number;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        static getId(arg0: Internal.Item_): number;
        overrideOtherStackedOnMe(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_, arg5: Internal.SlotAccess_): boolean;
        setFoodProperties(arg0: Internal.FoodProperties_): void;
        setCraftingRemainder(arg0: Internal.Item_): void;
        doesSneakBypassUse(arg0: Internal.ItemStack_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        shouldCauseReequipAnimation(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: boolean): boolean;
        onHorseArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Mob_): void;
        addAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_, name: string, d: number, operation: Internal.AttributeModifier$Operation_): void;
        equals(arg0: any): boolean;
        get drinkingSound(): Internal.SoundEvent
        set rarity(arg0: Internal.Rarity_)
        get fireResistant(): boolean
        get complex(): boolean
        /**
         * @deprecated
        */
        get foodProperties(): Internal.FoodProperties
        get descriptionId(): string
        get creativeTab(): string
        get typeData(): Internal.CompoundTag
        get defaultInstance(): Internal.ItemStack
        set maxStackSize(arg0: number)
        set burnTime(i: number)
        set maxDamage(arg0: number)
        get item(): Internal.Item
        get itemBuilder(): Internal.ItemBuilder
        /**
         * @deprecated
        */
        get maxDamage(): number
        get description(): net.minecraft.network.chat.Component
        get class(): typeof any
        get renderPropertiesInternal(): any
        set itemBuilder(b: Internal.ItemBuilder_)
        set craftingRemainingItemFTBL(arg0: Internal.Item_)
        set attackDamage(attackDamage: number)
        get edible(): boolean
        /**
         * @deprecated
        */
        get enchantmentValue(): number
        set armorToughness(armorToughness: number)
        get id(): string
        get digSpeed(): number
        set tier(c: Internal.Consumer_<Internal.MutableToolTier>)
        set foodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set "foodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_)
        set digSpeed(speed: number)
        set attackSpeed(attackSpeed: number)
        /**
         * @deprecated
        */
        get maxStackSize(): number
        set "foodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set armorKnockbackResistance(knockbackResistance: number)
        set fireResistant(arg0: boolean)
        get eatingSound(): Internal.SoundEvent
        set nameKey(arg0: string)
        get idLocation(): ResourceLocation
        get mod(): string
        set armorProtection(armorProtection: number)
        /**
         * @deprecated
        */
        get craftingRemainingItem(): Internal.Item
        get typeItemStackKey(): Internal.ItemStackKey
        set foodProperties(arg0: Internal.FoodProperties_)
        set craftingRemainder(arg0: Internal.Item_)
    }
    type DiceItem_ = DiceItem;
    class UraniumRodBlock extends Internal.RotatedPillarBlock implements Internal.SimpleWaterloggedBlock {
        constructor()
        /**
         * @deprecated
        */
        getSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        static getLiquidType(arg0: Internal.FluidState_): number;
        /**
         * @deprecated
        */
        getVisualShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number, arg5: number): void;
        static popResource(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.ItemStack_): void;
        setRandomTickCallback(callback: Internal.Consumer_<any>): void;
        getBeaconColorMultiplier(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): number[];
        stepOn(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Entity_): void;
        getPistonPushReaction(arg0: Internal.BlockState_): Internal.PushReaction;
        getExpDrop(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.RandomSource_, arg3: BlockPos_, arg4: number, arg5: number): number;
        /**
         * @deprecated
        */
        getExplosionResistance(): number;
        asItem(): Internal.Item;
        shouldDisplayFluidOverlay(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        triggerEvent(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: number, arg4: number): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_, arg6: boolean): void;
        getTypeData(): Internal.CompoundTag;
        setFriction(arg0: number): void;
        rotate(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.Rotation_): Internal.BlockState;
        /**
         * @deprecated
        */
        getRenderShape(arg0: Internal.BlockState_): Internal.RenderShape;
        getSpeedFactor(): number;
        /**
         * @deprecated
        */
        getLightBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        isPossibleToRespawnInThis(arg0: Internal.BlockState_): boolean;
        playerDestroy(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.BlockEntity_, arg5: Internal.ItemStack_): void;
        playerWillDestroy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Player_): void;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        getCloneItemStack(arg0: Internal.BlockState_, arg1: Internal.HitResult_, arg2: Internal.BlockGetter_, arg3: BlockPos_, arg4: Internal.Player_): Internal.ItemStack;
        getClass(): typeof any;
        getMaxVerticalOffset(): number;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        getRenderPropertiesInternal(): any;
        onCaughtFire(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.LivingEntity_): void;
        /**
         * @deprecated
        */
        getDrops(arg0: Internal.BlockState_, arg1: Internal.LootParams$Builder_): Internal.List<Internal.ItemStack>;
        getStateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>;
        setBlockBuilder(b: Internal.BlockBuilder_): void;
        /**
         * @deprecated
        */
        entityInside(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): void;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientBlockExtensions>): void;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        getBlockStates(): Internal.List<Internal.BlockState>;
        setRequiresTool(v: boolean): void;
        addLandingEffects(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.LivingEntity_, arg5: number): boolean;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Block>;
        static popResourceFromFace(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Direction_, arg3: Internal.ItemStack_): void;
        handlePrecipitation(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Biome$Precipitation_): void;
        wait(arg0: number): void;
        getFluidState(arg0: Internal.BlockState_): Internal.FluidState;
        getRespawnPosition(arg0: Internal.BlockState_, arg1: Internal.EntityType_<any>, arg2: Internal.LevelReader_, arg3: BlockPos_, arg4: number, arg5: Internal.LivingEntity_): Internal.Optional<Vec3d>;
        /**
         * @deprecated
        */
        tick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        isFertile(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        canBeHydrated(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.FluidState_, arg4: BlockPos_): boolean;
        getWeakChanges(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        neighborChanged(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Block_, arg4: BlockPos_, arg5: boolean): void;
        /**
         * @deprecated
        */
        getBlockSupportShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        /**
         * @deprecated
        */
        isCollisionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        getMenuProvider(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): Internal.MenuProvider;
        static byItem(arg0: Internal.Item_): Internal.Block;
        static updateFromNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_): Internal.BlockState;
        /**
         * @deprecated
        */
        updateIndirectNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: number, arg4: number): void;
        destroy(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): void;
        getFriction(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): number;
        canConnectRedstone(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        use(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: Internal.InteractionHand_, arg5: Internal.BlockHitResult_): Internal.InteractionResult;
        setLightEmission(v: number): void;
        setJumpFactor(arg0: number): void;
        isSlimeBlock(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getShadeBrightness(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        /**
         * @deprecated
        */
        getCollisionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        defaultBlockState(): Internal.BlockState;
        getStateForPlacement(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        getToolModifiedState(arg0: Internal.BlockState_, arg1: Internal.UseOnContext_, arg2: Internal.ToolAction_, arg3: boolean): Internal.BlockState;
        placeLiquid(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.FluidState_): boolean;
        wait(): void;
        getMaxHorizontalOffset(): number;
        /**
         * @deprecated
        */
        getDestroyProgress(arg0: Internal.BlockState_, arg1: Internal.Player_, arg2: Internal.BlockGetter_, arg3: BlockPos_): number;
        makesOpenTrapdoorAboveClimbable(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.BlockState_): boolean;
        updateShape(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.BlockState_, arg3: Internal.LevelAccessor_, arg4: BlockPos_, arg5: BlockPos_): Internal.BlockState;
        isRandomlyTicking(arg0: Internal.BlockState_): boolean;
        static isShapeFullBlock(arg0: Internal.VoxelShape_): boolean;
        withPropertiesOf(arg0: Internal.BlockState_): Internal.BlockState;
        getPickupSound(arg0: Internal.BlockState_): Internal.Optional<Internal.SoundEvent>;
        setIsRandomlyTicking(arg0: boolean): void;
        rotate(arg0: Internal.BlockState_, arg1: Internal.Rotation_): Internal.BlockState;
        isScaffolding(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        hidesNeighborFace(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_, arg4: Internal.Direction_): boolean;
        defaultMapColor(): Internal.MapColor;
        getStateAtViewpoint(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Vec3d_): Internal.BlockState;
        setNameKey(arg0: string): void;
        static box(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.VoxelShape;
        getExplosionResistance(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): number;
        updateEntityAfterFallOn(arg0: Internal.BlockGetter_, arg1: Internal.Entity_): void;
        setBedOccupied(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.LivingEntity_, arg4: boolean): void;
        getLightEmission(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        arch$registryName(): ResourceLocation;
        getBlockBuilder(): Internal.BlockBuilder;
        getIdLocation(): ResourceLocation;
        canDropFromExplosion(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): boolean;
        addRunningEffects(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        isSignalSource(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        onProjectileHit(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockHitResult_, arg3: Internal.Projectile_): void;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): Internal.List<Internal.ItemStack>;
        /**
         * @deprecated
        */
        isOcclusionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        static getId(arg0: Internal.BlockState_): number;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.level.material.Fluid)"(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        canSustainPlant(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.IPlantable_): boolean;
        /**
         * @deprecated
        */
        isPathfindable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.PathComputationType_): boolean;
        setSoundType(arg0: SoundType_): void;
        /**
         * @deprecated
        */
        onRemove(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        equals(arg0: any): boolean;
        /**
         * @deprecated
        */
        getOcclusionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        isFlammable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        collisionExtendsVertically(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        getPickupSound(): Internal.Optional<Internal.SoundEvent>;
        /**
         * @deprecated
        */
        getSoundType(arg0: Internal.BlockState_): SoundType;
        /**
         * @deprecated
        */
        randomTick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.BlockEntity_): void;
        static canSupportRigidBlock(arg0: Internal.BlockGetter_, arg1: BlockPos_): boolean;
        isStickyBlock(arg0: Internal.BlockState_): boolean;
        getDescriptionId(): string;
        handler$zmd000$onUse(state: Internal.BlockState_, world: Internal.Level_, pos: BlockPos_, player: Internal.Player_, hand: Internal.InteractionHand_, hit: Internal.BlockHitResult_, cir: Internal.CallbackInfoReturnable_<any>): void;
        onBlockExploded(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Explosion_): void;
        fallOn(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: BlockPos_, arg3: Internal.Entity_, arg4: number): void;
        canEntityDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        getJumpFactor(): number;
        isValidSpawn(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.SpawnPlacements$Type_, arg4: Internal.EntityType_<any>): boolean;
        getFlammability(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        static canSupportCenter(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        skipRendering(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        getDirectSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isLadder(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        onDestroyedByPlayer(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: boolean, arg5: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.item.context.BlockPlaceContext)"(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        getMapColor(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.MapColor_): Internal.MapColor;
        isPortalFrame(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        useShapeForLightOcclusion(arg0: Internal.BlockState_): boolean;
        pickupBlock(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        getBedDirection(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): Internal.Direction;
        setSpeedFactor(arg0: number): void;
        setExplosionResistance(arg0: number): void;
        getEnchantPowerBonus(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): number;
        toString(): string;
        notifyAll(): void;
        getId(): string;
        getLootTable(): ResourceLocation;
        /**
         * @deprecated
        */
        getInteractionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        setPlacedBy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.LivingEntity_, arg4: Internal.ItemStack_): void;
        propagatesSkylightDown(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        onPlace(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        getFriction(): number;
        /**
         * @deprecated
        */
        hasAnalogOutputSignal(arg0: Internal.BlockState_): boolean;
        getSoundType(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): SoundType;
        /**
         * @deprecated
        */
        getAnalogOutputSignal(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): number;
        supportsExternalFaceHiding(arg0: Internal.BlockState_): boolean;
        notify(): void;
        onBlockStateChange(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_): void;
        static isFaceFull(arg0: Internal.VoxelShape_, arg1: Internal.Direction_): boolean;
        isFireSource(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        canSurvive(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): void;
        getAppearance(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.BlockState_, arg5: BlockPos_): Internal.BlockState;
        setDestroySpeed(v: number): void;
        canHarvestBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        shouldCheckWeakPower(arg0: Internal.BlockState_, arg1: Internal.SignalGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        arch$holder(): Internal.Holder<Internal.Block>;
        /**
         * @deprecated
        */
        getCloneItemStack(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        hasDynamicShape(): boolean;
        /**
         * @deprecated
        */
        getSeed(arg0: Internal.BlockState_, arg1: BlockPos_): number;
        defaultDestroyTime(): number;
        getBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        dropFromExplosion(arg0: Internal.Explosion_): boolean;
        onNeighborChange(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): void;
        static isExceptionForConnection(arg0: Internal.BlockState_): boolean;
        canPlaceLiquid(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Fluid_): boolean;
        onTreeGrow(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.BiConsumer_<BlockPos, Internal.BlockState>, arg3: Internal.RandomSource_, arg4: BlockPos_, arg5: Internal.TreeConfiguration_): boolean;
        wait(arg0: number, arg1: number): void;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.BlockGetter_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        mirror(arg0: Internal.BlockState_, arg1: Internal.Mirror_): Internal.BlockState;
        isBed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        wasExploded(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Explosion_): void;
        getName(): Internal.MutableComponent;
        canStickTo(arg0: Internal.BlockState_, arg1: Internal.BlockState_): boolean;
        animateTick(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        getFireSpreadSpeed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        getMod(): string;
        getAdjacentBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_, arg4: Internal.BlockPathTypes_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        isConduitFrame(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): boolean;
        static rotatePillar(arg0: Internal.BlockState_, arg1: Internal.Rotation_): Internal.BlockState;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number): void;
        /**
         * @deprecated
        */
        attack(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): void;
        getShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static stateById(arg0: number): Internal.BlockState;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        popExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: number): void;
        static pushEntitiesUp(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_): Internal.BlockState;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_): Internal.List<Internal.ItemStack>;
        isBurning(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setHasCollision(arg0: boolean): void;
        static shouldRenderFace(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: BlockPos_): boolean;
        /**
         * @deprecated
        */
        spawnAfterBreak(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.ItemStack_, arg4: boolean): void;
        set randomTickCallback(callback: Internal.Consumer_<any>)
        /**
         * @deprecated
        */
        get explosionResistance(): number
        get typeData(): Internal.CompoundTag
        set friction(arg0: number)
        get speedFactor(): number
        get class(): typeof any
        get maxVerticalOffset(): number
        get renderPropertiesInternal(): any
        get stateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>
        set blockBuilder(b: Internal.BlockBuilder_)
        get blockStates(): Internal.List<Internal.BlockState>
        set requiresTool(v: boolean)
        set lightEmission(v: number)
        set jumpFactor(arg0: number)
        get maxHorizontalOffset(): number
        set isRandomlyTicking(arg0: boolean)
        set nameKey(arg0: string)
        get blockBuilder(): Internal.BlockBuilder
        get idLocation(): ResourceLocation
        set soundType(arg0: SoundType_)
        get pickupSound(): Internal.Optional<Internal.SoundEvent>
        get descriptionId(): string
        get jumpFactor(): number
        set speedFactor(arg0: number)
        set explosionResistance(arg0: number)
        get id(): string
        get lootTable(): ResourceLocation
        get friction(): number
        set destroySpeed(v: number)
        get name(): Internal.MutableComponent
        get mod(): string
        set hasCollision(arg0: boolean)
        static readonly LIQUID_LOGGED: (Internal.IntegerProperty) & (Internal.IntegerProperty);
    }
    type UraniumRodBlock_ = UraniumRodBlock;
    class LodestoneItemCrumbsParticleOptions extends Internal.WorldParticleOptions {
        constructor(arg0: Internal.ParticleType_<Internal.LodestoneItemCrumbsParticleOptions>, arg1: Internal.ItemStack_)
        constructor(arg0: Internal.RegistryObject_<Internal.LodestoneItemCrumbsParticleType>, arg1: Internal.ItemStack_)
        getClass(): typeof any;
        setBehavior(arg0: Internal.LodestoneBehaviorComponent_): Internal.WorldParticleOptions;
        setBehaviorIfDefault(arg0: Internal.LodestoneBehaviorComponent_): Internal.WorldParticleOptions;
        toString(): string;
        notifyAll(): void;
        writeToNetwork(arg0: Internal.FriendlyByteBuf_): void;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        hashCode(): number;
        wait(): void;
        getType(): Internal.ParticleType<any>;
        writeToString(): string;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        get class(): typeof any
        set behavior(arg0: Internal.LodestoneBehaviorComponent_)
        set behaviorIfDefault(arg0: Internal.LodestoneBehaviorComponent_)
        get type(): Internal.ParticleType<any>
        readonly stack: Internal.ItemStack;
    }
    type LodestoneItemCrumbsParticleOptions_ = LodestoneItemCrumbsParticleOptions;
    class WidgetLayout$Padding extends Internal.Record {
        constructor(vertical: number, horizontal: number)
        vertical(): number;
        getClass(): typeof any;
        hashCode(): number;
        toString(): string;
        horizontal(): number;
        wait(): void;
        notifyAll(): void;
        wait(arg0: number): void;
        equals(o: any): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        get class(): typeof any
    }
    type WidgetLayout$Padding_ = WidgetLayout$Padding;
    interface PowerableMob {
        abstract isPowered(): boolean;
        get powered(): boolean
        (): boolean;
    }
    type PowerableMob_ = (()=> boolean) | PowerableMob;
    class ModelPart$Cube implements Internal.ModelCuboidAccessor {
        constructor(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number, arg10: number, arg11: boolean, arg12: number, arg13: number, arg14: Internal.Set_<Internal.Direction>)
        getClass(): typeof any;
        compile(arg0: Internal.PoseStack$Pose_, arg1: Internal.VertexConsumer_, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): void;
        hashCode(): number;
        toString(): string;
        wait(): void;
        abstract embeddium$getSimpleCuboid(): Internal.ModelCuboid;
        notifyAll(): void;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        sodium$copy(): Internal.ModelCuboid;
        get class(): typeof any
        readonly minY: number;
        readonly minZ: number;
        readonly maxX: number;
        minX: number;
        readonly maxZ: number;
        readonly maxY: number;
    }
    type ModelPart$Cube_ = ModelPart$Cube;
    class CreateWorldScreen extends Internal.Screen {
        charTyped(arg0: string, arg1: number): boolean;
        onFilesDrop(arg0: Internal.List_<Internal.Path>): void;
        "setFocused(net.minecraft.client.gui.components.events.GuiEventListener)"(arg0: Internal.GuiEventListener_): void;
        narrationEnabled(): void;
        setFocused(arg0: boolean): void;
        renderDirtBackground(arg0: Internal.GuiGraphics_): void;
        setTooltipForNextRenderPass(arg0: Internal.List_<Internal.FormattedCharSequence>): void;
        renderWithTooltip(arg0: Internal.GuiGraphics_, arg1: number, arg2: number, arg3: number): void;
        mouseClicked(arg0: number, arg1: number, arg2: number): boolean;
        keyReleased(arg0: number, arg1: number, arg2: number): boolean;
        static isCut(arg0: number): boolean;
        getChildrenKonkrete(): Internal.List<any>;
        addRenderableWidget<T extends Internal.GuiEventListener & Internal.Renderable & Internal.NarratableEntry>(arg0: T): T;
        getNarratablesFancyMenu(): Internal.List<any>;
        getFocused(): Internal.GuiEventListener;
        "setTooltipForNextRenderPass(java.util.List,net.minecraft.client.gui.screens.inventory.tooltip.ClientTooltipPositioner,boolean)"(arg0: Internal.List_<Internal.FormattedCharSequence>, arg1: Internal.ClientTooltipPositioner_, arg2: boolean): void;
        nextFocusPath(arg0: Internal.FocusNavigationEvent_): Internal.ComponentPath;
        static createTempDataPackDirFromExistingWorld(arg0: Internal.Path_, arg1: Internal.Minecraft_): Internal.Path;
        setFontKonkrete(arg0: net.minecraft.client.gui.Font_): void;
        static openFresh(arg0: Internal.Minecraft_, arg1: Internal.Screen_): void;
        createArrowEvent(arg0: Internal.ScreenDirection_): Internal.FocusNavigationEvent$ArrowNavigation;
        handleComponentClicked(arg0: Internal.Style_): boolean;
        keyPressed(arg0: number, arg1: number, arg2: number): boolean;
        controlling$getRenderables(): Internal.List<any>;
        static findNarratableWidget(arg0: Internal.List_<Internal.NarratableEntry>, arg1: Internal.NarratableEntry_): Internal.Screen$NarratableSearchResult;
        removed(): void;
        children(): Internal.List<Internal.GuiEventListener>;
        render(arg0: Internal.GuiGraphics_, arg1: number, arg2: number, arg3: number): void;
        addRenderableOnly<T extends Internal.Renderable>(arg0: T): T;
        static isSelectAll(arg0: number): boolean;
        isDragging(): boolean;
        getChildAt(arg0: number, arg1: number): Internal.Optional<Internal.GuiEventListener>;
        shouldCloseOnEsc(): boolean;
        getClass(): typeof any;
        isFocused(): boolean;
        balm_getRenderables(): Internal.List<any>;
        getTabOrderGroup(): number;
        setFocused(arg0: Internal.GuiEventListener_): void;
        getRenderables(): Internal.List<any>;
        init(arg0: Internal.Minecraft_, arg1: number, arg2: number): void;
        getBackgroundMusic(): Internal.Music;
        getNarrationMessage(): net.minecraft.network.chat.Component;
        constant$bel000$modifyBottomBgColor(color: number): number;
        getRenderablesKonkrete(): Internal.List<any>;
        toString(): string;
        notifyAll(): void;
        static isPaste(arg0: number): boolean;
        popScreen(): void;
        static hasControlDown(): boolean;
        afterKeyboardAction(): void;
        getCurrentFocusPath(): Internal.ComponentPath;
        balm_getChildren(): Internal.List<any>;
        wait(arg0: number): void;
        static wrapScreenError(arg0: Internal.Runnable_, arg1: string, arg2: string): void;
        afterMouseAction(): void;
        getMinecraft(): Internal.Minecraft;
        static getTooltipFromItem(arg0: Internal.Minecraft_, arg1: Internal.ItemStack_): Internal.List<net.minecraft.network.chat.Component>;
        getChildrenFancyMenu(): Internal.List<any>;
        notify(): void;
        afterMouseMove(): void;
        mouseMoved(arg0: number, arg1: number): void;
        getRectangle(): Internal.ScreenRectangle;
        getRenderablesFancyMenu(): Internal.List<any>;
        static isCopy(arg0: number): boolean;
        magicalSpecialHackyFocus(arg0: Internal.GuiEventListener_): void;
        get_initialized_FancyMenu(): boolean;
        tick(): void;
        isPauseScreen(): boolean;
        setDragging(arg0: boolean): void;
        wait(): void;
        constant$bel000$modifyTopBgColor(color: number): number;
        getTitle(): net.minecraft.network.chat.Component;
        isMouseOver(arg0: number, arg1: number): boolean;
        removeOnInitChildrenFancyMenu(): Internal.List<any>;
        getNarratables(): Internal.List<any>;
        static hasAltDown(): boolean;
        renderBackground(arg0: Internal.GuiGraphics_): void;
        mouseScrolled(arg0: number, arg1: number, arg2: number): boolean;
        wait(arg0: number, arg1: number): void;
        onClose(): void;
        invokeRemoveWidgetFancyMenu(arg0: Internal.GuiEventListener_): void;
        addWidget<T extends Internal.GuiEventListener & Internal.NarratableEntry>(arg0: T): T;
        static hasShiftDown(): boolean;
        repositionElements(): void;
        balm_getNarratables(): Internal.List<any>;
        mouseDragged(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): boolean;
        getUiState(): Internal.WorldCreationUiState;
        "setTooltipForNextRenderPass(net.minecraft.client.gui.components.Tooltip,net.minecraft.client.gui.screens.inventory.tooltip.ClientTooltipPositioner,boolean)"(arg0: Internal.Tooltip_, arg1: Internal.ClientTooltipPositioner_, arg2: boolean): void;
        static createFromExisting(arg0: Internal.Minecraft_, arg1: Internal.Screen_, arg2: Internal.LevelSettings_, arg3: Internal.WorldCreationContext_, arg4: Internal.Path_): Internal.CreateWorldScreen;
        resize(arg0: Internal.Minecraft_, arg1: number, arg2: number): void;
        mouseReleased(arg0: number, arg1: number, arg2: number): boolean;
        "setFocused(boolean)"(arg0: boolean): void;
        setTooltipForNextRenderPass(arg0: Internal.List_<Internal.FormattedCharSequence>, arg1: Internal.ClientTooltipPositioner_, arg2: boolean): void;
        hashCode(): number;
        added(): void;
        handleDelayedNarration(): void;
        equals(arg0: any): boolean;
        createTabEvent(): Internal.FocusNavigationEvent$TabNavigation;
        triggerImmediateNarration(arg0: boolean): void;
        setTooltipForNextRenderPass(arg0: Internal.Tooltip_, arg1: Internal.ClientTooltipPositioner_, arg2: boolean): void;
        set "focused(net.minecraft.client.gui.components.events.GuiEventListener)"(arg0: Internal.GuiEventListener_)
        set focused(arg0: boolean)
        set tooltipForNextRenderPass(arg0: Internal.List_<Internal.FormattedCharSequence>)
        get childrenKonkrete(): Internal.List<any>
        get narratablesFancyMenu(): Internal.List<any>
        get focused(): Internal.GuiEventListener
        set fontKonkrete(arg0: net.minecraft.client.gui.Font_)
        get dragging(): boolean
        get class(): typeof any
        get focused(): boolean
        get tabOrderGroup(): number
        set focused(arg0: Internal.GuiEventListener_)
        get renderables(): Internal.List<any>
        get backgroundMusic(): Internal.Music
        get narrationMessage(): net.minecraft.network.chat.Component
        get renderablesKonkrete(): Internal.List<any>
        get currentFocusPath(): Internal.ComponentPath
        get minecraft(): Internal.Minecraft
        get childrenFancyMenu(): Internal.List<any>
        get rectangle(): Internal.ScreenRectangle
        get renderablesFancyMenu(): Internal.List<any>
        get _initialized_FancyMenu(): boolean
        get pauseScreen(): boolean
        set dragging(arg0: boolean)
        get title(): net.minecraft.network.chat.Component
        get narratables(): Internal.List<any>
        get uiState(): Internal.WorldCreationUiState
        set "focused(boolean)"(arg0: boolean)
        static readonly LIGHT_DIRT_BACKGROUND: (ResourceLocation) & (ResourceLocation);
        static readonly FOOTER_SEPERATOR: (ResourceLocation) & (ResourceLocation);
        static readonly HEADER_SEPERATOR: (ResourceLocation) & (ResourceLocation);
    }
    type CreateWorldScreen_ = CreateWorldScreen;
    interface ResourceManagerReloadListener extends Internal.PreparableReloadListener {
        getName(): string;
        abstract onResourceManagerReload(arg0: Internal.ResourceManager_): void;
        reload(arg0: Internal.PreparableReloadListener$PreparationBarrier_, arg1: Internal.ResourceManager_, arg2: Internal.ProfilerFiller_, arg3: Internal.ProfilerFiller_, arg4: Internal.Executor_, arg5: Internal.Executor_): Internal.CompletableFuture<void>;
        get name(): string
        (arg0: Internal.ResourceManager): void;
    }
    type ResourceManagerReloadListener_ = ((arg0: Internal.ResourceManager)=> void) | ResourceManagerReloadListener;
    class DecimalFormat extends Internal.NumberFormat {
        constructor()
        constructor(arg0: string, arg1: Internal.DecimalFormatSymbols_)
        constructor(arg0: string)
        format(arg0: any, arg1: Internal.StringBuffer_, arg2: Internal.FieldPosition_): Internal.StringBuffer;
        setDecimalSeparatorAlwaysShown(arg0: boolean): void;
        parse(arg0: string, arg1: Internal.ParsePosition_): number;
        static getCompactNumberInstance(): Internal.NumberFormat;
        setMaximumIntegerDigits(arg0: number): void;
        getPositiveSuffix(): string;
        setNegativeSuffix(arg0: string): void;
        parse(arg0: string): number;
        static getAvailableLocales(): Internal.Locale[];
        setParseIntegerOnly(arg0: boolean): void;
        notify(): void;
        "format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)"(arg0: any, arg1: Internal.StringBuffer_, arg2: Internal.FieldPosition_): Internal.StringBuffer;
        setGroupingUsed(arg0: boolean): void;
        setNegativePrefix(arg0: string): void;
        formatToCharacterIterator(arg0: any): Internal.AttributedCharacterIterator;
        applyPattern(arg0: string): void;
        setMaximumFractionDigits(arg0: number): void;
        applyLocalizedPattern(arg0: string): void;
        setPositiveSuffix(arg0: string): void;
        static getInstance(arg0: Internal.Locale_): Internal.NumberFormat;
        setRoundingMode(arg0: Internal.RoundingMode_): void;
        static getInstance(): Internal.NumberFormat;
        setCurrency(arg0: Internal.Currency_): void;
        isDecimalSeparatorAlwaysShown(): boolean;
        "format(double)"(arg0: number): string;
        getMaximumIntegerDigits(): number;
        toPattern(): string;
        isGroupingUsed(): boolean;
        "format(long,java.lang.StringBuffer,java.text.FieldPosition)"(arg0: number, arg1: Internal.StringBuffer_, arg2: Internal.FieldPosition_): Internal.StringBuffer;
        static getCurrencyInstance(arg0: Internal.Locale_): Internal.NumberFormat;
        isParseIntegerOnly(): boolean;
        toLocalizedPattern(): string;
        setPositivePrefix(arg0: string): void;
        setMinimumIntegerDigits(arg0: number): void;
        format(arg0: number, arg1: Internal.StringBuffer_, arg2: Internal.FieldPosition_): Internal.StringBuffer;
        getNegativeSuffix(): string;
        static getCompactNumberInstance(arg0: Internal.Locale_, arg1: Internal.NumberFormat$Style_): Internal.NumberFormat;
        static getNumberInstance(arg0: Internal.Locale_): Internal.NumberFormat;
        setMinimumFractionDigits(arg0: number): void;
        getNegativePrefix(): string;
        wait(): void;
        "format(long)"(arg0: number): string;
        setGroupingSize(arg0: number): void;
        static getIntegerInstance(): Internal.NumberFormat;
        getPositivePrefix(): string;
        getRoundingMode(): Internal.RoundingMode;
        clone(): any;
        getClass(): typeof any;
        format(arg0: number): string;
        isParseBigDecimal(): boolean;
        parseObject(arg0: string): any;
        parseObject(arg0: string, arg1: Internal.ParsePosition_): any;
        wait(arg0: number, arg1: number): void;
        static getPercentInstance(): Internal.NumberFormat;
        getGroupingSize(): number;
        format(arg0: number): string;
        getMinimumIntegerDigits(): number;
        "format(double,java.lang.StringBuffer,java.text.FieldPosition)"(arg0: number, arg1: Internal.StringBuffer_, arg2: Internal.FieldPosition_): Internal.StringBuffer;
        getCurrency(): Internal.Currency;
        getMaximumFractionDigits(): number;
        getDecimalFormatSymbols(): Internal.DecimalFormatSymbols;
        static getNumberInstance(): Internal.NumberFormat;
        static getPercentInstance(arg0: Internal.Locale_): Internal.NumberFormat;
        toString(): string;
        "format(java.lang.Object)"(arg0: any): string;
        notifyAll(): void;
        setMultiplier(arg0: number): void;
        format(arg0: any): string;
        setParseBigDecimal(arg0: boolean): void;
        getMultiplier(): number;
        static getCurrencyInstance(): Internal.NumberFormat;
        hashCode(): number;
        getMinimumFractionDigits(): number;
        static getIntegerInstance(arg0: Internal.Locale_): Internal.NumberFormat;
        wait(arg0: number): void;
        format(arg0: number, arg1: Internal.StringBuffer_, arg2: Internal.FieldPosition_): Internal.StringBuffer;
        equals(arg0: any): boolean;
        setDecimalFormatSymbols(arg0: Internal.DecimalFormatSymbols_): void;
        set decimalSeparatorAlwaysShown(arg0: boolean)
        get compactNumberInstance(): Internal.NumberFormat
        set maximumIntegerDigits(arg0: number)
        get positiveSuffix(): string
        set negativeSuffix(arg0: string)
        get availableLocales(): Internal.Locale[]
        set parseIntegerOnly(arg0: boolean)
        set groupingUsed(arg0: boolean)
        set negativePrefix(arg0: string)
        set maximumFractionDigits(arg0: number)
        set positiveSuffix(arg0: string)
        set roundingMode(arg0: Internal.RoundingMode_)
        get instance(): Internal.NumberFormat
        set currency(arg0: Internal.Currency_)
        get decimalSeparatorAlwaysShown(): boolean
        get maximumIntegerDigits(): number
        get groupingUsed(): boolean
        get parseIntegerOnly(): boolean
        set positivePrefix(arg0: string)
        set minimumIntegerDigits(arg0: number)
        get negativeSuffix(): string
        set minimumFractionDigits(arg0: number)
        get negativePrefix(): string
        set groupingSize(arg0: number)
        get integerInstance(): Internal.NumberFormat
        get positivePrefix(): string
        get roundingMode(): Internal.RoundingMode
        get class(): typeof any
        get parseBigDecimal(): boolean
        get percentInstance(): Internal.NumberFormat
        get groupingSize(): number
        get minimumIntegerDigits(): number
        get currency(): Internal.Currency
        get maximumFractionDigits(): number
        get decimalFormatSymbols(): Internal.DecimalFormatSymbols
        get numberInstance(): Internal.NumberFormat
        set multiplier(arg0: number)
        set parseBigDecimal(arg0: boolean)
        get multiplier(): number
        get currencyInstance(): Internal.NumberFormat
        get minimumFractionDigits(): number
        set decimalFormatSymbols(arg0: Internal.DecimalFormatSymbols_)
    }
    type DecimalFormat_ = DecimalFormat;
    class FunctionDefinition extends Internal.TopLevelElement {
        getClass(): typeof any;
        getEndOffset(): number;
        toString(): string;
        static convert(context: icyllis.arc3d.compiler.Context_, pos: number, functionDecl: Internal.FunctionDecl_, builtin: boolean, body: Internal.Statement_): Internal.FunctionDefinition;
        static make(pos: number, functionDecl: Internal.FunctionDecl_, builtin: boolean, body: Internal.BlockStatement_): Internal.FunctionDefinition;
        notifyAll(): void;
        getKind(): Internal.Node$ElementKind;
        accept(visitor: Internal.TreeVisitor_): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        getFunctionDecl(): Internal.FunctionDecl;
        getStartOffset(): number;
        setBody(body: Internal.BlockStatement_): void;
        hashCode(): number;
        wait(): void;
        wait(arg0: number): void;
        isBuiltin(): boolean;
        equals(arg0: any): boolean;
        getBody(): Internal.BlockStatement;
        get class(): typeof any
        get endOffset(): number
        get kind(): Internal.Node$ElementKind
        get functionDecl(): Internal.FunctionDecl
        get startOffset(): number
        set body(body: Internal.BlockStatement_)
        get builtin(): boolean
        get body(): Internal.BlockStatement
    }
    type FunctionDefinition_ = FunctionDefinition;
    class BlockStatement extends Internal.Statement {
        constructor(position: number, statements: Internal.List_<Internal.Statement>, scoped: boolean)
        getClass(): typeof any;
        static makeCompound(before: Internal.Statement_, after: Internal.Statement_): Internal.Statement;
        getEndOffset(): number;
        toString(): string;
        getKind(): Internal.Node$StatementKind;
        notifyAll(): void;
        static make(pos: number, statements: Internal.List_<Internal.Statement>, scoped: boolean): Internal.Statement;
        isEmpty(): boolean;
        accept(visitor: Internal.TreeVisitor_): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        getStartOffset(): number;
        setScoped(scoped: boolean): void;
        hashCode(): number;
        setStatements(statements: Internal.List_<Internal.Statement>): void;
        wait(): void;
        isScoped(): boolean;
        wait(arg0: number): void;
        getStatements(): Internal.List<Internal.Statement>;
        equals(arg0: any): boolean;
        static makeBlock(pos: number, statements: Internal.List_<Internal.Statement>): Internal.BlockStatement;
        get class(): typeof any
        get endOffset(): number
        get kind(): Internal.Node$StatementKind
        get empty(): boolean
        get startOffset(): number
        set scoped(scoped: boolean)
        set statements(statements: Internal.List_<Internal.Statement>)
        get scoped(): boolean
        get statements(): Internal.List<Internal.Statement>
    }
    type BlockStatement_ = BlockStatement;
    class ModelResourceLocation extends ResourceLocation {
        constructor(arg0: string, arg1: string, arg2: string)
        constructor(arg0: ResourceLocation_, arg1: string)
        static isValidNamespace(arg0: string): boolean;
        getClass(): typeof any;
        compareTo(arg0: ResourceLocation_): number;
        toLanguageKey(arg0: string): string;
        static checkSpecialEquality(o: any, o1: any, shallow: boolean): boolean;
        static validNamespaceChar(arg0: string): boolean;
        static read(arg0: string): Internal.DataResult<ResourceLocation>;
        static isValidPath(arg0: string): boolean;
        toShortLanguageKey(): string;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        compareTo(arg0: any): number;
        setPath(arg0: string): void;
        static tryBuild(arg0: string, arg1: string): ResourceLocation;
        "withPath(java.lang.String)"(arg0: string): ResourceLocation;
        static vanilla(arg0: string, arg1: string): Internal.ModelResourceLocation;
        getVariant(): string;
        static isAllowedInResourceLocation(arg0: string): boolean;
        withPath(arg0: string): ResourceLocation;
        static tryParse(arg0: string): ResourceLocation;
        static validPathChar(arg0: string): boolean;
        toLanguageKey(arg0: string, arg1: string): string;
        toDebugFileName(): string;
        getPath(): string;
        getNamespace(): string;
        static of(arg0: string, arg1: string): ResourceLocation;
        compareNamespaced(arg0: ResourceLocation_): number;
        "compareTo(net.minecraft.resources.ResourceLocation)"(arg0: ResourceLocation_): number;
        toString(): string;
        withSuffix(arg0: string): ResourceLocation;
        notifyAll(): void;
        specialEquals(o: any, shallow: boolean): boolean;
        static read(arg0: Internal.StringReader_): ResourceLocation;
        toLanguageKey(): string;
        static isValidResourceLocation(arg0: string): boolean;
        static "read(com.mojang.brigadier.StringReader)"(arg0: Internal.StringReader_): ResourceLocation;
        "withPath(java.util.function.UnaryOperator)"(arg0: Internal.UnaryOperator_<string>): ResourceLocation;
        hashCode(): number;
        static "read(java.lang.String)"(arg0: string): Internal.DataResult<ResourceLocation>;
        setNamespace(arg0: string): void;
        wait(): void;
        withPath(arg0: Internal.UnaryOperator_<string>): ResourceLocation;
        wait(arg0: number): void;
        withPrefix(arg0: string): ResourceLocation;
        "compareTo(java.lang.Object)"(arg0: any): number;
        equals(arg0: any): boolean;
        get class(): typeof any
        set path(arg0: string)
        get variant(): string
        get path(): string
        get namespace(): string
        set namespace(arg0: string)
    }
    type ModelResourceLocation_ = ModelResourceLocation;
    class ConfiguredFeature <FC extends Internal.FeatureConfiguration, F extends Feature<FC>> extends Internal.Record {
        constructor(arg0: F, arg1: FC)
        getClass(): typeof any;
        place(arg0: Internal.WorldGenLevel_, arg1: Internal.ChunkGenerator_, arg2: Internal.RandomSource_, arg3: BlockPos_): boolean;
        getFeatures(): Internal.Stream<Internal.ConfiguredFeature<any, any>>;
        toString(): string;
        notifyAll(): void;
        feature(): F;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        config(): FC;
        hashCode(): number;
        wait(): void;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        get class(): typeof any
        get features(): Internal.Stream<Internal.ConfiguredFeature<any, any>>
        static readonly CODEC: Internal.Codec<Internal.Holder<Internal.ConfiguredFeature<any, any>>>;
        static readonly LIST_CODEC: Internal.Codec<Internal.HolderSet<Internal.ConfiguredFeature<any, any>>>;
        static readonly DIRECT_CODEC: Internal.Codec<Internal.ConfiguredFeature<any, any>>;
    }
    type ConfiguredFeature_<FC extends Internal.FeatureConfiguration, F extends Feature<FC>> = Special.ConfiguredFeature | ConfiguredFeature<FC, F>;
    class AbstractShapelessRecipe$Serializer <T extends Internal.AbstractShapelessRecipe<T>> extends Internal.ShapelessRecipe$Serializer {
        constructor(arg0: any_<T>)
        getClass(): typeof any;
        toNetwork(arg0: Internal.FriendlyByteBuf_, arg1: Internal.ShapelessRecipe_): void;
        fromJson(arg0: ResourceLocation_, arg1: Internal.JsonObject_): T;
        "fromNetwork(net.minecraft.resources.ResourceLocation,net.minecraft.network.FriendlyByteBuf)"(arg0: ResourceLocation_, arg1: Internal.FriendlyByteBuf_): Internal.Recipe<any>;
        toString(): string;
        "toNetwork(net.minecraft.network.FriendlyByteBuf,net.minecraft.world.item.crafting.Recipe)"(arg0: Internal.FriendlyByteBuf_, arg1: Internal.Recipe_<any>): void;
        notifyAll(): void;
        "fromNetwork(net.minecraft.resources.ResourceLocation,net.minecraft.network.FriendlyByteBuf)"(arg0: ResourceLocation_, arg1: Internal.FriendlyByteBuf_): T;
        toNetwork(arg0: Internal.FriendlyByteBuf_, arg1: Internal.Recipe_<any>): void;
        notify(): void;
        "fromJson(net.minecraft.resources.ResourceLocation,com.google.gson.JsonObject)"(arg0: ResourceLocation_, arg1: Internal.JsonObject_): Internal.Recipe<any>;
        wait(arg0: number, arg1: number): void;
        fromJson(arg0: ResourceLocation_, arg1: Internal.JsonObject_, arg2: Internal.ICondition$IContext_): Internal.ShapelessRecipe;
        static register<S extends Internal.RecipeSerializer<T>, T extends Internal.Recipe<any>>(arg0: string, arg1: S): S;
        hashCode(): number;
        fromJson(arg0: ResourceLocation_, arg1: Internal.JsonObject_): Internal.Recipe<any>;
        wait(): void;
        fromNetwork(arg0: ResourceLocation_, arg1: Internal.FriendlyByteBuf_): T;
        "fromJson(net.minecraft.resources.ResourceLocation,com.google.gson.JsonObject)"(arg0: ResourceLocation_, arg1: Internal.JsonObject_): T;
        wait(arg0: number): void;
        toJson(arg0: T, arg1: Internal.JsonObject_): void;
        "toNetwork(net.minecraft.network.FriendlyByteBuf,net.minecraft.world.item.crafting.ShapelessRecipe)"(arg0: Internal.FriendlyByteBuf_, arg1: Internal.ShapelessRecipe_): void;
        equals(arg0: any): boolean;
        fromNetwork(arg0: ResourceLocation_, arg1: Internal.FriendlyByteBuf_): Internal.Recipe<any>;
        get class(): typeof any
    }
    type AbstractShapelessRecipe$Serializer_<T extends Internal.AbstractShapelessRecipe<T>> = AbstractShapelessRecipe$Serializer<T>;
    class CMBlockItem extends Internal.BlockItem {
        constructor(arg0: Internal.RegistryObject_<Internal.Block>, arg1: Internal.Item$Properties_)
        getDrinkingSound(): Internal.SoundEvent;
        getShareTag(arg0: Internal.ItemStack_): Internal.CompoundTag;
        setRarity(arg0: Internal.Rarity_): void;
        isEnderMask(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.EnderMan_): boolean;
        static setBlockEntityData(arg0: Internal.ItemStack_, arg1: Internal.BlockEntityType_<any>, arg2: Internal.CompoundTag_): void;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        getDestroySpeed(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): number;
        getBurnTime(arg0: Internal.ItemStack_, arg1: Internal.RecipeType_<any>): number;
        abstract moonlight$addAdditionalBehavior(arg0: Internal.AdditionalItemPlacement_): void;
        onDestroyed(arg0: Internal.ItemEntity_): void;
        isFireResistant(): boolean;
        onItemUseFirst(arg0: Internal.ItemStack_, arg1: Internal.UseOnContext_): Internal.InteractionResult;
        onCraftedBy(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        isComplex(): boolean;
        isCorrectToolForDrops(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): boolean;
        isPiglinCurrency(arg0: Internal.ItemStack_): boolean;
        getEnchantmentValue(arg0: Internal.ItemStack_): number;
        canDisableShield(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.LivingEntity_, arg3: Internal.LivingEntity_): boolean;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        onUseTick(arg0: Internal.Level_, arg1: Internal.LivingEntity_, arg2: Internal.ItemStack_, arg3: number): void;
        canBeHurtBy(arg0: Internal.DamageSource_): boolean;
        /**
         * @deprecated
        */
        getFoodProperties(): Internal.FoodProperties;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): boolean;
        getDescriptionId(): string;
        getUseAnimation(arg0: Internal.ItemStack_): Internal.UseAnim;
        isValidRepairItem(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        abstract moonlight$getClientAnimationExtension(): any;
        getXpRepairRatio(arg0: Internal.ItemStack_): number;
        isBookEnchantable(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getCreativeTab(): string;
        initCapabilities(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): Internal.ICapabilityProvider;
        asItem(): Internal.Item;
        onDroppedByPlayer(arg0: Internal.ItemStack_, arg1: Internal.Player_): boolean;
        getTypeData(): Internal.CompoundTag;
        getDefaultInstance(): Internal.ItemStack;
        getDefaultTooltipHideFlags(arg0: Internal.ItemStack_): number;
        getCreatorModId(arg0: Internal.ItemStack_): string;
        canContinueUsing(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        setMaxStackSize(arg0: number): void;
        setBurnTime(i: number): void;
        getFoodProperties(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): Internal.FoodProperties;
        getBarWidth(arg0: Internal.ItemStack_): number;
        setMaxDamage(arg0: number): void;
        getItem(): Internal.Item;
        getBarColor(arg0: Internal.ItemStack_): number;
        onDestroyed(arg0: Internal.ItemEntity_, arg1: Internal.DamageSource_): void;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        onLeftClickEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): boolean;
        getItemBuilder(): Internal.ItemBuilder;
        makesPiglinsNeutral(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxDamage(): number;
        removeAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_): void;
        asIngredient(): Internal.Ingredient;
        getDescription(): net.minecraft.network.chat.Component;
        /**
         * @deprecated
        */
        hasCraftingRemainingItem(): boolean;
        canPerformAction(arg0: Internal.ItemStack_, arg1: Internal.ToolAction_): boolean;
        getClass(): typeof any;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        static byId(arg0: number): Internal.Item;
        getRenderPropertiesInternal(): any;
        onEntityItemUpdate(arg0: Internal.ItemStack_, arg1: Internal.ItemEntity_): boolean;
        interactLivingEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.LivingEntity_, arg3: Internal.InteractionHand_): Internal.InteractionResult;
        abstract moonlight$getAdditionalBehavior(): Internal.AdditionalItemPlacement;
        abstract moonlight$setClientAnimationExtension(arg0: any): void;
        getCraftingRemainingItem(arg0: Internal.ItemStack_): Internal.ItemStack;
        useOn(arg0: Internal.UseOnContext_): Internal.InteractionResult;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        onArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        getRarity(arg0: Internal.ItemStack_): Internal.Rarity;
        setItemBuilder(b: Internal.ItemBuilder_): void;
        shouldCauseBlockBreakReset(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        damageItem<T extends Internal.LivingEntity>(arg0: Internal.ItemStack_, arg1: number, arg2: T, arg3: Internal.Consumer_<T>): number;
        setCraftingRemainingItemFTBL(arg0: Internal.Item_): void;
        attachCapability(capabilityBuilder: Internal.CapabilityBuilder_<any, any, any>): void;
        setAttackDamage(attackDamage: number): void;
        isEdible(): boolean;
        getTooltipImage(arg0: Internal.ItemStack_): Internal.Optional<Internal.TooltipComponent>;
        arch$holder(): Internal.Holder<Internal.Item>;
        getArmorTexture(arg0: Internal.ItemStack_, arg1: Internal.Entity_, arg2: Internal.EquipmentSlot_, arg3: string): string;
        getAttributes(attribute: Internal.Attribute_): Internal.List<Internal.AttributeModifier>;
        use(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.InteractionHand_): Internal.InteractionResultHolder<Internal.ItemStack>;
        static getBlockEntityData(arg0: Internal.ItemStack_): Internal.CompoundTag;
        toString(): string;
        /**
         * @deprecated
        */
        getEnchantmentValue(): number;
        setArmorToughness(armorToughness: number): void;
        notifyAll(): void;
        getId(): string;
        isEnchantable(arg0: Internal.ItemStack_): boolean;
        getSweepHitBox(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): Internal.AABB;
        getEnchantmentLevel(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): number;
        getAllEnchantments(arg0: Internal.ItemStack_): Internal.Map<Internal.Enchantment, number>;
        wait(arg0: number): void;
        getDigSpeed(): number;
        setTier(c: Internal.Consumer_<Internal.MutableToolTier>): void;
        overrideStackedOnOther(arg0: Internal.ItemStack_, arg1: Internal.Slot_, arg2: Internal.ClickAction_, arg3: Internal.Player_): boolean;
        setFoodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        onBlockStartBreak(arg0: Internal.ItemStack_, arg1: BlockPos_, arg2: Internal.Player_): boolean;
        removeFromBlockToItemMap(arg0: Internal.Map_<Internal.Block, Internal.Item>, arg1: Internal.Item_): void;
        elytraFlightTick(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): boolean;
        getMaxDamage(arg0: Internal.ItemStack_): number;
        isFoil(arg0: Internal.ItemStack_): boolean;
        "setFoodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_): void;
        isRepairable(arg0: Internal.ItemStack_): boolean;
        isDamageable(arg0: Internal.ItemStack_): boolean;
        useOnRelease(arg0: Internal.ItemStack_): boolean;
        canAttackBlock(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        canGrindstoneRepair(arg0: Internal.ItemStack_): boolean;
        notify(): void;
        setDigSpeed(speed: number): void;
        getDescriptionId(arg0: Internal.ItemStack_): string;
        releaseUsing(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_, arg3: number): void;
        setAttackSpeed(attackSpeed: number): void;
        isBarVisible(arg0: Internal.ItemStack_): boolean;
        canWalkOnPowderedSnow(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        getUseDuration(arg0: Internal.ItemStack_): number;
        onStopUsing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): void;
        isNotReplaceableByPickAction(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: number): boolean;
        static updateCustomBlockEntityTag(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.ItemStack_): boolean;
        /**
         * @deprecated
        */
        getMaxStackSize(): number;
        /**
         * @deprecated
        */
        static byBlock(arg0: Internal.Block_): Internal.Item;
        place(arg0: Internal.BlockPlaceContext_): Internal.InteractionResult;
        isDamaged(arg0: Internal.ItemStack_): boolean;
        handler$dpg000$initializeClient(consumer: Internal.Consumer_<any>, ci: Internal.CallbackInfo_): void;
        canFitInsideContainerItems(): boolean;
        wait(): void;
        getHighlightTip(arg0: Internal.ItemStack_, arg1: net.minecraft.network.chat.Component_): net.minecraft.network.chat.Component;
        isCorrectToolForDrops(arg0: Internal.BlockState_): boolean;
        verifyTagAfterLoad(arg0: Internal.CompoundTag_): void;
        canEquip(arg0: Internal.ItemStack_, arg1: Internal.EquipmentSlot_, arg2: Internal.Entity_): boolean;
        "setFoodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        getBlock(): Internal.Block;
        finishUsingItem(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_): Internal.ItemStack;
        updatePlacementContext(arg0: Internal.BlockPlaceContext_): Internal.BlockPlaceContext;
        setArmorKnockbackResistance(knockbackResistance: number): void;
        setFireResistant(arg0: boolean): void;
        registerBlocks(arg0: Internal.Map_<Internal.Block, Internal.Item>, arg1: Internal.Item_): void;
        onInventoryTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_, arg3: number, arg4: number): void;
        getEatingSound(): Internal.SoundEvent;
        hasCustomEntity(arg0: Internal.ItemStack_): boolean;
        canBeDepleted(): boolean;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientItemExtensions>): void;
        getDamage(arg0: Internal.ItemStack_): number;
        mineBlock(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.BlockState_, arg3: BlockPos_, arg4: Internal.LivingEntity_): boolean;
        wait(arg0: number, arg1: number): void;
        setNameKey(arg0: string): void;
        readShareTag(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): void;
        getEquipmentSlot(arg0: Internal.ItemStack_): Internal.EquipmentSlot;
        getLightColor(player: Internal.Player_, stack: Internal.ItemStack_): Vec3f;
        getName(arg0: Internal.ItemStack_): net.minecraft.network.chat.Component;
        /**
         * @deprecated
        */
        getDefaultAttributeModifiers(arg0: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        arch$registryName(): ResourceLocation;
        getIdLocation(): ResourceLocation;
        getAttributeModifiers(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getMod(): string;
        canElytraFly(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Item>;
        createEntity(arg0: Internal.Level_, arg1: Internal.Entity_, arg2: Internal.ItemStack_): Internal.Entity;
        setArmorProtection(armorProtection: number): void;
        getLightEmission(player: Internal.Player_, stack: Internal.ItemStack_): number;
        onEntitySwing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        getEntityLifespan(arg0: Internal.ItemStack_, arg1: Internal.Level_): number;
        inventoryTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Entity_, arg3: number, arg4: boolean): void;
        hurtEnemy(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: Internal.LivingEntity_): boolean;
        setDamage(arg0: Internal.ItemStack_, arg1: number): void;
        /**
         * @deprecated
        */
        getCraftingRemainingItem(): Internal.Item;
        getTypeItemStackKey(): Internal.ItemStackKey;
        hasCraftingRemainingItem(arg0: Internal.ItemStack_): boolean;
        shouldOverrideMultiplayerNbt(): boolean;
        getMaxStackSize(arg0: Internal.ItemStack_): number;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        static getId(arg0: Internal.Item_): number;
        overrideOtherStackedOnMe(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_, arg5: Internal.SlotAccess_): boolean;
        setFoodProperties(arg0: Internal.FoodProperties_): void;
        setCraftingRemainder(arg0: Internal.Item_): void;
        doesSneakBypassUse(arg0: Internal.ItemStack_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        shouldCauseReequipAnimation(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: boolean): boolean;
        onHorseArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Mob_): void;
        addAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_, name: string, d: number, operation: Internal.AttributeModifier$Operation_): void;
        equals(arg0: any): boolean;
        get drinkingSound(): Internal.SoundEvent
        set rarity(arg0: Internal.Rarity_)
        get fireResistant(): boolean
        get complex(): boolean
        /**
         * @deprecated
        */
        get foodProperties(): Internal.FoodProperties
        get descriptionId(): string
        get creativeTab(): string
        get typeData(): Internal.CompoundTag
        get defaultInstance(): Internal.ItemStack
        set maxStackSize(arg0: number)
        set burnTime(i: number)
        set maxDamage(arg0: number)
        get item(): Internal.Item
        get itemBuilder(): Internal.ItemBuilder
        /**
         * @deprecated
        */
        get maxDamage(): number
        get description(): net.minecraft.network.chat.Component
        get class(): typeof any
        get renderPropertiesInternal(): any
        set itemBuilder(b: Internal.ItemBuilder_)
        set craftingRemainingItemFTBL(arg0: Internal.Item_)
        set attackDamage(attackDamage: number)
        get edible(): boolean
        /**
         * @deprecated
        */
        get enchantmentValue(): number
        set armorToughness(armorToughness: number)
        get id(): string
        get digSpeed(): number
        set tier(c: Internal.Consumer_<Internal.MutableToolTier>)
        set foodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set "foodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_)
        set digSpeed(speed: number)
        set attackSpeed(attackSpeed: number)
        /**
         * @deprecated
        */
        get maxStackSize(): number
        set "foodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        get block(): Internal.Block
        set armorKnockbackResistance(knockbackResistance: number)
        set fireResistant(arg0: boolean)
        get eatingSound(): Internal.SoundEvent
        set nameKey(arg0: string)
        get idLocation(): ResourceLocation
        get mod(): string
        set armorProtection(armorProtection: number)
        /**
         * @deprecated
        */
        get craftingRemainingItem(): Internal.Item
        get typeItemStackKey(): Internal.ItemStackKey
        set foodProperties(arg0: Internal.FoodProperties_)
        set craftingRemainder(arg0: Internal.Item_)
    }
    type CMBlockItem_ = CMBlockItem;
    class GlowstoneFeature extends Feature<Internal.NoneFeatureConfiguration> {
        constructor(arg0: Internal.Codec_<Internal.NoneFeatureConfiguration>)
        getClass(): typeof any;
        toString(): string;
        static checkNeighbors(arg0: Internal.Function_<BlockPos, Internal.BlockState>, arg1: BlockPos_, arg2: Internal.Predicate_<Internal.BlockState>): boolean;
        notifyAll(): void;
        place(arg0: Internal.NoneFeatureConfiguration_, arg1: Internal.WorldGenLevel_, arg2: Internal.ChunkGenerator_, arg3: Internal.RandomSource_, arg4: BlockPos_): boolean;
        notify(): void;
        static isAdjacentToAir(arg0: Internal.Function_<BlockPos, Internal.BlockState>, arg1: BlockPos_): boolean;
        wait(arg0: number, arg1: number): void;
        place(arg0: Internal.FeaturePlaceContext_<Internal.NoneFeatureConfiguration>): boolean;
        static isGrassOrDirt(arg0: Internal.LevelSimulatedReader_, arg1: BlockPos_): boolean;
        hashCode(): number;
        wait(): void;
        wait(arg0: number): void;
        static isDirt(arg0: Internal.BlockState_): boolean;
        equals(arg0: any): boolean;
        static isReplaceable(arg0: Internal.TagKey_<Internal.Block>): Internal.Predicate<Internal.BlockState>;
        configuredCodec(): Internal.Codec<Internal.ConfiguredFeature<Internal.NoneFeatureConfiguration, Feature<Internal.NoneFeatureConfiguration>>>;
        get class(): typeof any
    }
    type GlowstoneFeature_ = GlowstoneFeature;
    class ItemCitadelBook extends Internal.Item {
        constructor(arg0: Internal.Item$Properties_)
        getDrinkingSound(): Internal.SoundEvent;
        getShareTag(arg0: Internal.ItemStack_): Internal.CompoundTag;
        setRarity(arg0: Internal.Rarity_): void;
        isEnderMask(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.EnderMan_): boolean;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        getDestroySpeed(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): number;
        getBurnTime(arg0: Internal.ItemStack_, arg1: Internal.RecipeType_<any>): number;
        moonlight$addAdditionalBehavior(placementOverride: Internal.AdditionalItemPlacement_): void;
        /**
         * @deprecated
        */
        onDestroyed(arg0: Internal.ItemEntity_): void;
        isFireResistant(): boolean;
        onItemUseFirst(arg0: Internal.ItemStack_, arg1: Internal.UseOnContext_): Internal.InteractionResult;
        onCraftedBy(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        isComplex(): boolean;
        isCorrectToolForDrops(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): boolean;
        isPiglinCurrency(arg0: Internal.ItemStack_): boolean;
        getEnchantmentValue(arg0: Internal.ItemStack_): number;
        canDisableShield(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.LivingEntity_, arg3: Internal.LivingEntity_): boolean;
        onUseTick(arg0: Internal.Level_, arg1: Internal.LivingEntity_, arg2: Internal.ItemStack_, arg3: number): void;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        canBeHurtBy(arg0: Internal.DamageSource_): boolean;
        /**
         * @deprecated
        */
        getFoodProperties(): Internal.FoodProperties;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): boolean;
        getDescriptionId(): string;
        getUseAnimation(arg0: Internal.ItemStack_): Internal.UseAnim;
        isValidRepairItem(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        moonlight$getClientAnimationExtension(): any;
        getXpRepairRatio(arg0: Internal.ItemStack_): number;
        isBookEnchantable(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getCreativeTab(): string;
        initCapabilities(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): Internal.ICapabilityProvider;
        asItem(): Internal.Item;
        onDroppedByPlayer(arg0: Internal.ItemStack_, arg1: Internal.Player_): boolean;
        getTypeData(): Internal.CompoundTag;
        getDefaultInstance(): Internal.ItemStack;
        getDefaultTooltipHideFlags(arg0: Internal.ItemStack_): number;
        getCreatorModId(arg0: Internal.ItemStack_): string;
        canContinueUsing(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        setMaxStackSize(arg0: number): void;
        setBurnTime(i: number): void;
        getFoodProperties(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): Internal.FoodProperties;
        getBarWidth(arg0: Internal.ItemStack_): number;
        setMaxDamage(arg0: number): void;
        getItem(): Internal.Item;
        getBarColor(arg0: Internal.ItemStack_): number;
        onDestroyed(arg0: Internal.ItemEntity_, arg1: Internal.DamageSource_): void;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        onLeftClickEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): boolean;
        getItemBuilder(): Internal.ItemBuilder;
        makesPiglinsNeutral(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxDamage(): number;
        removeAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_): void;
        asIngredient(): Internal.Ingredient;
        getDescription(): net.minecraft.network.chat.Component;
        /**
         * @deprecated
        */
        hasCraftingRemainingItem(): boolean;
        canPerformAction(arg0: Internal.ItemStack_, arg1: Internal.ToolAction_): boolean;
        getClass(): typeof any;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        static byId(arg0: number): Internal.Item;
        getRenderPropertiesInternal(): any;
        onEntityItemUpdate(arg0: Internal.ItemStack_, arg1: Internal.ItemEntity_): boolean;
        interactLivingEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.LivingEntity_, arg3: Internal.InteractionHand_): Internal.InteractionResult;
        moonlight$getAdditionalBehavior(): Internal.AdditionalItemPlacement;
        moonlight$setClientAnimationExtension(obj: any): void;
        getCraftingRemainingItem(arg0: Internal.ItemStack_): Internal.ItemStack;
        useOn(arg0: Internal.UseOnContext_): Internal.InteractionResult;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        onArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        getRarity(arg0: Internal.ItemStack_): Internal.Rarity;
        setItemBuilder(b: Internal.ItemBuilder_): void;
        shouldCauseBlockBreakReset(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        damageItem<T extends Internal.LivingEntity>(arg0: Internal.ItemStack_, arg1: number, arg2: T, arg3: Internal.Consumer_<T>): number;
        setCraftingRemainingItemFTBL(arg0: Internal.Item_): void;
        attachCapability(capabilityBuilder: Internal.CapabilityBuilder_<any, any, any>): void;
        setAttackDamage(attackDamage: number): void;
        isEdible(): boolean;
        getTooltipImage(arg0: Internal.ItemStack_): Internal.Optional<Internal.TooltipComponent>;
        arch$holder(): Internal.Holder<Internal.Item>;
        getArmorTexture(arg0: Internal.ItemStack_, arg1: Internal.Entity_, arg2: Internal.EquipmentSlot_, arg3: string): string;
        getAttributes(attribute: Internal.Attribute_): Internal.List<Internal.AttributeModifier>;
        use(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.InteractionHand_): Internal.InteractionResultHolder<Internal.ItemStack>;
        toString(): string;
        /**
         * @deprecated
        */
        getEnchantmentValue(): number;
        setArmorToughness(armorToughness: number): void;
        notifyAll(): void;
        getId(): string;
        isEnchantable(arg0: Internal.ItemStack_): boolean;
        getSweepHitBox(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): Internal.AABB;
        getEnchantmentLevel(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): number;
        getAllEnchantments(arg0: Internal.ItemStack_): Internal.Map<Internal.Enchantment, number>;
        wait(arg0: number): void;
        getDigSpeed(): number;
        setTier(c: Internal.Consumer_<Internal.MutableToolTier>): void;
        overrideStackedOnOther(arg0: Internal.ItemStack_, arg1: Internal.Slot_, arg2: Internal.ClickAction_, arg3: Internal.Player_): boolean;
        setFoodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        onBlockStartBreak(arg0: Internal.ItemStack_, arg1: BlockPos_, arg2: Internal.Player_): boolean;
        elytraFlightTick(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): boolean;
        getMaxDamage(arg0: Internal.ItemStack_): number;
        isFoil(arg0: Internal.ItemStack_): boolean;
        "setFoodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_): void;
        isRepairable(arg0: Internal.ItemStack_): boolean;
        isDamageable(arg0: Internal.ItemStack_): boolean;
        useOnRelease(arg0: Internal.ItemStack_): boolean;
        canAttackBlock(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        canGrindstoneRepair(arg0: Internal.ItemStack_): boolean;
        notify(): void;
        setDigSpeed(speed: number): void;
        getDescriptionId(arg0: Internal.ItemStack_): string;
        releaseUsing(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_, arg3: number): void;
        setAttackSpeed(attackSpeed: number): void;
        isBarVisible(arg0: Internal.ItemStack_): boolean;
        canWalkOnPowderedSnow(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        getUseDuration(arg0: Internal.ItemStack_): number;
        onStopUsing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): void;
        isNotReplaceableByPickAction(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: number): boolean;
        /**
         * @deprecated
        */
        getMaxStackSize(): number;
        /**
         * @deprecated
        */
        static byBlock(arg0: Internal.Block_): Internal.Item;
        isDamaged(arg0: Internal.ItemStack_): boolean;
        handler$dpg000$initializeClient(consumer: Internal.Consumer_<any>, ci: Internal.CallbackInfo_): void;
        canFitInsideContainerItems(): boolean;
        wait(): void;
        getHighlightTip(arg0: Internal.ItemStack_, arg1: net.minecraft.network.chat.Component_): net.minecraft.network.chat.Component;
        isCorrectToolForDrops(arg0: Internal.BlockState_): boolean;
        verifyTagAfterLoad(arg0: Internal.CompoundTag_): void;
        canEquip(arg0: Internal.ItemStack_, arg1: Internal.EquipmentSlot_, arg2: Internal.Entity_): boolean;
        "setFoodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        finishUsingItem(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_): Internal.ItemStack;
        setArmorKnockbackResistance(knockbackResistance: number): void;
        setFireResistant(arg0: boolean): void;
        onInventoryTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_, arg3: number, arg4: number): void;
        getEatingSound(): Internal.SoundEvent;
        hasCustomEntity(arg0: Internal.ItemStack_): boolean;
        canBeDepleted(): boolean;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientItemExtensions>): void;
        getDamage(arg0: Internal.ItemStack_): number;
        mineBlock(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.BlockState_, arg3: BlockPos_, arg4: Internal.LivingEntity_): boolean;
        wait(arg0: number, arg1: number): void;
        setNameKey(arg0: string): void;
        readShareTag(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): void;
        getEquipmentSlot(arg0: Internal.ItemStack_): Internal.EquipmentSlot;
        getLightColor(player: Internal.Player_, stack: Internal.ItemStack_): Vec3f;
        getName(arg0: Internal.ItemStack_): net.minecraft.network.chat.Component;
        /**
         * @deprecated
        */
        getDefaultAttributeModifiers(arg0: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        arch$registryName(): ResourceLocation;
        getIdLocation(): ResourceLocation;
        getAttributeModifiers(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getMod(): string;
        canElytraFly(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Item>;
        createEntity(arg0: Internal.Level_, arg1: Internal.Entity_, arg2: Internal.ItemStack_): Internal.Entity;
        setArmorProtection(armorProtection: number): void;
        getLightEmission(player: Internal.Player_, stack: Internal.ItemStack_): number;
        onEntitySwing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        getEntityLifespan(arg0: Internal.ItemStack_, arg1: Internal.Level_): number;
        inventoryTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Entity_, arg3: number, arg4: boolean): void;
        hurtEnemy(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: Internal.LivingEntity_): boolean;
        setDamage(arg0: Internal.ItemStack_, arg1: number): void;
        /**
         * @deprecated
        */
        getCraftingRemainingItem(): Internal.Item;
        getTypeItemStackKey(): Internal.ItemStackKey;
        hasCraftingRemainingItem(arg0: Internal.ItemStack_): boolean;
        shouldOverrideMultiplayerNbt(): boolean;
        getMaxStackSize(arg0: Internal.ItemStack_): number;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        static getId(arg0: Internal.Item_): number;
        overrideOtherStackedOnMe(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_, arg5: Internal.SlotAccess_): boolean;
        setFoodProperties(arg0: Internal.FoodProperties_): void;
        setCraftingRemainder(arg0: Internal.Item_): void;
        doesSneakBypassUse(arg0: Internal.ItemStack_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        shouldCauseReequipAnimation(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: boolean): boolean;
        onHorseArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Mob_): void;
        addAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_, name: string, d: number, operation: Internal.AttributeModifier$Operation_): void;
        equals(arg0: any): boolean;
        get drinkingSound(): Internal.SoundEvent
        set rarity(arg0: Internal.Rarity_)
        get fireResistant(): boolean
        get complex(): boolean
        /**
         * @deprecated
        */
        get foodProperties(): Internal.FoodProperties
        get descriptionId(): string
        get creativeTab(): string
        get typeData(): Internal.CompoundTag
        get defaultInstance(): Internal.ItemStack
        set maxStackSize(arg0: number)
        set burnTime(i: number)
        set maxDamage(arg0: number)
        get item(): Internal.Item
        get itemBuilder(): Internal.ItemBuilder
        /**
         * @deprecated
        */
        get maxDamage(): number
        get description(): net.minecraft.network.chat.Component
        get class(): typeof any
        get renderPropertiesInternal(): any
        set itemBuilder(b: Internal.ItemBuilder_)
        set craftingRemainingItemFTBL(arg0: Internal.Item_)
        set attackDamage(attackDamage: number)
        get edible(): boolean
        /**
         * @deprecated
        */
        get enchantmentValue(): number
        set armorToughness(armorToughness: number)
        get id(): string
        get digSpeed(): number
        set tier(c: Internal.Consumer_<Internal.MutableToolTier>)
        set foodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set "foodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_)
        set digSpeed(speed: number)
        set attackSpeed(attackSpeed: number)
        /**
         * @deprecated
        */
        get maxStackSize(): number
        set "foodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set armorKnockbackResistance(knockbackResistance: number)
        set fireResistant(arg0: boolean)
        get eatingSound(): Internal.SoundEvent
        set nameKey(arg0: string)
        get idLocation(): ResourceLocation
        get mod(): string
        set armorProtection(armorProtection: number)
        /**
         * @deprecated
        */
        get craftingRemainingItem(): Internal.Item
        get typeItemStackKey(): Internal.ItemStackKey
        set foodProperties(arg0: Internal.FoodProperties_)
        set craftingRemainder(arg0: Internal.Item_)
    }
    type ItemCitadelBook_ = ItemCitadelBook;
    interface RepositorySource {
        abstract loadPacks(arg0: Internal.Consumer_<Internal.Pack>): void;
        (arg0: Internal.Consumer<Internal.Pack>): void;
    }
    type RepositorySource_ = RepositorySource | ((arg0: Internal.Consumer<Internal.Pack>)=> void);
    interface GameProfileRepository {
        abstract findProfilesByNames(arg0: string[], arg1: Internal.Agent_, arg2: Internal.ProfileLookupCallback_): void;
        (arg0: string[], arg1: Internal.Agent, arg2: Internal.ProfileLookupCallback): void;
    }
    type GameProfileRepository_ = GameProfileRepository | ((arg0: string[], arg1: Internal.Agent, arg2: Internal.ProfileLookupCallback)=> void);
    class FileChannel$MapMode {
        getClass(): typeof any;
        hashCode(): number;
        toString(): string;
        wait(): void;
        notifyAll(): void;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        get class(): typeof any
        static readonly PRIVATE: (Internal.FileChannel$MapMode) & (Internal.FileChannel$MapMode);
        static readonly READ_ONLY: (Internal.FileChannel$MapMode) & (Internal.FileChannel$MapMode);
        static readonly READ_WRITE: (Internal.FileChannel$MapMode) & (Internal.FileChannel$MapMode);
    }
    type FileChannel$MapMode_ = FileChannel$MapMode;
    class RecipeSchema {
        constructor(recipeType: typeof Internal.RecipeJS, factory: Internal.Supplier_<Internal.RecipeJS>, ...keys: Internal.RecipeKey_<any>[])
        constructor(...keys: Internal.RecipeKey_<any>[])
        getClass(): typeof any;
        addConstructor(...keys: Internal.RecipeKey_<any>[]): this;
        minRequiredArguments(): number;
        toString(): string;
        notifyAll(): void;
        uniqueOutputArrayId(resultItemKey: Internal.RecipeKey_<OutputItem[]>): this;
        uniqueOutputId(resultItemKey: Internal.RecipeKey_<OutputItem>): this;
        uuid(): Internal.UUID;
        uniqueId(uniqueIdFunction: Internal.Function_<Internal.RecipeJS, string>): this;
        notify(): void;
        constructors(): Internal.Int2ObjectMap<Internal.RecipeConstructor>;
        wait(arg0: number, arg1: number): void;
        addConstructor(factory: Internal.RecipeConstructor$Factory_, ...keys: Internal.RecipeKey_<any>[]): this;
        hashCode(): number;
        inputCount(): number;
        wait(): void;
        wait(arg0: number): void;
        deserialize(type: Internal.RecipeTypeFunction_, id: ResourceLocation_, json: Internal.JsonObject_): Internal.RecipeJS;
        outputCount(): number;
        uniqueInputId(resultItemKey: Internal.RecipeKey_<InputItem>): this;
        equals(arg0: any): boolean;
        static normalizeId(id: string): string;
        get class(): typeof any
        readonly factory: Internal.Supplier<Internal.RecipeJS>;
        static readonly DEFAULT_UNIQUE_ID_FUNCTION: Internal.Function<Internal.RecipeJS, string>;
        readonly recipeType: typeof Internal.RecipeJS;
        readonly keys: Internal.RecipeKey<any>[];
        uniqueIdFunction: Internal.Function<Internal.RecipeJS, string>;
    }
    type RecipeSchema_ = RecipeSchema;
    class LevelEvent extends net.minecraftforge.eventbus.api.Event implements Internal.EventHandlerImplCommon$LevelEventAttachment {
        constructor()
        constructor(arg0: Internal.LevelAccessor_)
        getResult(): Internal.Event$Result;
        setCanceled(arg0: boolean): void;
        getClass(): typeof any;
        toString(): string;
        setPhase(arg0: Internal.EventPriority_): void;
        architectury$getAttachedLevel(): Internal.LevelAccessor;
        notifyAll(): void;
        isCanceled(): boolean;
        architectury$attachLevel(level: Internal.LevelAccessor_): void;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        hasResult(): boolean;
        setResult(arg0: Internal.Event$Result_): void;
        hashCode(): number;
        isCancelable(): boolean;
        wait(): void;
        getListenerList(): Internal.ListenerList;
        wait(arg0: number): void;
        getPhase(): Internal.EventPriority;
        equals(arg0: any): boolean;
        getLevel(): Internal.LevelAccessor;
        get result(): Internal.Event$Result
        set canceled(arg0: boolean)
        get class(): typeof any
        set phase(arg0: Internal.EventPriority_)
        get canceled(): boolean
        set result(arg0: Internal.Event$Result_)
        get cancelable(): boolean
        get listenerList(): Internal.ListenerList
        get phase(): Internal.EventPriority
        get level(): Internal.LevelAccessor
    }
    type LevelEvent_ = LevelEvent;
    class JadeProviderBuilder {
        constructor(uniqueIdentifier: ResourceLocation_)
        getClass(): typeof any;
        getDefaultPriority(): number;
        hashCode(): number;
        toString(): string;
        wait(): void;
        getUniqueIdentifier(): ResourceLocation;
        notifyAll(): void;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        setDefaultPriority(priority: number): this;
        get class(): typeof any
        get defaultPriority(): number
        get uniqueIdentifier(): ResourceLocation
        set defaultPriority(priority: number)
    }
    type JadeProviderBuilder_ = JadeProviderBuilder;
    class Object2ObjectOpenHashMap <K, V> extends Internal.AbstractObject2ObjectMap<K, V> implements Internal.Cloneable, Internal.Hash, Internal.Serializable {
        constructor(arg0: Internal.Map_<K, V>)
        constructor()
        constructor(arg0: Internal.Object2ObjectMap_<K, V>)
        constructor(arg0: Internal.Object2ObjectMap_<K, V>, arg1: number)
        constructor(arg0: Internal.Map_<K, V>, arg1: number)
        constructor(arg0: number)
        constructor(arg0: K[], arg1: V[])
        constructor(arg0: number, arg1: number)
        constructor(arg0: K[], arg1: V[], arg2: number)
        computeIfAbsent(arg0: K, arg1: Internal.Function_<K, V>): V;
        containsValue(arg0: any): boolean;
        composeShort(arg0: Internal.Short2ObjectFunction_<K>): Internal.Short2ObjectFunction<V>;
        trim(arg0: number): boolean;
        notify(): void;
        static of<K, V>(arg0: K, arg1: V, arg2: K, arg3: V, arg4: K, arg5: V): Internal.Map<K, V>;
        computeIfAbsent(arg0: K, arg1: Internal.Object2ObjectFunction_<K, V>): V;
        andThenFloat(arg0: Internal.Object2FloatFunction_<V>): Internal.Object2FloatFunction<K>;
        "computeIfAbsent(java.lang.Object,java.util.function.Function)"(arg0: K, arg1: Internal.Function_<K, V>): V;
        get(arg0: any): V;
        static copyOf<K, V>(arg0: Internal.Map_<K, V>): Internal.Map<K, V>;
        values(): Internal.Collection<any>;
        composeFloat(arg0: Internal.Float2ObjectFunction_<K>): Internal.Float2ObjectFunction<V>;
        entrySet(): Internal.ObjectSet<Internal.Map$Entry<K, V>>;
        putIfAbsent(arg0: K, arg1: V): V;
        trim(): boolean;
        apply(arg0: K): V;
        andThenReference<T>(arg0: Internal.Object2ReferenceFunction_<V, T>): Internal.Object2ReferenceFunction<K, T>;
        composeChar(arg0: Internal.Char2ObjectFunction_<K>): Internal.Char2ObjectFunction<V>;
        andThenDouble(arg0: Internal.Object2DoubleFunction_<V>): Internal.Object2DoubleFunction<K>;
        static of<K, V>(arg0: K, arg1: V, arg2: K, arg3: V, arg4: K, arg5: V, arg6: K, arg7: V, arg8: K, arg9: V, arg10: K, arg11: V): Internal.Map<K, V>;
        composeDouble(arg0: Internal.Double2ObjectFunction_<K>): Internal.Double2ObjectFunction<V>;
        /**
         * @deprecated
        */
        computeObjectIfAbsentPartial(arg0: K, arg1: Internal.Object2ObjectFunction_<K, V>): V;
        static of<K, V>(arg0: K, arg1: V, arg2: K, arg3: V, arg4: K, arg5: V, arg6: K, arg7: V): Internal.Map<K, V>;
        andThenChar(arg0: Internal.Object2CharFunction_<V>): Internal.Object2CharFunction<K>;
        static ofEntries<K, V>(...arg0: Internal.Map$Entry_<K, V>[]): Internal.Map<K, V>;
        wait(): void;
        replace(arg0: K, arg1: V, arg2: V): boolean;
        abstract defaultReturnValue(): V;
        static identity<T>(): Internal.Function<T, T>;
        abstract defaultReturnValue(arg0: V): void;
        static of<K, V>(arg0: K, arg1: V): Internal.Map<K, V>;
        clone(): any;
        getClass(): typeof any;
        replace(arg0: K, arg1: V): V;
        andThen<V>(arg0: Internal.Function_<V, V>): Internal.Function<K, V>;
        computeIfPresent(arg0: K, arg1: Internal.BiFunction_<K, V, V>): V;
        static of<K, V>(): Internal.Map<K, V>;
        getOrDefault(arg0: any, arg1: V): V;
        isEmpty(): boolean;
        composeByte(arg0: Internal.Byte2ObjectFunction_<K>): Internal.Byte2ObjectFunction<V>;
        static entry<K, V>(arg0: K, arg1: V): Internal.Map$Entry<K, V>;
        wait(arg0: number, arg1: number): void;
        containsKey(arg0: any): boolean;
        object2ObjectEntrySet(): Internal.Object2ObjectMap$FastEntrySet<K, V>;
        put(arg0: K, arg1: V): V;
        remove(arg0: any): V;
        merge(arg0: K, arg1: V, arg2: Internal.BiFunction_<V, V, V>): V;
        keySet(): Internal.ObjectSet<K>;
        forEach(arg0: Internal.BiConsumer_<K, V>): void;
        andThenLong(arg0: Internal.Object2LongFunction_<V>): Internal.Object2LongFunction<K>;
        static of<K, V>(arg0: K, arg1: V, arg2: K, arg3: V, arg4: K, arg5: V, arg6: K, arg7: V, arg8: K, arg9: V): Internal.Map<K, V>;
        toString(): string;
        andThenInt(arg0: Internal.Object2IntFunction_<V>): Internal.Object2IntFunction<K>;
        andThenShort(arg0: Internal.Object2ShortFunction_<V>): Internal.Object2ShortFunction<K>;
        compute(arg0: K, arg1: Internal.BiFunction_<K, V, V>): V;
        composeInt(arg0: Internal.Int2ObjectFunction_<K>): Internal.Int2ObjectFunction<V>;
        notifyAll(): void;
        static of<K, V>(arg0: K, arg1: V, arg2: K, arg3: V): Internal.Map<K, V>;
        remove(arg0: any, arg1: any): boolean;
        composeObject<T>(arg0: Internal.Object2ObjectFunction_<T, K>): Internal.Object2ObjectFunction<T, V>;
        putAll(arg0: Internal.Map_<K, V>): void;
        static of<K, V>(arg0: K, arg1: V, arg2: K, arg3: V, arg4: K, arg5: V, arg6: K, arg7: V, arg8: K, arg9: V, arg10: K, arg11: V, arg12: K, arg13: V, arg14: K, arg15: V): Internal.Map<K, V>;
        andThenByte(arg0: Internal.Object2ByteFunction_<V>): Internal.Object2ByteFunction<K>;
        composeReference<T>(arg0: Internal.Reference2ObjectFunction_<T, K>): Internal.Reference2ObjectFunction<T, V>;
        hashCode(): number;
        size(): number;
        composeLong(arg0: Internal.Long2ObjectFunction_<K>): Internal.Long2ObjectFunction<V>;
        static of<K, V>(arg0: K, arg1: V, arg2: K, arg3: V, arg4: K, arg5: V, arg6: K, arg7: V, arg8: K, arg9: V, arg10: K, arg11: V, arg12: K, arg13: V, arg14: K, arg15: V, arg16: K, arg17: V, arg18: K, arg19: V): Internal.Map<K, V>;
        compose<V>(arg0: Internal.Function_<V, K>): Internal.Function<V, V>;
        "computeIfAbsent(java.lang.Object,it.unimi.dsi.fastutil.objects.Object2ObjectFunction)"(arg0: K, arg1: Internal.Object2ObjectFunction_<K, V>): V;
        static of<K, V>(arg0: K, arg1: V, arg2: K, arg3: V, arg4: K, arg5: V, arg6: K, arg7: V, arg8: K, arg9: V, arg10: K, arg11: V, arg12: K, arg13: V, arg14: K, arg15: V, arg16: K, arg17: V): Internal.Map<K, V>;
        clear(): void;
        andThenObject<T>(arg0: Internal.Object2ObjectFunction_<V, T>): Internal.Object2ObjectFunction<K, T>;
        wait(arg0: number): void;
        replaceAll(arg0: Internal.BiFunction_<K, V, V>): void;
        static of<K, V>(arg0: K, arg1: V, arg2: K, arg3: V, arg4: K, arg5: V, arg6: K, arg7: V, arg8: K, arg9: V, arg10: K, arg11: V, arg12: K, arg13: V): Internal.Map<K, V>;
        equals(arg0: any): boolean;
        get class(): typeof any
        get empty(): boolean
    }
    type Object2ObjectOpenHashMap_<K, V> = Object2ObjectOpenHashMap<K, V>;
    class TransparencyType extends Internal.Enum<Internal.TransparencyType> {
        static valueOf<T extends Internal.Enum<T>>(arg0: T, arg1: string): T;
        getClass(): typeof any;
        static values(): Internal.TransparencyType[];
        "compareTo(net.irisshaders.batchedentityrendering.impl.TransparencyType)"(arg0: Internal.TransparencyType_): number;
        describeConstable(): Internal.Optional<Internal.Enum$EnumDesc<Internal.TransparencyType>>;
        toString(): string;
        notifyAll(): void;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        compareTo(arg0: any): number;
        name(): string;
        hashCode(): number;
        getDeclaringClass(): typeof Internal.TransparencyType;
        ordinal(): number;
        wait(): void;
        wait(arg0: number): void;
        "compareTo(java.lang.Object)"(arg0: any): number;
        equals(arg0: any): boolean;
        static valueOf(name: string): Internal.TransparencyType;
        compareTo(arg0: Internal.TransparencyType_): number;
        get class(): typeof any
        get declaringClass(): typeof Internal.TransparencyType
        static readonly OPAQUE_DECAL: (Internal.TransparencyType) & (Internal.TransparencyType);
        static readonly GENERAL_TRANSPARENT: (Internal.TransparencyType) & (Internal.TransparencyType);
        static readonly LINES: (Internal.TransparencyType) & (Internal.TransparencyType);
        static readonly OPAQUE: (Internal.TransparencyType) & (Internal.TransparencyType);
        static readonly DECAL: (Internal.TransparencyType) & (Internal.TransparencyType);
        static readonly WATER_MASK: (Internal.TransparencyType) & (Internal.TransparencyType);
    }
    type TransparencyType_ = "decal" | TransparencyType | "water_mask" | "opaque" | "general_transparent" | "opaque_decal" | "lines";
    /**
     * @deprecated
    */
    class Event implements Internal.Serializable {
        constructor(arg0: any, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: any)
        constructor(arg0: any, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number)
        constructor(arg0: any, arg1: number, arg2: any)
        getClass(): typeof any;
        toString(): string;
        notifyAll(): void;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        shiftDown(): boolean;
        metaDown(): boolean;
        translate(arg0: number, arg1: number): void;
        controlDown(): boolean;
        hashCode(): number;
        wait(): void;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        get class(): typeof any
        static readonly F5: (1012) & (number);
        static readonly WINDOW_DESTROY: (201) & (number);
        static readonly F1: (1008) & (number);
        static readonly DOWN: (1005) & (number);
        static readonly SCROLL_ABSOLUTE: (605) & (number);
        static readonly F11: (1018) & (number);
        static readonly SCROLL_END: (607) & (number);
        static readonly MOUSE_DOWN: (501) & (number);
        modifiers: number;
        static readonly SCROLL_PAGE_UP: (603) & (number);
        when: number;
        static readonly ALT_MASK: (8) & (number);
        static readonly SCROLL_BEGIN: (606) & (number);
        static readonly UP: (1004) & (number);
        static readonly BACK_SPACE: (8) & (number);
        static readonly WINDOW_MOVED: (205) & (number);
        id: number;
        static readonly F6: (1013) & (number);
        static readonly KEY_RELEASE: (402) & (number);
        static readonly F2: (1009) & (number);
        static readonly PRINT_SCREEN: (1020) & (number);
        static readonly PGDN: (1003) & (number);
        static readonly NUM_LOCK: (1023) & (number);
        static readonly ENTER: (10) & (number);
        static readonly F10: (1017) & (number);
        static readonly CAPS_LOCK: (1022) & (number);
        static readonly SCROLL_LOCK: (1021) & (number);
        static readonly SHIFT_MASK: (1) & (number);
        static readonly CTRL_MASK: (2) & (number);
        static readonly DELETE: (127) & (number);
        static readonly PGUP: (1002) & (number);
        static readonly ACTION_EVENT: (1001) & (number);
        target: any;
        static readonly F7: (1014) & (number);
        static readonly SCROLL_PAGE_DOWN: (604) & (number);
        clickCount: number;
        static readonly F3: (1010) & (number);
        static readonly INSERT: (1025) & (number);
        static readonly RIGHT: (1007) & (number);
        static readonly KEY_ACTION_RELEASE: (404) & (number);
        arg: any;
        static readonly HOME: (1000) & (number);
        evt: Internal.Event;
        static readonly LIST_SELECT: (701) & (number);
        static readonly TAB: (9) & (number);
        static readonly KEY_PRESS: (401) & (number);
        static readonly WINDOW_ICONIFY: (203) & (number);
        static readonly END: (1001) & (number);
        x: number;
        static readonly MOUSE_MOVE: (503) & (number);
        static readonly SCROLL_LINE_UP: (601) & (number);
        static readonly F8: (1015) & (number);
        static readonly MOUSE_DRAG: (506) & (number);
        static readonly LOAD_FILE: (1002) & (number);
        static readonly WINDOW_EXPOSE: (202) & (number);
        static readonly F4: (1011) & (number);
        static readonly SCROLL_LINE_DOWN: (602) & (number);
        key: number;
        static readonly F12: (1019) & (number);
        static readonly KEY_ACTION: (403) & (number);
        static readonly SAVE_FILE: (1003) & (number);
        static readonly LOST_FOCUS: (1005) & (number);
        static readonly ESCAPE: (27) & (number);
        static readonly WINDOW_DEICONIFY: (204) & (number);
        static readonly META_MASK: (4) & (number);
        static readonly MOUSE_ENTER: (504) & (number);
        static readonly GOT_FOCUS: (1004) & (number);
        y: number;
        static readonly PAUSE: (1024) & (number);
        static readonly MOUSE_EXIT: (505) & (number);
        static readonly LEFT: (1006) & (number);
        static readonly MOUSE_UP: (502) & (number);
        static readonly LIST_DESELECT: (702) & (number);
        static readonly F9: (1016) & (number);
    }
    type Event_ = Event;
    class CreativeModeTab$Row extends Internal.Enum<Internal.CreativeModeTab$Row> {
        static valueOf<T extends Internal.Enum<T>>(arg0: T, arg1: string): T;
        getClass(): typeof any;
        static values(): Internal.CreativeModeTab$Row[];
        getDeclaringClass(): typeof Internal.CreativeModeTab$Row;
        toString(): string;
        notifyAll(): void;
        static valueOf(arg0: string): Internal.CreativeModeTab$Row;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        compareTo(arg0: any): number;
        name(): string;
        describeConstable(): Internal.Optional<Internal.Enum$EnumDesc<Internal.CreativeModeTab$Row>>;
        hashCode(): number;
        ordinal(): number;
        wait(): void;
        wait(arg0: number): void;
        "compareTo(java.lang.Object)"(arg0: any): number;
        equals(arg0: any): boolean;
        "compareTo(net.minecraft.world.item.CreativeModeTab$Row)"(arg0: Internal.CreativeModeTab$Row_): number;
        compareTo(arg0: Internal.CreativeModeTab$Row_): number;
        get class(): typeof any
        get declaringClass(): typeof Internal.CreativeModeTab$Row
        static readonly BOTTOM: (Internal.CreativeModeTab$Row) & (Internal.CreativeModeTab$Row);
        static readonly TOP: (Internal.CreativeModeTab$Row) & (Internal.CreativeModeTab$Row);
    }
    type CreativeModeTab$Row_ = "bottom" | CreativeModeTab$Row | "top";
    interface BaseDrawerItem extends Internal.PickupBagItem, Internal.OverlayInsertItem {
        setItem(arg0: Internal.ItemStack_, arg1: Internal.Item_, arg2: Internal.Player_): void;
        canAccept(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        loadFromInventory(arg0: number, arg1: number, arg2: Internal.Item_, arg3: Internal.Player_): number;
        abstract insert(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.Player_): void;
        getStackingFactor(arg0: Internal.ItemStack_): number;
        getStacking(arg0: Internal.CompoundTag_): number;
        attemptInsert(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.ServerPlayer_): void;
        getItem(arg0: Internal.ItemStack_): Internal.Item;
        clientInsert(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: number, arg3: Internal.Slot_, arg4: boolean, arg5: number, arg6: Internal.DrawerInteractToServer$Callback_, arg7: number): boolean;
        mayClientTake(): boolean;
        serverTrigger(arg0: Internal.ItemStack_, arg1: Internal.ServerPlayer_): void;
        "getStacking(net.minecraft.world.item.ItemStack)"(arg0: Internal.ItemStack_): number;
        abstract takeItem(arg0: Internal.ItemStack_, arg1: number, arg2: Internal.Player_, arg3: boolean): Internal.ItemStack;
        abstract canSetNewItem(arg0: Internal.ItemStack_): boolean;
        getStacking(): number;
        abstract backgroundLoc(): ResourceLocation;
        getStacking(arg0: Internal.ItemStack_): number;
        sendInsertPacket(arg0: number, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.DrawerInteractToServer$Callback_, arg4: number): void;
        takeItem(arg0: Internal.ItemStack_, arg1: Internal.ServerPlayer_): Internal.ItemStack;
        "getStacking(net.minecraft.nbt.CompoundTag)"(arg0: Internal.CompoundTag_): number;
        setStackingFactor(arg0: Internal.ItemStack_, arg1: number): Internal.ItemStack;
        get stacking(): number
        readonly STACKING: ("StackingFactor") & (string);
        readonly KEY: ("drawerItem") & (string);
        readonly MAX_FACTOR: (8) & (number);
    }
    type BaseDrawerItem_ = BaseDrawerItem;
    interface ExclusionStrategy {
        abstract shouldSkipClass(arg0: typeof any): boolean;
        abstract shouldSkipField(arg0: Internal.FieldAttributes_): boolean;
    }
    type ExclusionStrategy_ = ExclusionStrategy;
    class BombItem extends Internal.Item {
        constructor(builder: Internal.Item$Properties_)
        constructor(builder: Internal.Item$Properties_, type: Internal.BombEntity$BombType_, glint: boolean)
        getDrinkingSound(): Internal.SoundEvent;
        getShareTag(arg0: Internal.ItemStack_): Internal.CompoundTag;
        setRarity(arg0: Internal.Rarity_): void;
        getType(): Internal.BombEntity$BombType;
        isEnderMask(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.EnderMan_): boolean;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        getDestroySpeed(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): number;
        getBurnTime(arg0: Internal.ItemStack_, arg1: Internal.RecipeType_<any>): number;
        moonlight$addAdditionalBehavior(placementOverride: Internal.AdditionalItemPlacement_): void;
        /**
         * @deprecated
        */
        onDestroyed(arg0: Internal.ItemEntity_): void;
        isFireResistant(): boolean;
        onItemUseFirst(arg0: Internal.ItemStack_, arg1: Internal.UseOnContext_): Internal.InteractionResult;
        onCraftedBy(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        isComplex(): boolean;
        isCorrectToolForDrops(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): boolean;
        isPiglinCurrency(arg0: Internal.ItemStack_): boolean;
        getEnchantmentValue(arg0: Internal.ItemStack_): number;
        canDisableShield(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.LivingEntity_, arg3: Internal.LivingEntity_): boolean;
        onUseTick(arg0: Internal.Level_, arg1: Internal.LivingEntity_, arg2: Internal.ItemStack_, arg3: number): void;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        canBeHurtBy(arg0: Internal.DamageSource_): boolean;
        /**
         * @deprecated
        */
        getFoodProperties(): Internal.FoodProperties;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): boolean;
        getDescriptionId(): string;
        getUseAnimation(arg0: Internal.ItemStack_): Internal.UseAnim;
        isValidRepairItem(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        moonlight$getClientAnimationExtension(): any;
        getXpRepairRatio(arg0: Internal.ItemStack_): number;
        isBookEnchantable(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getCreativeTab(): string;
        initCapabilities(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): Internal.ICapabilityProvider;
        asItem(): Internal.Item;
        onDroppedByPlayer(arg0: Internal.ItemStack_, arg1: Internal.Player_): boolean;
        getTypeData(): Internal.CompoundTag;
        getDefaultInstance(): Internal.ItemStack;
        getDefaultTooltipHideFlags(arg0: Internal.ItemStack_): number;
        getCreatorModId(arg0: Internal.ItemStack_): string;
        canContinueUsing(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        setMaxStackSize(arg0: number): void;
        setBurnTime(i: number): void;
        getFoodProperties(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): Internal.FoodProperties;
        getBarWidth(arg0: Internal.ItemStack_): number;
        setMaxDamage(arg0: number): void;
        getItem(): Internal.Item;
        getBarColor(arg0: Internal.ItemStack_): number;
        onDestroyed(arg0: Internal.ItemEntity_, arg1: Internal.DamageSource_): void;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        onLeftClickEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): boolean;
        getItemBuilder(): Internal.ItemBuilder;
        makesPiglinsNeutral(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxDamage(): number;
        removeAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_): void;
        asIngredient(): Internal.Ingredient;
        getDescription(): net.minecraft.network.chat.Component;
        /**
         * @deprecated
        */
        hasCraftingRemainingItem(): boolean;
        canPerformAction(arg0: Internal.ItemStack_, arg1: Internal.ToolAction_): boolean;
        getClass(): typeof any;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        static byId(arg0: number): Internal.Item;
        getRenderPropertiesInternal(): any;
        onEntityItemUpdate(arg0: Internal.ItemStack_, arg1: Internal.ItemEntity_): boolean;
        interactLivingEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.LivingEntity_, arg3: Internal.InteractionHand_): Internal.InteractionResult;
        moonlight$getAdditionalBehavior(): Internal.AdditionalItemPlacement;
        moonlight$setClientAnimationExtension(obj: any): void;
        getCraftingRemainingItem(arg0: Internal.ItemStack_): Internal.ItemStack;
        useOn(arg0: Internal.UseOnContext_): Internal.InteractionResult;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        onArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        getRarity(stack: Internal.ItemStack_): Internal.Rarity;
        setItemBuilder(b: Internal.ItemBuilder_): void;
        shouldCauseBlockBreakReset(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        damageItem<T extends Internal.LivingEntity>(arg0: Internal.ItemStack_, arg1: number, arg2: T, arg3: Internal.Consumer_<T>): number;
        setCraftingRemainingItemFTBL(arg0: Internal.Item_): void;
        attachCapability(capabilityBuilder: Internal.CapabilityBuilder_<any, any, any>): void;
        setAttackDamage(attackDamage: number): void;
        isEdible(): boolean;
        getTooltipImage(arg0: Internal.ItemStack_): Internal.Optional<Internal.TooltipComponent>;
        arch$holder(): Internal.Holder<Internal.Item>;
        getArmorTexture(arg0: Internal.ItemStack_, arg1: Internal.Entity_, arg2: Internal.EquipmentSlot_, arg3: string): string;
        getAttributes(attribute: Internal.Attribute_): Internal.List<Internal.AttributeModifier>;
        use(worldIn: Internal.Level_, playerIn: Internal.Player_, handIn: Internal.InteractionHand_): Internal.InteractionResultHolder<Internal.ItemStack>;
        toString(): string;
        /**
         * @deprecated
        */
        getEnchantmentValue(): number;
        setArmorToughness(armorToughness: number): void;
        notifyAll(): void;
        getId(): string;
        isEnchantable(arg0: Internal.ItemStack_): boolean;
        getSweepHitBox(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): Internal.AABB;
        getEnchantmentLevel(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): number;
        getAllEnchantments(arg0: Internal.ItemStack_): Internal.Map<Internal.Enchantment, number>;
        wait(arg0: number): void;
        getDigSpeed(): number;
        setTier(c: Internal.Consumer_<Internal.MutableToolTier>): void;
        overrideStackedOnOther(arg0: Internal.ItemStack_, arg1: Internal.Slot_, arg2: Internal.ClickAction_, arg3: Internal.Player_): boolean;
        setFoodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        onBlockStartBreak(arg0: Internal.ItemStack_, arg1: BlockPos_, arg2: Internal.Player_): boolean;
        elytraFlightTick(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): boolean;
        getMaxDamage(arg0: Internal.ItemStack_): number;
        isFoil(stack: Internal.ItemStack_): boolean;
        "setFoodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_): void;
        isRepairable(arg0: Internal.ItemStack_): boolean;
        isDamageable(arg0: Internal.ItemStack_): boolean;
        useOnRelease(arg0: Internal.ItemStack_): boolean;
        canAttackBlock(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        canGrindstoneRepair(arg0: Internal.ItemStack_): boolean;
        notify(): void;
        setDigSpeed(speed: number): void;
        getDescriptionId(arg0: Internal.ItemStack_): string;
        releaseUsing(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_, arg3: number): void;
        setAttackSpeed(attackSpeed: number): void;
        isBarVisible(arg0: Internal.ItemStack_): boolean;
        canWalkOnPowderedSnow(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        getUseDuration(arg0: Internal.ItemStack_): number;
        onStopUsing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): void;
        isNotReplaceableByPickAction(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: number): boolean;
        /**
         * @deprecated
        */
        getMaxStackSize(): number;
        /**
         * @deprecated
        */
        static byBlock(arg0: Internal.Block_): Internal.Item;
        isDamaged(arg0: Internal.ItemStack_): boolean;
        handler$dpg000$initializeClient(consumer: Internal.Consumer_<any>, ci: Internal.CallbackInfo_): void;
        canFitInsideContainerItems(): boolean;
        wait(): void;
        getHighlightTip(arg0: Internal.ItemStack_, arg1: net.minecraft.network.chat.Component_): net.minecraft.network.chat.Component;
        isCorrectToolForDrops(arg0: Internal.BlockState_): boolean;
        verifyTagAfterLoad(arg0: Internal.CompoundTag_): void;
        canEquip(arg0: Internal.ItemStack_, arg1: Internal.EquipmentSlot_, arg2: Internal.Entity_): boolean;
        "setFoodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        finishUsingItem(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_): Internal.ItemStack;
        setArmorKnockbackResistance(knockbackResistance: number): void;
        setFireResistant(arg0: boolean): void;
        onInventoryTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_, arg3: number, arg4: number): void;
        getEatingSound(): Internal.SoundEvent;
        hasCustomEntity(arg0: Internal.ItemStack_): boolean;
        canBeDepleted(): boolean;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientItemExtensions>): void;
        getDamage(arg0: Internal.ItemStack_): number;
        mineBlock(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.BlockState_, arg3: BlockPos_, arg4: Internal.LivingEntity_): boolean;
        wait(arg0: number, arg1: number): void;
        setNameKey(arg0: string): void;
        readShareTag(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): void;
        getEquipmentSlot(arg0: Internal.ItemStack_): Internal.EquipmentSlot;
        getLightColor(player: Internal.Player_, stack: Internal.ItemStack_): Vec3f;
        getName(arg0: Internal.ItemStack_): net.minecraft.network.chat.Component;
        /**
         * @deprecated
        */
        getDefaultAttributeModifiers(arg0: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        arch$registryName(): ResourceLocation;
        getIdLocation(): ResourceLocation;
        getAttributeModifiers(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getMod(): string;
        canElytraFly(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Item>;
        createEntity(arg0: Internal.Level_, arg1: Internal.Entity_, arg2: Internal.ItemStack_): Internal.Entity;
        setArmorProtection(armorProtection: number): void;
        getLightEmission(player: Internal.Player_, stack: Internal.ItemStack_): number;
        onEntitySwing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        getEntityLifespan(arg0: Internal.ItemStack_, arg1: Internal.Level_): number;
        inventoryTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Entity_, arg3: number, arg4: boolean): void;
        hurtEnemy(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: Internal.LivingEntity_): boolean;
        setDamage(arg0: Internal.ItemStack_, arg1: number): void;
        /**
         * @deprecated
        */
        getCraftingRemainingItem(): Internal.Item;
        getTypeItemStackKey(): Internal.ItemStackKey;
        hasCraftingRemainingItem(arg0: Internal.ItemStack_): boolean;
        shouldOverrideMultiplayerNbt(): boolean;
        getMaxStackSize(arg0: Internal.ItemStack_): number;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        static getId(arg0: Internal.Item_): number;
        overrideOtherStackedOnMe(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_, arg5: Internal.SlotAccess_): boolean;
        setFoodProperties(arg0: Internal.FoodProperties_): void;
        setCraftingRemainder(arg0: Internal.Item_): void;
        doesSneakBypassUse(arg0: Internal.ItemStack_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        shouldCauseReequipAnimation(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: boolean): boolean;
        onHorseArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Mob_): void;
        addAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_, name: string, d: number, operation: Internal.AttributeModifier$Operation_): void;
        equals(arg0: any): boolean;
        get drinkingSound(): Internal.SoundEvent
        set rarity(arg0: Internal.Rarity_)
        get type(): Internal.BombEntity$BombType
        get fireResistant(): boolean
        get complex(): boolean
        /**
         * @deprecated
        */
        get foodProperties(): Internal.FoodProperties
        get descriptionId(): string
        get creativeTab(): string
        get typeData(): Internal.CompoundTag
        get defaultInstance(): Internal.ItemStack
        set maxStackSize(arg0: number)
        set burnTime(i: number)
        set maxDamage(arg0: number)
        get item(): Internal.Item
        get itemBuilder(): Internal.ItemBuilder
        /**
         * @deprecated
        */
        get maxDamage(): number
        get description(): net.minecraft.network.chat.Component
        get class(): typeof any
        get renderPropertiesInternal(): any
        set itemBuilder(b: Internal.ItemBuilder_)
        set craftingRemainingItemFTBL(arg0: Internal.Item_)
        set attackDamage(attackDamage: number)
        get edible(): boolean
        /**
         * @deprecated
        */
        get enchantmentValue(): number
        set armorToughness(armorToughness: number)
        get id(): string
        get digSpeed(): number
        set tier(c: Internal.Consumer_<Internal.MutableToolTier>)
        set foodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set "foodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_)
        set digSpeed(speed: number)
        set attackSpeed(attackSpeed: number)
        /**
         * @deprecated
        */
        get maxStackSize(): number
        set "foodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set armorKnockbackResistance(knockbackResistance: number)
        set fireResistant(arg0: boolean)
        get eatingSound(): Internal.SoundEvent
        set nameKey(arg0: string)
        get idLocation(): ResourceLocation
        get mod(): string
        set armorProtection(armorProtection: number)
        /**
         * @deprecated
        */
        get craftingRemainingItem(): Internal.Item
        get typeItemStackKey(): Internal.ItemStackKey
        set foodProperties(arg0: Internal.FoodProperties_)
        set craftingRemainder(arg0: Internal.Item_)
    }
    type BombItem_ = BombItem;
    class NumberFormat$Style extends Internal.Enum<Internal.NumberFormat$Style> {
        static valueOf<T extends Internal.Enum<T>>(arg0: T, arg1: string): T;
        getClass(): typeof any;
        toString(): string;
        static valueOf(arg0: string): Internal.NumberFormat$Style;
        notifyAll(): void;
        "compareTo(java.text.NumberFormat$Style)"(arg0: Internal.NumberFormat$Style_): number;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        compareTo(arg0: any): number;
        name(): string;
        hashCode(): number;
        static values(): Internal.NumberFormat$Style[];
        ordinal(): number;
        wait(): void;
        wait(arg0: number): void;
        compareTo(arg0: Internal.NumberFormat$Style_): number;
        "compareTo(java.lang.Object)"(arg0: any): number;
        equals(arg0: any): boolean;
        describeConstable(): Internal.Optional<Internal.Enum$EnumDesc<Internal.NumberFormat$Style>>;
        getDeclaringClass(): typeof Internal.NumberFormat$Style;
        get class(): typeof any
        get declaringClass(): typeof Internal.NumberFormat$Style
        static readonly LONG: (Internal.NumberFormat$Style) & (Internal.NumberFormat$Style);
        static readonly SHORT: (Internal.NumberFormat$Style) & (Internal.NumberFormat$Style);
    }
    type NumberFormat$Style_ = NumberFormat$Style | "short" | "long";
    class DamageScaling extends Internal.Enum<Internal.DamageScaling> implements Internal.StringRepresentable {
        static valueOf<T extends Internal.Enum<T>>(arg0: T, arg1: string): T;
        getClass(): typeof any;
        "compareTo(net.minecraft.world.damagesource.DamageScaling)"(arg0: Internal.DamageScaling_): number;
        static fromEnumWithMapping<E extends Internal.Enum<E> & Internal.StringRepresentable>(arg0: Internal.Supplier_<E[]>, arg1: Internal.Function_<string, string>): Internal.StringRepresentable$EnumCodec<E>;
        toString(): string;
        static valueOf(arg0: string): Internal.DamageScaling;
        getSerializedName(): string;
        notifyAll(): void;
        getDeclaringClass(): typeof Internal.DamageScaling;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        compareTo(arg0: any): number;
        name(): string;
        compareTo(arg0: Internal.DamageScaling_): number;
        hashCode(): number;
        static values(): Internal.DamageScaling[];
        static fromEnum<E extends Internal.Enum<E> & Internal.StringRepresentable>(arg0: Internal.Supplier_<E[]>): Internal.StringRepresentable$EnumCodec<E>;
        static keys(arg0: Internal.StringRepresentable_[]): Internal.Keyable;
        ordinal(): number;
        wait(): void;
        wait(arg0: number): void;
        describeConstable(): Internal.Optional<Internal.Enum$EnumDesc<Internal.DamageScaling>>;
        "compareTo(java.lang.Object)"(arg0: any): number;
        equals(arg0: any): boolean;
        get class(): typeof any
        get serializedName(): string
        get declaringClass(): typeof Internal.DamageScaling
        static readonly NEVER: (Internal.DamageScaling) & (Internal.DamageScaling);
        static readonly WHEN_CAUSED_BY_LIVING_NON_PLAYER: (Internal.DamageScaling) & (Internal.DamageScaling);
        static readonly ALWAYS: (Internal.DamageScaling) & (Internal.DamageScaling);
        static readonly CODEC: Internal.Codec<Internal.DamageScaling>;
    }
    type DamageScaling_ = DamageScaling | "never" | "always" | "when_caused_by_living_non_player";
    abstract class EnhancedTerrainAdaptation {
        getClass(): typeof any;
        getKernelDistance(): number;
        abstract type(): Internal.EnhancedTerrainAdaptationType<any>;
        toString(): string;
        getKernelSize(): number;
        getKernelRadius(): number;
        computeDensityFactor(arg0: number, arg1: number, arg2: number, arg3: number): number;
        notifyAll(): void;
        beards(): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        getKernel(): number[];
        hashCode(): number;
        carves(): boolean;
        wait(): void;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        get class(): typeof any
        get kernelDistance(): number
        get kernelSize(): number
        get kernelRadius(): number
        get kernel(): number[]
        static readonly NONE: (Internal.NoneAdaptation) & (Internal.EnhancedTerrainAdaptation);
    }
    type EnhancedTerrainAdaptation_ = EnhancedTerrainAdaptation;
    interface Freezable <T> extends Internal.Cloneable {
        abstract cloneAsThawed(): T;
        abstract freeze(): T;
        abstract isFrozen(): boolean;
        get frozen(): boolean
    }
    type Freezable_<T> = Freezable<T>;
    class RecipeType$1 implements Internal.RecipeType<T> {
        getClass(): typeof any;
        hashCode(): number;
        toString(): string;
        wait(): void;
        notifyAll(): void;
        wait(arg0: number): void;
        static simple<T extends Internal.Recipe<any>>(arg0: ResourceLocation_): Internal.RecipeType<T>;
        static register<T extends Internal.Recipe<any>>(arg0: string): Internal.RecipeType<T>;
        equals(arg0: any): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        get class(): typeof any
    }
    type RecipeType$1_ = RecipeType$1;
    class RecipeType$2 implements Internal.RecipeType<T> {
        getClass(): typeof any;
        hashCode(): number;
        toString(): string;
        wait(): void;
        notifyAll(): void;
        wait(arg0: number): void;
        static simple<T extends Internal.Recipe<any>>(arg0: ResourceLocation_): Internal.RecipeType<T>;
        static register<T extends Internal.Recipe<any>>(arg0: string): Internal.RecipeType<T>;
        equals(arg0: any): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        get class(): typeof any
    }
    type RecipeType$2_ = RecipeType$2;
    class GenericLootEventJS extends Internal.LootEventJS {
        constructor(c: Internal.Map_<ResourceLocation, Internal.JsonElement>)
        removeAll(): void;
        getClass(): typeof any;
        /**
         * Stops the event with default exit value. Execution will be stopped **immediately**.
         * 
         * `exit` denotes a `default` outcome.
        */
        exit(): any;
        modify(id: ResourceLocation_, b: Internal.Consumer_<Internal.LootBuilder>): void;
        /**
         * Cancels the event with the given exit value. Execution will be stopped **immediately**.
         * 
         * `cancel` denotes a `false` outcome.
        */
        cancel(value: any): any;
        toString(): string;
        notifyAll(): void;
        /**
         * Stops the event with the given exit value. Execution will be stopped **immediately**.
         * 
         * `exit` denotes a `default` outcome.
        */
        exit(value: any): any;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        /**
         * Stops the event with the given exit value. Execution will be stopped **immediately**.
         * 
         * `success` denotes a `true` outcome.
        */
        success(value: any): any;
        hashCode(): number;
        addJson(id: ResourceLocation_, json: Internal.JsonObject_): void;
        wait(): void;
        getType(): string;
        addGeneric(id: ResourceLocation_, b: Internal.Consumer_<Internal.LootBuilder>): void;
        /**
         * Cancels the event with default exit value. Execution will be stopped **immediately**.
         * 
         * `cancel` denotes a `false` outcome.
        */
        cancel(): any;
        wait(arg0: number): void;
        /**
         * Stops the event with default exit value. Execution will be stopped **immediately**.
         * 
         * `success` denotes a `true` outcome.
        */
        success(): any;
        equals(arg0: any): boolean;
        getDirectory(): string;
        get class(): typeof any
        get type(): string
        get directory(): string
    }
    type GenericLootEventJS_ = GenericLootEventJS;
    abstract class ContainerScreenEvent extends net.minecraftforge.eventbus.api.Event {
        constructor()
        getResult(): Internal.Event$Result;
        setCanceled(arg0: boolean): void;
        getClass(): typeof any;
        toString(): string;
        setPhase(arg0: Internal.EventPriority_): void;
        notifyAll(): void;
        isCanceled(): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        hasResult(): boolean;
        setResult(arg0: Internal.Event$Result_): void;
        hashCode(): number;
        isCancelable(): boolean;
        getContainerScreen(): Internal.AbstractContainerScreen<any>;
        wait(): void;
        getListenerList(): Internal.ListenerList;
        wait(arg0: number): void;
        getPhase(): Internal.EventPriority;
        equals(arg0: any): boolean;
        get result(): Internal.Event$Result
        set canceled(arg0: boolean)
        get class(): typeof any
        set phase(arg0: Internal.EventPriority_)
        get canceled(): boolean
        set result(arg0: Internal.Event$Result_)
        get cancelable(): boolean
        get containerScreen(): Internal.AbstractContainerScreen<any>
        get listenerList(): Internal.ListenerList
        get phase(): Internal.EventPriority
    }
    type ContainerScreenEvent_ = ContainerScreenEvent;
    interface MapDecoder <A> extends Internal.Keyable {
        abstract decode<T>(arg0: Internal.DynamicOps_<T>, arg1: Internal.MapLike_<T>): Internal.DataResult<A>;
        withLifecycle(arg0: Internal.Lifecycle_): this;
        abstract compressor<T>(arg0: Internal.DynamicOps_<T>): Internal.KeyCompressor<T>;
        map<B>(arg0: Internal.Function_<A, B>): Internal.MapDecoder<B>;
        compressedDecode<T>(arg0: Internal.DynamicOps_<T>, arg1: T): Internal.DataResult<A>;
        decoder(): com.mojang.serialization.Decoder<A>;
        abstract keys<T>(arg0: Internal.DynamicOps_<T>): Internal.Stream<T>;
        ap<E>(arg0: Internal.MapDecoder_<Internal.Function<A, E>>): Internal.MapDecoder<E>;
        forStrings(arg0: Internal.Supplier_<Internal.Stream<string>>): Internal.Keyable;
        flatMap<B>(arg0: Internal.Function_<A, Internal.DataResult<B>>): Internal.MapDecoder<B>;
    }
    type MapDecoder_<A> = MapDecoder<A>;
    class Exception extends Internal.Throwable {
        constructor()
        constructor(arg0: string, arg1: Internal.Throwable_)
        constructor(arg0: Internal.Throwable_)
        constructor(arg0: string)
        getClass(): typeof any;
        "printStackTrace(java.io.PrintStream)"(arg0: Internal.PrintStream_): void;
        toString(): string;
        getMessage(): string;
        notifyAll(): void;
        "printStackTrace(java.io.PrintWriter)"(arg0: Internal.PrintWriter_): void;
        getCause(): Internal.Throwable;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        getStackTrace(): Internal.StackTraceElement[];
        printStackTrace(arg0: Internal.PrintWriter_): void;
        hashCode(): number;
        getSuppressed(): Internal.Throwable[];
        fillInStackTrace(): Internal.Throwable;
        addSuppressed(arg0: Internal.Throwable_): void;
        wait(): void;
        printStackTrace(): void;
        initCause(arg0: Internal.Throwable_): Internal.Throwable;
        wait(arg0: number): void;
        setStackTrace(arg0: Internal.StackTraceElement_[]): void;
        printStackTrace(arg0: Internal.PrintStream_): void;
        equals(arg0: any): boolean;
        getLocalizedMessage(): string;
        get class(): typeof any
        get message(): string
        get cause(): Internal.Throwable
        get stackTrace(): Internal.StackTraceElement[]
        get suppressed(): Internal.Throwable[]
        set stackTrace(arg0: Internal.StackTraceElement_[])
        get localizedMessage(): string
    }
    type Exception_ = Exception;
    class FlatLayerInfo {
        constructor(arg0: number, arg1: Internal.Block_)
        getClass(): typeof any;
        hashCode(): number;
        toString(): string;
        getBlockState(): Internal.BlockState;
        wait(): void;
        notifyAll(): void;
        wait(arg0: number): void;
        getHeight(): number;
        equals(arg0: any): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        get class(): typeof any
        get blockState(): Internal.BlockState
        get height(): number
        static readonly CODEC: Internal.Codec<Internal.FlatLayerInfo>;
    }
    type FlatLayerInfo_ = FlatLayerInfo;
}
declare namespace com.finndog.mss.mixins.structures {
    interface SinglePoolElementAccessor {
        abstract mss_getTemplate(): Internal.Either<ResourceLocation, Internal.StructureTemplate>;
        abstract callGetTemplate(arg0: Internal.StructureTemplateManager_): Internal.StructureTemplate;
        abstract mss_getProcessors(): Internal.Holder<Internal.StructureProcessorList>;
    }
    type SinglePoolElementAccessor_ = SinglePoolElementAccessor;
}
declare namespace dev.latvian.mods.rhino {
    interface Function extends dev.latvian.mods.rhino.Callable, Internal.Scriptable {
        abstract "delete(dev.latvian.mods.rhino.Context,int)"(arg0: Internal.Context_, arg1: number): void;
        abstract call(arg0: Internal.Context_, arg1: Internal.Scriptable_, arg2: Internal.Scriptable_, arg3: any[]): any;
        abstract hasInstance(arg0: Internal.Context_, arg1: Internal.Scriptable_): boolean;
        abstract "get(dev.latvian.mods.rhino.Context,java.lang.String,dev.latvian.mods.rhino.Scriptable)"(arg0: Internal.Context_, arg1: string, arg2: Internal.Scriptable_): any;
        abstract get(arg0: Internal.Context_, arg1: number, arg2: Internal.Scriptable_): any;
        abstract put(arg0: Internal.Context_, arg1: number, arg2: Internal.Scriptable_, arg3: any): void;
        abstract getClassName(): string;
        abstract "delete"(arg0: Internal.Context_, arg1: string): void;
        abstract "has(dev.latvian.mods.rhino.Context,java.lang.String,dev.latvian.mods.rhino.Scriptable)"(arg0: Internal.Context_, arg1: string, arg2: Internal.Scriptable_): boolean;
        abstract "delete"(arg0: Internal.Context_, arg1: number): void;
        abstract setParentScope(arg0: Internal.Scriptable_): void;
        abstract "put(dev.latvian.mods.rhino.Context,java.lang.String,dev.latvian.mods.rhino.Scriptable,java.lang.Object)"(arg0: Internal.Context_, arg1: string, arg2: Internal.Scriptable_, arg3: any): void;
        abstract has(arg0: Internal.Context_, arg1: string, arg2: Internal.Scriptable_): boolean;
        abstract getDefaultValue(arg0: Internal.Context_, arg1: typeof any): any;
        abstract has(arg0: Internal.Context_, arg1: number, arg2: Internal.Scriptable_): boolean;
        getTypeOf(): Internal.MemberType;
        abstract getIds(arg0: Internal.Context_): any[];
        abstract get(arg0: Internal.Context_, arg1: string, arg2: Internal.Scriptable_): any;
        abstract getPrototype(arg0: Internal.Context_): Internal.Scriptable;
        abstract getParentScope(): Internal.Scriptable;
        abstract "put(dev.latvian.mods.rhino.Context,int,dev.latvian.mods.rhino.Scriptable,java.lang.Object)"(arg0: Internal.Context_, arg1: number, arg2: Internal.Scriptable_, arg3: any): void;
        getAllIds(cx: Internal.Context_): any[];
        enumerationIteratorHasNext(cx: Internal.Context_, currentId: Internal.Consumer_<any>): boolean;
        abstract "delete(dev.latvian.mods.rhino.Context,java.lang.String)"(arg0: Internal.Context_, arg1: string): void;
        abstract "get(dev.latvian.mods.rhino.Context,int,dev.latvian.mods.rhino.Scriptable)"(arg0: Internal.Context_, arg1: number, arg2: Internal.Scriptable_): any;
        enumerationIteratorNext(cx: Internal.Context_, currentId: Internal.Consumer_<any>): boolean;
        abstract "has(dev.latvian.mods.rhino.Context,int,dev.latvian.mods.rhino.Scriptable)"(arg0: Internal.Context_, arg1: number, arg2: Internal.Scriptable_): boolean;
        abstract setPrototype(arg0: Internal.Scriptable_): void;
        abstract put(arg0: Internal.Context_, arg1: string, arg2: Internal.Scriptable_, arg3: any): void;
        abstract construct(arg0: Internal.Context_, arg1: Internal.Scriptable_, arg2: any[]): Internal.Scriptable;
        get className(): string
        set parentScope(arg0: Internal.Scriptable_)
        get typeOf(): Internal.MemberType
        get parentScope(): Internal.Scriptable
        set prototype(arg0: Internal.Scriptable_)
    }
    type Function_ = Function;
}
